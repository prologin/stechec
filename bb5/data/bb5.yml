conf:
  package_name: bb5
  client_rule_lib: bb5_client_rules
  server_rule_lib: bb5_arbiter
  player_lib: bb5_client_console
  player_filename: bb5_ai

constant:

  - doc_extra: \subsection{Constants}
  - doc_extra: \subsubsection{Error code}
  -
    cst_name: BAD_TEAM
    cst_val: -3
    cst_comment: There is an error with the selected team.
  -
    cst_name: BAD_PLAYER
    cst_val: -2
    cst_comment: There is an error with the selected player.
  -
    cst_name: BAD_ARGUMENT
    cst_val: -1
    cst_comment: One of the call function arguments is incorrect.
  -
    cst_name: SUCCESS
    cst_val: 0
    cst_comment: Everything runs smoothly.


  - doc_extra: \subsubsection{Player status}
  -
    cst_name: STA_RESERVE
    cst_val: 1
    cst_comment: The player is in the reserve box.
  -
    cst_name: STA_STANDING
    cst_val: 2
    cst_comment: The player is standing.
  -
    cst_name: STA_PRONE
    cst_val: 3
    cst_comment: The player is prone.
  -
    cst_name: STA_STUNNED
    cst_val: 4
    cst_comment: The player is stunned.
  -
    cst_name: STA_KO
    cst_val: 5
    cst_comment: The player is in the KO box.
  -
    cst_name: STA_INJURED
    cst_val: 6
    cst_comment: The player suffers an injury, and is out of play.
  -
    cst_name: STA_SENTOFF
    cst_val: 7
    cst_comment: The player has been sent off for a foul.


  - doc_extra: \subsubsection{Player action}
  -
    cst_name: MOVE
    cst_val: 1
    cst_comment: Player may move a number of squares equal to their MA.
  -
    cst_name: BLOCK
    cst_val: 2
    cst_comment: Player may block one opponent in adjacent square.
  -
    cst_name: BLITZ
    cst_val: 3
    cst_comment: Player may blitz (combine block and movement).
  -
    cst_name: PASS
    cst_val: 4
    cst_comment: Player may throw a pass.
  

  - doc_extra: \subsubsection{Player skills}
  -
    cst_name: SK_BLOCK
    cst_val: 0
    cst_comment: |
        Player will not be knocked down on a both down 
        result on the blocking dice if skill is used.
  -
    cst_name: SK_CATCH
    cst_val: 1
    cst_comment: Allowed to re-roll a failed catch roll.
  -
    cst_name: SK_DODGE
    cst_val: 2
    cst_comment: |
        Player will not be knocked down on a defender stumbles block result. 
        Allowed to re-roll failed dodge roll once per turn.
  -
    cst_name: SK_PASS
    cst_val: 3
    cst_comment: Allowed to re-roll a missed pass.
  -
    cst_name: SK_SUREHANDS
    cst_val: 4
    cst_comment: |
        Player is allowed to re-roll the dice 
        if he fails to pick up the ball.


  - doc_extra: \subsubsection{Misc.}
  -
    cst_name: COLS
    cst_val: 15
    cst_comment: Field number of columns ([0,14]).
  -
    cst_name: ROWS
    cst_val: 26
    cst_comment: Field number of rows ([0,25]).
  -
    cst_name: MAX_PLAYER
    cst_val: 16
    cst_comment: Maximum number of players for a team in a game.


function:
  - doc_extra: |
     \subsection{Informational functions}
     \subsubsection{General informations}
  -
    fct_name: my_team_id
    fct_summary: Get your team id.
    fct_ret_type: int

  - doc_extra: |
     \subsubsection{Field informations}
  -
    fct_name: ball_x
    fct_summary: Get the x coordinate of the ball.
    fct_ret_type: int
  -
    fct_name: ball_y
    fct_summary: Get the y coordinate of the ball.
    fct_ret_type: int
  -
    fct_name: team_id
    fct_summary: Get the player team id at the specified position.
    fct_ret_type: int
    fct_arg:
      - [x, int, x coordinate on the field]
      - [y, int, y coordinate on the field]
  -
    fct_name: player_id
    fct_summary: Get the player id at the specified position.
    fct_ret_type: int
    fct_arg:
      - [x, int, x coordinate on the field]
      - [y, int, y coordinate on the field]
  -
    fct_name: tackle_zone_number
    fct_summary: Get the number of tackle zones at the specified position.
    fct_ret_type: int
    fct_arg:
      - [x, int, x coordinate on the field]
      - [y, int, y coordinate on the field]


  - doc_extra: |
     \subsubsection{Team informations}
     Information will be given for the team selected by \texttt{select_team}.
     If a team has not been chosen, \texttt{BAD_TEAM} will be returned.
  -
    fct_name: select_team
    fct_summary: Select a team.
    fct_ret_type: int
    fct_arg:
      - [team_id, int, team identification (0, 1, US or THEM)]
  -
    fct_name: team_reroll_number
    fct_summary: Get the number of rerolls of the selected team.
    fct_ret_type: int
  -
    fct_name: reroll_used
    fct_summary: |
        Tells whether the selected team has 
        used a reroll this turn or not.
    fct_ret_type: int
  -
    fct_name: player_number
    fct_summary: Get the number of players of the selected team.
    fct_ret_type: int


  - doc_extra: |
     \subsubsection{Player informations}
     Information will be given for the team selected by \texttt{select_player}.
     If a team has not been chosen, \texttt{BAD_PLAYER} will be returned.
  -
    fct_name: select_player
    fct_summary: Select a player.
    fct_ret_type: int
    fct_arg:
      - [player_id, int, player identification of the selected team]
  -
    fct_name: player_status
    fct_summary: Get the player current status.
    fct_ret_type: int
  -
    fct_name: player_played
    fct_summary: Check if this player has played this turn.
    fct_ret_type: int
  -
    fct_name: player_x
    fct_summary: Get the player x coordinate.
    fct_ret_type: int
  -
    fct_name: player_y
    fct_summary: Get the player y coordinate.
    fct_ret_type: int
  -
    fct_name: player_ma
    fct_summary: Get the movement allowance of the player.
    fct_ret_type: int
  -
    fct_name: player_ma_remain
    fct_summary: Get the remaining movement allowance of the player.
    fct_ret_type: int
  -
    fct_name: player_st
    fct_summary: Get the strength of the player.
    fct_ret_type: int
  -
    fct_name: player_ag
    fct_summary: Get the agility of the player.
    fct_ret_type: int
  -
    fct_name: player_av
    fct_summary: Get the armour value of the player.
    fct_ret_type: int
  -
    fct_name: player_skill_number
    fct_summary: Get the number of player's skills.
    fct_ret_type: int
  -
    fct_name: player_skill
    fct_summary: Get the number of player's skills.
    fct_ret_type: int
    fct_arg:
      - [index, int, skill index. from 0 to num_skill - 1]
  -
    fct_name: move_possible
    fct_summary: Check if a move to the specified position is possible.
    fct_ret_type: int
    fct_arg:
      - [x, int, x coordinate on the field]
      - [y, int, y coordinate on the field]
  -
    fct_name: move_length
    fct_summary: |
      Get the length of the move to the specified destination
      for the selected player.
    fct_ret_type: int
    fct_arg:
      - [x, int, x coordinate on the field]
      - [y, int, y coordinate on the field]
  -
    fct_name: move_difficulty
    fct_summary: 
    fct_ret_type: int
    fct_arg:
      - [step, int, step of the current movement projection]
  -
    fct_name: move_path_x
    fct_summary: 
    fct_ret_type: int
    fct_arg:
      - [step, int, step of the current movement projection]
  -
    fct_name: move_path_y
    fct_summary: 
    fct_ret_type: int
    fct_arg:
      - [step, int, step of the current movement projection]


  - doc_extra: |
     \subsection{Command function}
  -
    fct_name: end_turn
    fct_summary: End the turn.
    fct_ret_type: void
  -
    fct_name: move_turn_marker
    fct_summary: Move the turn marker.
    fct_ret_type: void
  -
    fct_name: ask_illegal_procedure
    fct_summary: 
    fct_ret_type: void
  -
    fct_name: reroll
    fct_summary: Tell if you want to reroll a dice or not.
    fct_ret_type: int
    fct_arg:
      - [value, int, whether accept (0) or reroll (1)]
  -
    fct_name: place_ball
    fct_summary: 
    fct_ret_type: int
  -
    fct_name: give_ball
    fct_summary: 
    fct_ret_type: int
  -
    fct_name: choose_block_dice
    fct_summary: Choose a block dice.
    fct_ret_type: int
  -
    fct_name: block_push
    fct_summary: 
    fct_ret_type: int
  -
    fct_name: follow
    fct_summary: Tell if you want to follow a pushed player.
    fct_ret_type: int
    fct_arg:
      - [value, int, whether stay here (0) or follow (1)]
  -
    fct_name: declare
    fct_summary: Declare an action for that player.
    fct_ret_type: int
    fct_arg:
      - [action, int, action to declare]
  -
    fct_name: move_player
    fct_summary: Move the player to the specified position.
    fct_ret_type: int
    fct_arg:
      - [x, int, x coordinate on the field]
      - [y, int, y coordinate on the field]
  -
    fct_name: stand_up_player
    fct_summary: Lift the player.
    fct_ret_type: int
  -
    fct_name: block_player
    fct_summary: Block an opponent player. 
    fct_ret_type: int
    fct_arg:
      - [id, int, opponent player id to block]
  -
    fct_name: pass_ball
    fct_summary: Pass the ball to the specified position.
    fct_ret_type: int
    fct_arg:
      - [x, int, x coordinate on the field]
      - [y, int, y coordinate on the field]
