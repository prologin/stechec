conf:
  package_name: prolo2010
  client_rule_lib: toons
  server_rule_lib: toons
  player_lib: champion
  player_filename: prologin

constant:
  - doc_extra: \subsection{Constantes}
  - 
    cst_name: TAILLE_DEPART
    cst_val: 25
    cst_comment: Taille de départ du terrain.
  -
    cst_name: NBR_MAX_UNITES
    cst_val: 10
    cst_comment: Le nombre maximal d'unités pouvant appartenir à une équipe.
  -
    cst_name: TEMPS_RETRECISSEMENT
    cst_val: 5
    cst_comment: Le temps, en nombre de tours, entre deux rétrécissement du terrain.
  -
    cst_name: MAX_CARTES
    cst_val: 2
    cst_comment: Le nombre maximum en jeu de chaque carte.

enum:
  - doc_extra: \subsection{Énumérations}
  -
    enum_name: erreur
    enum_summary: Énumération représentant une erreur renvoyée par une des fonctions d'action.
    enum_field:
      - [ok, aucune erreur n'est survenue]
      - [position_invalide, la position spécifiée est invalide]
      - [case_occupee, la case sur laquelle vous tentez de vous déplacer est occupée]
      - [pas_a_portee, la cible n'est pas à portée]
      - [unite_ko, l'unité que vous essayez de faire agir ou sur laquelle vous essayez d'agir  est KO]
      - [unite_debout, l'unité que vous essayez de relever est déjà debout]
      - [quota_depasse, "nombre maximal d'unites, de spawn ou de relevages par tour dépassé"]
      - [plus_de_pa, cette unité a réalisé toutes ses actions]
      - [deja_attaque, cette unité a déjà attaqué]
      - [pas_spawnable, cette unité n'est pas spawnable]
      - [spawn_occupe, une unité est déjà présente sur le spawn]
      - [pas_a_moi, l'unité ciblée n'est pas à vous]
      - [plus_de_cartes, il n'y a plus de cartes du type spécifié dans votre main]
      - [phase_cartes_terminee, vous ne pouvez plus poser de cartes car vous avez fait une action]
  -
    enum_name: type_unite
    enum_summary: Le type d'une unité sur le terrain
    enum_field:
      - [perroquet, 1 PA et portée de 1]
      - [singe, 2 PA et portée de 3]
      - [chat, 5 PA et portée de 1]
      - [kangourou, 3 PA et portée de 2 (explose !)]

struct:
  - doc_extra: \subsection{Structures}
  -
    str_name: position
    str_summary: Représente une position sur le terrain du jeu.
    str_tuple: yes
    str_field:
      - [x, int, coordonnée X]
      - [y, int, coordonnée Y]
  -
    str_name: taille_terrain
    str_summary: Contient les informations sur la taille du terrain du jeu.
    str_tuple: no
    str_field:
      - [taille, int, taille actuelle du terrain]
      - [min_coord, int, coordonnée minimale en X ou en Y]
      - [max_coord, int, coordonnée maximale en X ou en Y]
  -
    str_name: caracs
    str_summary: Donne les caractéristiques d'un type d'unité.
    str_tuple: no
    str_field:
      - [pa_init, int, nombre de points d'actions par tour]
      - [portee, int, portée maximale de l'unité]
  -
    str_name: unite
    str_summary: Représente une unité sur le terrain.
    str_tuple: no
    str_field:
      - [pos, position, la position de l'unité]
      - [ennemi, bool, vrai si l'unité appartient à l'ennemi]
      - [type_unite_actuel, type_unite, "le type de l'unité, qui change si l'unité est déguisée"]
      - [vrai_type_unite, type_unite, "le vrai type de l'unité (qui ne change pas lors du déguisement)"]
      - [ko, int, "une valeur négative si l'unité n'est pas KO, sinon le nombre de marqueurs KO sur l'unité"]
      - [pa, int, le nombre de PA restants à l'unité]
      - [attaques, int, le nombre d'attaques restants à l'unité]
      - [attaques_gratuites, int, le nombre d'attaques gratuites (voir la partie banzai)]
  -
    str_name: cartes
    str_summary: Représente l'ensemble des cartes que vous pouvez utiliser.
    str_tuple: no
    str_field:
      - [soin, int, le nombre de cartes « Soin »]
      - [deguisement, int, le nombre de cartes « Déguisement »]
      - [banzai, int, le nombre de cartes « Banzaï »]
      - [pacifisme, int, le nombre de cartes « Pacifisme »]

function:
  - doc_extra: |
     \subsection{Fonctions d'information}
  -
    fct_name: nombre_pc
    fct_summary: Renvoie le nombre de points de commandements.
    fct_ret_type: int
    fct_arg: []
  -
    fct_name: nombre_unites_spawnees
    fct_summary: Renvoie le nombre d'unités spawnées.
    fct_ret_type: int
    fct_arg:
      - [ennemi, bool, ennemi ou non]
  -
    fct_name: tour_actuel
    fct_summary: Renvoie le numéro du tour actuel.
    fct_ret_type: int
    fct_arg: []
  -
    fct_name: pos_spawn
    fct_summary: Renvoie la position du spawn (ennemi ou non).
    fct_ret_type: position
    fct_arg:
      - [ennemi, bool, spawn ennemi ou non]
  -
    fct_name: caracteristiques
    fct_summary: Renvoie les caractéristiques d'un type d'unité.
    fct_ret_type: caracs
    fct_arg:
      - [tu, type_unite, le type dont on veut les informations]
  -
    fct_name: mes_cartes
    fct_summary: Retourne une structure "cartes" contenant les informations sur les cartes que vous avez en main.
    fct_ret_type: cartes
    fct_arg: []
  -
    fct_name: unites
    fct_summary: Retourne la liste des unités actuellement en jeu.
    fct_ret_type: unite array
    fct_arg: []
  -
    fct_name: taille_terrain_actuelle
    fct_summary: Retourne la taille actuelle du terrain et les coordonnées min/max dans une structure "taille_terrain".
    fct_ret_type: taille_terrain
    fct_arg: []

  - doc_extra: |
     \subsection{Fonctions d'utilisation des cartes}
  -
    fct_name: soin
    fct_summary: Utilise une carte « Soin » que vous avez dans votre main.
    fct_ret_type: erreur
    fct_arg:
    - [cible, position, l'unité à relever]
  -
    fct_name: deguisement
    fct_summary: Utilise une carte « Déguisement » que vous avez dans votre main.
    fct_ret_type: erreur
    fct_arg:
    - [cible, position, l'unité à déguiser]
    - [nouveau_type, type_unite, en quoi déguiser l'unité]
  -
    fct_name: banzai
    fct_summary: Utilise une carte « Banzaï » que vous avez dans votre main.
    fct_ret_type: erreur
    fct_arg:
    - [cible, position, la cible de la carte]
  -
    fct_name: pacifisme
    fct_summary: Utilise une carte « Pacifisme » que vous avez dans votre main.
    fct_ret_type: erreur
    fct_arg: []

  - doc_extra: |
     \subsection{Fonctions d'action}
  -
    fct_name: deplacer
    fct_summary: Déplace une unité vers une position à portée.
    fct_ret_type: erreur
    fct_arg:
    - [cible, position, l'unité à déplacer]
    - [pos, position, la nouvelle position de l'unité]
  -
    fct_name: relever
    fct_summary: Relève une unité n'ayant plus de marqueurs de KO.
    fct_ret_type: erreur
    fct_arg:
    - [cible, position, la position de l'unité à déplacer]
  -
    fct_name: attaquer
    fct_summary: Attaque une autre unité.
    fct_ret_type: erreur
    fct_arg:
    - [attaquant, position, l'unité qui attaque]
    - [cible, position, l'unité qui se fait attaquer]
  -
    fct_name: spawn
    fct_summary: Fait apparaitre une unité sur la case de spawn.
    fct_ret_type: erreur
    fct_arg:
    - [quoi, type_unite, l'unité à faire apparaitre]
  -
    fct_name: annuler
    fct_summary: Annule l'effet de la dernière action et remet le jeu dans l'état précédent. Renvoie false s'il n'y a rien à annuler, true sinon.
    fct_ret_type: bool
    fct_arg: []

user_function:
  -
    fct_name: init_game
    fct_summary: Fonction appellée au début de la partie.
    fct_ret_type: void
    fct_arg: []
  -
    fct_name: retirer_ko
    fct_summary: Fonction appellée pour la phase de retrait de KO.
    fct_ret_type: position
    fct_arg: []
  -
    fct_name: jouer
    fct_summary: Fonction appellée pour la phase de jeu.
    fct_ret_type: void
    fct_arg: []
  -
    fct_name: end_game
    fct_summary: Fonction appellée à la fin de la partie.
    fct_ret_type: void
    fct_arg: []
