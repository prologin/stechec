conf:
  package_name: prolo2006
  rule_lib: outatime
  player_lib: champion
  player_filename: prologin

constant:
  - doc_extra: \subsection{Constantes}
  - doc_extra: \subsubsection{Les codes d'erreur}
  -
    cst_name: BAD_ARGUMENT
    cst_val: -4
    cst_comment: Un des arguments passe a la fonction est incorrect.
  -
    cst_name: INVALID_COMMAND
    cst_val: -3
    cst_comment: Vous ne pouvez pas appeler cette commande maintenant.
  -
    cst_name: NO_UNIT
    cst_val: -2
    cst_comment: L'unite demande n'existe pas.
  -
    cst_name: UNKNOWN
    cst_val: -1
    cst_comment: Le resultat ne peut pas etre connu.
  -
    cst_name: SUCCESS
    cst_val: 0
    cst_comment: La commande s'est correctement effectuee.

  - doc_extra: \subsubsection{Les valeurs maximum}
  -
    cst_name: MAX_DATE
    cst_val: 500
    cst_comment: Nombre maximum de tours.
  -
    cst_name: MAX_MAP_SIZE
    cst_val: 40
    cst_comment: Taille maximum de la carte en largeur/hauteur.
  -
    cst_name: MAX_TEAM
    cst_val: 6
    cst_comment: Nombre maximal d'equipes en jeu.
  -
    cst_name: MAX_GOODMEN
    cst_val: 3
    cst_comment: Nombre maximal de joueurs par equipe.
  -
    cst_name: DELOREAN_RELOAD
    cst_val: 20
    cst_comment: Temps d'attente entre chaque utilisation de la De Lorean.
  -
    cst_name: DELOREAN_WARP_TIME
    cst_val: 4
    cst_comment: Tours mis De Lorean pour initier son voyage dans le temps.
  -
    cst_name: RAM_SIZE
    cst_val: 7
    cst_comment: Nombre de jeux maximum qu'un joueur peut retenir.

  - doc_extra: \subsubsection{Les types de terrain}
  -
    cst_name: STANDARD
    cst_val: 0
    cst_comment: Type de terrain standard.
  -
    cst_name: WALL
    cst_val: 1
    cst_comment: Type de terrain mur.
  -
    cst_name: BET_PLACE
    cst_val: 2
    cst_comment: Endroit ou parier.
  -
    cst_name: GOODMAN
    cst_val: 3
    cst_comment: Un joueur se trouve a cet endroit.

  - doc_extra: \subsubsection{Les états des bonshommes}
  -
    cst_name: STATE_NORMAL
    cst_val: 0
    cst_comment: Le joueur est dans un etat normal, pret a recevoir vos ordres.
  -
    cst_name: STATE_BETTING
    cst_val: 1
    cst_comment: Le joueur est en train de parier.
  -
    cst_name: STATE_TIME_WARP
    cst_val: 2
    cst_comment: Le joueur est dans un etat inconsistant.
  -
    cst_name: STATE_BACK_IN_THE_FUTURE
    cst_val: 3
    cst_comment: Le joueur est en train de remonter dans le futur.
  -
    cst_name: STATE_KO
    cst_val: 4
    cst_comment: Le joueur est assomme.

  - doc_extra: \subsubsection{Les valeurs retournées par meilleure_direction}
  -
    cst_name: DEC_Y
    cst_val: 0
    cst_comment: Meilleure direction vers le haut.
  -
    cst_name: DEC_X
    cst_val: 1
    cst_comment: Meilleure direction vers la gauche.
  -
    cst_name: INC_Y
    cst_val: 2
    cst_comment: Meilleure direction vers le bas.
  -
    cst_name: INC_X
    cst_val: 3
    cst_comment: Meilleure direction vers la droite.


function:
  - doc_extra: |
     \subsection{Fonctions d'information}
     Toutes les fonctions peuvent renvoyer les constantes
     \textbf{BAD_ARGUMENT} ou \textbf{NO_UNIT} quand au moins un des
     arguments est incorrect (même si cela n'est pas précisé pour chaque
     fonction). Par exemple, cela se produit si vous appelez
     la fonction \texttt{regarde} avec \texttt{x=13} et \texttt{y=5142}.
     \subsubsection{Informations sur le monde}
  -
    fct_name: equipes
    fct_summary: Nombre d'equipes presentes sur le terrain.
    fct_ret_type: int
  -
    fct_name: taille_equipe
    fct_summary: Nombre de joueurs par equipe.
    fct_notice: Retourne MAX_GOODMAN lors des matchs officiels.
    fct_ret_type: int
  -
    fct_name: mon_equipe
    fct_summary: Identifiant de votre equipe.
    fct_ret_type: int
  -
    fct_name: taille_ville_x
    fct_ret_type: int
    fct_summary: Taille du monde en largeur.
    fct_ret_comment: Un entier contenant la taille du monde en largeur.
    fct_notice: Retourne toujours 40 lors des matchs officiels.
  -
    fct_name: taille_ville_y
    fct_ret_type: int
    fct_summary: Taille du monde en hauteur.
    fct_ret_comment: Un entier contenant la taille du monde en hauteur.
    fct_notice: Retourne toujours 40 lors des matchs officiels.
  -
    fct_name: distance
    fct_summary: |
      Renvoie le nombre de tours que prendrait un deplacement
      d'une position \emph{vers} une autre.
    fct_ret_type: int
    fct_ret_comment: Nombre de tours que prendrait le deplacement, ou UNKNOWN si c'est impossible.
    fct_arg:
      - [x_d, int, Coordonnee x de depart.]
      - [y_d, int, Coordonnee y de depart.]
      - [x_a, int, Coordonnee x a atteindre.]
      - [y_a, int, Coordonnee y a atteindre.]
  -
    fct_name: meilleure_direction
    fct_summary: |
      Renvoie la meilleure direction si l'on effectuait le deplacement
      d'une position \emph{vers} une autre.
    fct_ret_type: int
    fct_ret_comment: |
      Renvoie une des constantes INC/DEC_X/Y, ou UNKNOWN si c'est impossible.
    fct_arg:
      - [x_d, int, Coordonnee x de depart.]
      - [y_d, int, Coordonnee y de depart.]
      - [x_a, int, Coordonnee x a atteindre.]
      - [y_a, int, Coordonnee y a atteindre.]
  -
    fct_name: regarde
    fct_summary: |
      Recupere le type de terrain a la position demandee. Si aucun de vos
      joueurs ne peut voir la case en question (brouillard de guerre), la
      fonction ne renverra que STANDARD ou WALL. Si vous pouvez la voir,
      alors la valeur de retour sera plus precise.
    fct_ret_type: int
    fct_ret_comment: Retourne une des constantes 'types de terrain'.
    fct_arg:
      - [x, int, Coordonnee en x de la case demandee.]
      - [y, int, Coordonnee en y de la case demandee.]
  -
    fct_name: visible
    fct_summary: |
      Regarde si une case du terrain se trouve dans le champ de vision de vos
      joueurs.
    fct_ret_type: int
    fct_ret_comment: Retourne 1 si la case est visible, 0 sinon.
    fct_arg:
      - [x, int, Coordonnee en x de la case demandee.]
      - [y, int, Coordonnee en y de la case demandee.]
  -
    fct_name: visible_depuis
    fct_summary: |
      Regarde si une case du terrain est visible depuis une case specifique,
      appele point d'observation.
    fct_notice: |
      Cette fonction est une version plus evoluee de la fonction 'visible',
      pour vous permettre d'optimiser vos algorithmes.
    fct_ret_type: int
    fct_ret_comment: Retourne 1 si la case est visible, 0 sinon.
    fct_arg:
      - [from_x, int, Coordonnee en x du point d'observation.]
      - [from_y, int, Coordonnee en y du point d'observation.]
      - [to_x, int, Coordonnee en x de la case demandee.]
      - [to_y, int, Coordonnee en y de la case demandee.]


  - doc_extra: \subsubsection{Informations sur le tour}
  -
    fct_name: score
    fct_summary: Recupere le score d'une equipe.
    fct_ret_type: int
    fct_arg:
      - [id, int, Un identifiant d'équipe.]
  -
    fct_name: current_date
    fct_summary: Date actuelle.
    fct_ret_type: int
  - doc_extra: |
      Attention, les fonctions permettant de connaître le temps restant ont
      été codées par un chat, ce qui signifie donc que vous êtes face à un
      paradoxe~! Le fait d'appeler une fonction pour savoir si vous avez
      perdu du temps vous fait perdre du temps, c'est inévitable. Donc un
      conseil~: évitez d'appeler cette fonction trop souvent.
  -
    fct_name: time_remaining
    fct_summary: Temps restant pour ce tour.
    fct_notice: L'unite de temps est la milliseconde.
    fct_ret_type: int
  -
    fct_name: extra_time_remaining
    fct_summary: Temps additionnel restant pour la partie.
    fct_notice: L'unite de temps est la milliseconde.
    fct_ret_type: int

  - doc_extra: \subsubsection{Informations sur l'almanach}
  -
    fct_name: almanach_visible
    fct_summary: L'almanach est-il visible ?
    fct_ret_comment: Retourne 1 si il est visible, sinon 0.
    fct_ret_type: int
  -
    fct_name: position_almanach_x
    fct_summary: Position de l'almanach en largeur.
    fct_ret_comment: |
      Retourne sa position en x, ou UNKNOWN si il n'est pas visible.
    fct_ret_type: int
  -
    fct_name: position_almanach_y
    fct_summary: Position de l'almanach en hauteur.
    fct_ret_comment: |
      Retourne sa position en y, ou UNKNOWN si il n'est pas visible.
    fct_ret_type: int
  -
    fct_name: qui_possede_almanach
    fct_summary: Recupere l'identifiant de l'equipe qui possede l'almanach.
    fct_ret_comment: |
      Retourne UNKNOWN si vous ne pouvez pas voir qui a l'almanach.
    fct_ret_type: int
  -
    fct_name: joueur_possede_almanach
    fct_summary: Recupere l'identifiant du joueur qui possede l'almanach.
    fct_ret_comment: Retourne UNKNOWN si vous ne pouvez pas le savoir.
    fct_ret_type: int

  - doc_extra: \subsubsection{Informations sur la De\,Lorean}
  -
    fct_name: delorean_visible
    fct_summary: La De Lorean est-elle visible ?
    fct_ret_type: int
  -
    fct_name: position_delorean_x
    fct_summary: Position de la De Lorean en largeur.
    fct_ret_comment: Retourne sa position en x, ou UNKNOWN si non visible.
    fct_ret_type: int
  -
    fct_name: position_delorean_y
    fct_summary: Position de la De Lorean en hauteur.
    fct_ret_comment: Retourne sa position en y, ou UNKNOWN si non visible.
    fct_ret_type: int
  -
    fct_name: autonomie_delorean
    fct_summary: Retourne le niveau de plutonium de la De Lorean. Cela correspond au nombre de tours que l'on peut encore voyager dans le temps (revenir 10 tours plus tot reduit le niveau de plutonium de 10).
    fct_ret_comment: Retourne UNKNOWN si la De Lorean n'est pas visible.
    fct_ret_type: int
  -
    fct_name: qui_possede_delorean
    fct_summary: Identifiant de l'equipe qui possede la De Lorean.
    fct_ret_comment: |
      Retourne UNKNOWN si vous ne pouvez pas voir qui possede la De Lorean.
    fct_ret_type: int
  -
    fct_name: joueur_possede_delorean
    fct_summary: Recupere l'identifiant du joueur qui possede la De Lorean.
    fct_ret_comment: Retourne UNKNOWN si vous ne pouvez pas le savoir.
    fct_ret_type: int

  - doc_extra: \subsubsection{Informations sur les joueurs}
  -
    fct_name: joueur_visible
    fct_summary: Le joueur est-il visible ?
    fct_ret_type: int
    fct_ret_comment: Retourne 1 si le joueur est visible, 0 sinon.
    fct_arg:
      - [id, int, Un identifiant de joueur.]
  -
    fct_name: equipe
    fct_summary: Recupere l'identifiant d'equipe auquel appartient un joueur.
    fct_ret_type: int
    fct_arg:
      - [id, int, Un identifiant de joueur.]
  -
    fct_name: position_joueur_x
    fct_summary: Position d'un joueur en largeur.
    fct_ret_comment: UNKNOWN si le joueur n'est pas visible.
    fct_ret_type: int
    fct_arg:
      - [id, int, Un identifiant de joueur.]
  -
    fct_name: position_joueur_y
    fct_summary: Position d'un joueur en hauteur.
    fct_ret_comment: UNKNOWN si le joueur n'est pas visible.
    fct_ret_type: int
    fct_arg:
      - [id, int, Un identifiant de joueur.]
  -
    fct_name: etat_joueur
    fct_summary: Recupere l'etat d'un joueur.
    fct_ret_comment: UNKNOWN si le joueur n'est pas visible.
    fct_ret_type: int
    fct_arg:
      - [id, int, Un identifiant de joueur.]


  - doc_extra: \subsubsection{Informations sur les salles de jeu}
  -
    fct_name: casino
    fct_summary: Identifiant du casino a la case x, y
    fct_ret_comment: |
      UNKNOWN si cette case n'est pas visible,
      INVALID_COMMAND si elle ne contient pas de casino.
    fct_ret_type: int
    fct_arg:
      - [x, int, Coordonnee en x de la case demandee.]
      - [y, int, Coordonnee en y de la case demandee.]
  -
    fct_name: casino_ouvert
    fct_summary: Le casino est-il ouvert ?
    fct_ret_comment: |
      Retourne 1 si le casino est ouvert, 0 si il est ferme,
      ou UNKNOWN si ce casino n'est pas visible.
    fct_ret_type: int
    fct_arg:
      - [id, int, Un identifiant de casino.]
  -
    fct_name: jeu_du_casino
    fct_summary: Identifiant du jeu en cours dans le casino.
    fct_ret_comment: |
      UNKNOWN si ce casino n'est pas visible, que l'on ne possede
      pas l'almanach, et que l'on n'a pas memorise ce jeu;
      ou simplement si le casino est ferme.
    fct_ret_type: int
    fct_arg:
      - [id, int, Un identifiant de casino.]


  - doc_extra: \subsubsection{Informations sur les jeux}
  -
    fct_name: jeux
    fct_summary: Nombre total de jeux.
    fct_ret_comment: UNKNOWN si l'on ne possede pas l'almanach.
    fct_ret_type: int
  -
    fct_name: cagnotte
    fct_summary: Cagnotte annoncee pour un jeu.
    fct_ret_comment: |
      UNKNOWN si l'on ne possede pas l'almanach et que ce jeu n'a
      pas été memorise.
    fct_ret_type: int
    fct_arg:
      - [id, int, Identifiant du jeu.]
  -
    fct_name: casino_du_jeu
    fct_summary: Casino ou a lieu un jeu.
    fct_ret_comment: |
      UNKNOWN si l'on ne possede pas l'almanach et que ce jeu n'a pas
      été memorise.
    fct_ret_type: int
    fct_arg:
      - [id, int, Identifiant du jeu.]
  -
    fct_name: date_jeu
    fct_summary: Date a laquelle un jeu doit avoir lieu.
    fct_ret_comment: UNKNOWN si l'on ne possede pas l'almanach et que ce jeu n'a pas été memorise.
    fct_ret_type: int
    fct_arg:
      - [id, int, Identifiant de la partie memorisee.]


  - doc_extra: |
     \subsection{Fonctions de commande}
     Toutes les fonctions renvoient un entier correspondant au succès ou à
     l'échec de la commande.
  -
    fct_name: memorise_jeu
    fct_summary: Se souvient d'un jeu, si l'on possede l'almanach
    fct_ret_comment: UNKNOWN si l'on ne possede pas l'almanach ou que ce jeu n'existe pas, ou SUCCESS si c'est reussi.
    fct_ret_type: int
    fct_arg:
      - [id, int, Identifiant du jeu]
  -
    fct_name: convecteur_temporel
    fct_summary: Envoie la De Lorean dans le temps.
    fct_ret_comment: INVALID_COMMAND si l'on ne possede pas la De Lorean.
    fct_ret_type: int
    fct_arg:
      - [id, int, Id d'un goodman.]
      - [date, int, Date de destination.]
  -
    fct_name: deplace_joueur
    fct_summary: |
      Deplace un joueur \emph{vers} la position indiquee. Il ne se deplace que
      d'une seule case par tour.
    fct_ret_comment: |
      SUCCESS si le joueur pourra se deplacer a la fin du tour (et il le fera),
      ou INVALID_COMMAND ou BAD_ARGUMENT en cas d'impossibilité.
    fct_ret_type: int
    fct_arg:
      - [id, int, Identifiant du joueur.]
      - [x, int, Coordonnee x a atteindre.]
      - [y, int, Coordonnee y a atteindre.]

user_function:
  - doc_extra: |-
     \subsection{Ce qu'il faut faire}
     Chacun est libre de mener la stratégie qui lui semble la plus
     adaptée, et a entière liberté sur la façon de l'implémenter.
     Toutefois il est demandé d'écrire deux fonctions en particulier :
     une fonction qui sera appelée au début de la partie, et une autre
     qui sera appelée à chaque tour.
