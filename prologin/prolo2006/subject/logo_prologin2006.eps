%!PS-Adobe-3.1 EPSF-3.0
%%Title: logo_prologin2006.eps
%%Creator: Adobe Illustrator(R) X
%%AI8_CreatorVersion: 10.0%AI9_PrintingDataBegin%%For: Prologin
%%CreationDate: 8/31/2001
%%BoundingBox: 0 0 996 655
%%HiResBoundingBox: 0 0 995.8824 654.7198
%%CropBox: 0 0 995.8824 654.7198
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI10"
%ADOEndClientInjection: DocumentHeader "AI10"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image (1.0 0)
%%+ procset Adobe_AGM_Gradient_Sep (1.0 0)
%%+ procset Adobe_AGM_Gradient (1.1 0)
%%+ procset Adobe_CoolType_Utility_MAKEOCF (1.13 0)
%%+ procset Adobe_CoolType_Core (2.11 0)
%%+ procset Adobe_AGM_Core (2.0 0)
%%+ procset Adobe_AGM_Utils (1.0 0)
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%ADOBeginClientInjection: DocumentProlog Start "AI10"
%ADOEndClientInjection: DocumentProlog Start "AI10"
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2000 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Utils 35 dict dup begin put
/bdf
{
	bind def
} bind def
/nd{
	null def
}bdf
/xdf
{
	exch def
}bdf
/ldf 
{
	load def
}bdf
/ddf
{
	put
}bdf	
/xddf
{
	3 -1 roll put
}bdf	
/xpt
{
	exch put
}bdf
/ndf
{ 
	
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/bdict
{
	mark
}bdf
/edict
{
	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end
}def
	
/ps_level
	/languagelevel where{
		pop languagelevel
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/makereadonlyarray
{
	/packedarray where{
		pop packedarray
	}{
		array astore readonly
	}ifelse
}bdf
/map_reserved_ink_name
{
	dup type /stringtype eq{
		dup /Red eq{
			pop (_Red_)
		}{
			dup /Green eq{
				pop (_Green_)
			}{
				dup /Blue eq{
					pop (_Blue_)
				}{
					dup /Cyan eq{
						pop (_Cyan_)
					}{
						dup /Magenta eq{
							pop (_Magenta_)
						}{
							dup /Yellow eq{
								pop (_Yellow_)
							}{
								dup /Black eq{
									pop (_Black_)
								}{
									dup () cvn eq{
										pop (Process)
									}if
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf
		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	
	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne
			{
			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark
			} if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		} ifelse
	
	AGMUTIL_GSTATE_flt setflat
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/rdline
{
	currentfile AGMUTIL_str256 readline pop
} bdf
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%) anchorsearch {pop} if
} bdf
/filter_cmyk
{	
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length /AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} bdf
/AGMUTIL_imagefile nd
/AGMUTIL_imbuf nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	dup /DataSource {AGMUTIL_imagefile AGMUTIL_imbuf readstring pop} put
	exch
	load exec
}def
/write_image_file
{
	begin
	{ (AGMUTIL_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		Adobe_AGM_Utils/AGMUTIL_imbuf Width BitsPerComponent mul 7 add 8 idiv string ddf
		1 1 Height { 
			pop
			DataSource dup type /filetype eq{
				AGMUTIL_imbuf readstring pop
			}{
				exec
			} ifelse
			AGMUTIL_imagefile exch writestring
		}for
		true
	}ifelse
	end
}def
/close_image_file
{
	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile
}def
/consumeimagedata
{
	begin
	currentdict /MultipleDataSources known not
		{/MultipleDataSources false def} if
	MultipleDataSources
		{
		1 dict begin
		/flushbuffer Width string def
		1 1 Height
			{
			pop
			0 1 DataSource length 1 sub
				{
				DataSource exch get
				dup type dup 
				/filetype eq
					{
					exch flushbuffer readstring pop pop
					}if
				/arraytype eq
					{
					exec pop
					}if
				}for
			}for
		end
		}
		{
		/DataSource load type dup 
		/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 div mul cvi string def
			1 1 Height { pop DataSource flushbuffer readstring pop pop} for
			end
			}if
		/arraytype eq
			{
			1 1 Height { pop DataSource pop } for
			}if
		}ifelse
	end
}bdf
/addprocs
{
     2{/exec load}repeat
     3 1 roll
     [ 5 1 roll ] bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
    currentdict 2 index known{
    	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
	    addprocs /TransferFunction xdf 
	    currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/doc_setup{
	Adobe_AGM_Utils begin
}bdf
/doc_trailer{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-1999 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 206 dict dup begin put
/nd{
	null def
}bind def
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_src256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_arg1 nd
/AGMCORE_arg2 nd
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_will_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSA_cache 0 dict def
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_pattern_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 3 dict def
/AGMCORE_cur_err nd
/AGMCORE_ovp nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/knockout_unitsq nd
/AGMCORE_CRD_cache where{
	pop
}{
	/AGMCORE_CRD_cache 0 dict def
}ifelse
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer {readline} stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq{
		dup /HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup /HalftoneType get 2 eq{
				/GraySpotFunction get
			}{ 
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/stkpath_clp_npth
{
	strokepath clip newpath
} def
/stk_n_clp_npth
{
	gsave stroke grestore clip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	Adobe_AGM_Core/spot_alias get exec
	/Adobe_AGM_Image where {
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			get exec
		}{
			pop pop
		}ifelse
	} if
	100 dict begin
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
			
	/AGMCORE_arg2 xdf
	/AGMCORE_arg1 xdf
	
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
		
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			dup (.) ne AGMCORE_arg1 0 lt and
				{
				pop
				}
				{
				stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
					{
					currentpoint AGMCORE_deltaY sub exch pop
					clippath pathbbox pop pop pop 44 add exch moveto
					} if
				AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
				} ifelse
			
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
			dup 94 eq 
				{
				pop
				AGMCORE_arg1 0 ge
					{
					AGMCORE_arg1 AGMCORE_str256 cvs
					dup /AGMCORE_tmp exch length def
					AGMCORE_str256 exch 0 exch putinterval
					AGMCORE_str256 0 AGMCORE_tmp getinterval
					stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
						{
						currentpoint AGMCORE_deltaY sub exch pop
						clippath pathbbox pop pop pop 44 add exch moveto
						} if
					AGMCORE_str256 0 AGMCORE_tmp getinterval show
					}
					{
					/AGMCORE_arg1 0 def
					} ifelse
				0 1 AGMCORE_str256 length 1 sub
					{
					AGMCORE_str256 exch 0 put
					}for
				/AGMCORE_tmp 0 def
				AGMCORE_arg1 0 ne
					{
					/AGMCORE_arg1 AGMCORE_arg2 def
					} if
				}
				{
				AGMCORE_str256 exch AGMCORE_tmp exch put
				/AGMCORE_tmp AGMCORE_tmp 1 add def
				}ifelse
			} ifelse
		} forall
} bdf
/doc_setup{
	Adobe_AGM_Core begin
	
	/AGMCORE_will_host_separate xdf
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	
	errordict /AGM_handleerror known not{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror {
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and{
				$error /newerror false put
				AGMCORE_cur_err /AGMCORE_bad_environ eq{
					/AGMCORE_bad_environ AGMCORE_ps_level AGMCORE_ps_version
				}{
					AGMCORE_cur_err 0 0
				}ifelse
				compose_error_msg
			}if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	level2 not{
		/xput{
			dup load dup length exch maxlength eq{
				dup dup load dup
				length dup 0 eq {pop 1} if 2 mul dict copy def
			}if
			load begin
				def
 			end
		}def
	}{
		/xput{
			load 3 1 roll put
		}def
	}ifelse
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 8 def
											
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			Adobe_AGM_Core
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core begin
				/AGMCORE_gstackptr exch def
				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def
			end
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	end
}def
/page_setup
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/LeaveColorUnchanged eq
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where {pop}{
		/convert_spot_to_process
		{
			AGMCORE_host_sep
			{ 
				gsave
				1 0 0 0 setcmykcolor currentgray 1 exch sub
				0 1 0 0 setcmykcolor currentgray 1 exch sub
				0 0 1 0 setcmykcolor currentgray 1 exch sub
				0 0 0 1 setcmykcolor currentgray 1 exch sub
				add add add 0 eq
				{
					pop false
				}{
					false setoverprint
					1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor
					currentgray 0 eq
				}ifelse
				grestore
			}{
				AGMCORE_distilling
				{
					pop
					AGM_is_distiller_preserving_spotimages not
				}{
					Adobe_AGM_Core/AGMCORE_name xddf
					false
					currentpagedevice/OverrideSeparations known
						{
						currentpagedevice/OverrideSeparations get
							{
							/HqnSpots /ProcSet resourcestatus
								{
								pop pop pop true
								}if
							}if
						}if					
						{
						AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not
						}{
						gsave
						[/Separation AGMCORE_name /DeviceGray {}]setcolorspace
						false
						currentpagedevice/SeparationColorNames 2 copy known
						{
							get
							{
							AGMCORE_name eq or
							}forall
						not
						}{
							pop pop
						}ifelse
						grestore
						}ifelse
				}ifelse
			}ifelse
		}def
	}ifelse
	/convert_to_process where {pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
				true exch
					{
					convert_spot_to_process and
					}
				forall
				}{
				false exch
					{
					convert_spot_to_process or
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	AGMCORE_host_sep AGMCORE_will_host_separate not and {
		/AGMCORE_cur_err /AGMCORE_color_space_onhost_seps def
		AGMCORE_color_space_onhost_seps
	}if
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	AGMCORE_host_sep{
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
		/clip AGMCORE_key_known not{
			Adobe_AGM_Core/AGMCORE_&clip /clip load put
			/clip
			{
				current_spot_alias{
					currentdict/InksUsed known{
						[
						InksUsed{
							dup map_alias{
								/Name get exch pop
							}if
						}forall
						]
						/InksUsed xdf
					}if
				}if
				AGMCORE_&clip
			}def
		}if
		/eoclip AGMCORE_key_known not{
			Adobe_AGM_Core/AGMCORE_&eoclip /eoclip load put
			/eoclip
			{
				current_spot_alias{
					currentdict/InksUsed known{
						[
						InksUsed{
							dup map_alias{
								/Name get exch pop
							}if
						}forall
						]
						/InksUsed xdf
					}if
				}if
				AGMCORE_&eoclip
			}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	}def
	
	level2{
		/mo /moveto ldf
		/li /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		/level2ScreenFreq{
			begin
			60
			HalftoneType 1 eq{
				pop Frequency
			}if
			HalftoneType 2 eq{
				pop GrayFrequency
			}if
			HalftoneType 5 eq{
				pop Default level2ScreenFreq
			}if
			 end
		}def
		/currentScreenFreq{
			currenthalftone level2ScreenFreq
		}def
		level2 /setcolorspace AGMCORE_key_known not and{
		
			/AGMCORE_&&&setcolorspace /setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get dup /Separation eq
					{
						pop
						dup length array copy
						dup dup 1 get
						current_spot_alias
						{
							dup map_alias
							{
								begin
								/sep_colorspace_dict currentdict AGMCORE_gput
								pop pop	pop
									
								[ 
									/Separation Name 
									CSA map_csa
									dup /MappedCSA xdf 
									/sep_colorspace_proc load
								]
								dup Name
								end
							}if
						}if
						map_reserved_ink_name 1 exch put
					}{
						/DeviceN eq 
						{
							dup length array copy
							dup dup 1 get [ 
								exch {
									current_spot_alias{
										dup map_alias{
											/Name get exch pop
										}if
									}if
									map_reserved_ink_name
								} forall 
							] 1 exch put
						}if
					}ifelse
				}if
			}def
			/setcolorspace
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get /Indexed eq
					{
						aload pop 3 -1 roll
						AGMCORE_ReplaceMappedColor
						3 1 roll 4 array astore
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				AGMCORE_&&&setcolorspace
			}def
		}if	
	}{
		
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/currentScreenFreq{
			currentscreen pop pop
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		
		/n_color_components
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop 1
			}{
				/DeviceCMYK eq{
					4
				}{
					3
				}ifelse
			}ifelse
		} def
		
		/setcolor_devicecolor
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
	
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	
	/sop /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/spclp /stkpath_clp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/s /stroke ldf
	/sclp /stk_n_clp_npth ldf
	/nclp /npth_clp ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer{
}def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/current_ink
{
	dup length 0 eq{
		pop true
	}{
		Adobe_AGM_Core/ink_result false put
		{
			dup /ProcessCyan eq{
				AGMCORE_cyan_plate ink_result or Adobe_AGM_Core/ink_result xddf
			}{
				dup /ProcessMagenta eq{
					AGMCORE_magenta_plate ink_result or Adobe_AGM_Core/ink_result xddf
				}{
					dup /ProcessYellow eq{
						AGMCORE_yellow_plate ink_result or Adobe_AGM_Core/ink_result xddf
					}{
						dup /ProcessBlack eq{
							AGMCORE_black_plate ink_result or Adobe_AGM_Core/ink_result xddf
						}{
							dup /sep_colorspace_dict AGMCORE_gget dup null eq{
								pop false ink_result or Adobe_AGM_Core/ink_result xddf
							}{
								/Name get eq{
									1 setsepcolor
									currentgray 1 ne ink_result or Adobe_AGM_Core/ink_result xddf
								}{
									false ink_result or Adobe_AGM_Core/ink_result xddf
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			pop 
		} forall
		ink_result
	}ifelse
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA map_csa setcolorspace_opt
		set_crd
	end
}
def
/setsepcolor
{ 
	
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/sep_colorspace_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf
	
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
							}{
								Name inRip_spot_has_ink not
							}ifelse
							{
		 						/pop cvx 1
							}if
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc /setcolor ldf
						
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		/MappedCSA CSA map_csa def
		AGMCORE_host_sep level2 not and{
			0 0 0 0 setcmykcolor
		}{
			[/Indexed MappedCSA 
			level2 not has_color not and{
				dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
					pop [/DeviceGray]
				}if
				HiVal GrayLookup
			}{
				HiVal 
				currentdict/RangeArray known{
					{ 
						/indexed_colorspace_dict AGMCORE_gget begin
						Lookup exch 
						dup HiVal gt{
							pop HiVal
						}if
						NComponents mul NComponents getinterval {} forall
						NComponents 1 sub -1 0{
							RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
							NComponents 1 roll
						}for
						end
					} bind
				}{
					Lookup
				}ifelse
			}ifelse
			] setcolorspace_opt
			
			set_crd
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget/Lookup get 4 3 -1 roll map_index setcmykcolor
	}{
		setcolor
	}ifelse
} def
/ignoreimagedata
{
	currentoverprint not{
		gsave 
		dup begin
		1 setgray
		0 0 ImageMatrix itransform 
		Width Height ImageMatrix idtransform rectfill 
		end
		grestore
		}if
	consumeimagedata
}def
/add_csa
{
	Adobe_AGM_Core begin
			/AGMCORE_CSA_cache xput
	end
}def
/map_csa
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get
	}if
}def
/add_csd
{
	Adobe_AGM_Core begin
		/AGMCORE_CSD_cache xput
	end
}def
/get_csd
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get
	}if
}def
/cachepattern_level2
{
	4 dict begin
	/comparebuffer exch def
	/holdbuffer exch def
	/readbuffer 1024 string def
	/LZWFilter holdbuffer /LZWEncode filter def
	{
		currentfile readbuffer readline not
			{pop exit}
		if
		dup LZWFilter exch writestring
		LZWFilter (\n) writestring
		comparebuffer eq
			{exit}
		if
	}loop
	LZWFilter closefile
	end
}def
/cachepattern_level3
{
	3 dict begin
	/comparebuffer exch def
	/readbuffer 1024 string def
	/DoEOL false def
	{ 
		DoEOL
			{
			(\n)
			/DoEOL false def
			}
			{
			currentfile readbuffer readline not
				{pop ()}
				{
				dup length 0 eq
					{ pop(\n)}
					{
					dup comparebuffer eq
						{pop ()}
						{/DoEOL true def}
					ifelse
					}
				ifelse
				}
			ifelse
			}
		ifelse
	} /ReusableStreamDecode filter
	end
}def
/add_pattern
{
	Adobe_AGM_Core begin
		/AGMCORE_pattern_cache xput
	end
}def
/get_pattern
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get
	}if
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			false sop [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	
	currentcolorrendering/Intent known{
		currentcolorrendering/Intent get
	}{
		null
	}ifelse
	
	Intent ne{
		false  
		Intent
		AGMCORE_CRD_cache {
			exch pop 
			begin
				dup Intent eq{
					currentdict setcolorrendering_opt
					end 
					exch pop true exch	
					exit
				}if
			end
		} forall
		pop
		not{
			systemdict /findcolorrendering known{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				dup length dict copy
				setcolorrendering_opt
			}if
		}if
	}if
} def
/add_crd
{
	AGMCORE_CRD_cache 3 1 roll put
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/CRD known{
			AGMCORE_CRD_cache CRD get dup null ne{
				setcolorrendering_opt
			}{
				pop
			}ifelse
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp) flushinput
	}if
}def
/cpaint_gsep
{
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep) flushinput
	}if
}def
/cpaint_gend
{
	newpath
}def
/AGMCORE_ctm_stack bdict
	/push_ctm {
		stack length size le{
			stack dup length 2 mul array 
			dup /stack exch def
			copy pop
		}if
		stack size 3 -1 roll put
		/size size 1 add def
	}
	/pop_ctm {
		/size size 1 sub def
		size 0 lt{ 
			/size 0 def
		}if
		stack size get
	}
	/stack 1 array
	/size 0 
edict 
def
/save_ctm
{
	matrix currentmatrix AGMCORE_ctm_stack begin 
		push_ctm 
	end
}def
/restore_ctm
{
	AGMCORE_ctm_stack begin
		pop_ctm 
	end
	setmatrix
}def
/path_rez
{
	dup 0 ne{
		AGMCORE_deviceDPI exch div 
		dup 1 lt{
			pop 1
		}if
		setflat
	}{
		pop
	}ifelse 	
}def
/rdcmntline {
	currentfile AGMCORE_str256 readline pop
	(%) anchorsearch {pop} if
} def
/set_spot_alias_ary
{
	/AGMCORE_SpotAliasAry where{
		pop pop
	}{
		Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
		true set_spot_alias
	}ifelse
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry{
				dup/Name get AGMCORE_name eq{
					save exch
					/Adobe_AGM_Core currentdict def
					/CSD get get_csd
					exch restore
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	
	/AGMCORE_&setcustomcolor AGMCORE_key_known not {
		Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put
	} if
	/customcolor_tint 1 AGMCORE_gput
	
	Adobe_AGM_Core begin
	/setcustomcolor
	{
		
		dup /customcolor_tint exch AGMCORE_gput
		
		current_spot_alias{
			1 index 4 get map_alias{
				mark 3 1 roll
				setsepcolorspace
				counttomark 0 ne{
					setsepcolor
				}if
				pop
				pop
			}{
				AGMCORE_&setcustomcolor
			}ifelse
		}{
			AGMCORE_&setcustomcolor
		}ifelse
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd /setpagedevice load def
	/setpagedevice { get_gstate spd set_gstate } def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known{
			currentpagedevice/NegativePrint get Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<< /NegativePrint Adobe_AGM_Core/AGMCORE_inverting get >> setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 
		fill grestore
	}if
	end
}def
/lw_save_restore_override {
	/md where {
		pop
		md /pmSVsetup{} put
		md /endp{}put
		md /pse{}put
		md /psb{}put
	}if
}def
/driver_media_override
{
	/md where {
		pop
		md /initializepage known {
			md /initializepage {} put
		} if
		md /rC known {
			md /rC {4{pop}repeat} put
		} if
	}if
	
	/mysetup where {
		/mysetup [1 0 0 1 0 0] put
	}if 
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def
	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def
	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.11 0
%%Copyright: Copyright 1997-2001 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 2.11 0
userdict/Adobe_CoolType_Core 60 dict dup begin put/Level2? systemdict
/languagelevel known dup{pop systemdict/languagelevel get 2 ge}if def Level2?
not{/currentglobal false def/setglobal/pop load def/gcheck{pop false}bind def
/currentpacking false def/setpacking/pop load def/SharedFontDirectory 0 dict
def}if currentpacking true setpacking/doc_setup{Adobe_CoolType_Core begin/mov
/moveto load def/nfnt/newencodedfont load def/mfnt/makefont load def/sfnt
/setfont load def/ufnt/undefinefont load def/chp/charpath load def/awsh
/awidthshow load def/wsh/widthshow load def/ash/ashow load def/sh/show load
def end userdict/Adobe_CoolType_Data 6 dict dup begin/AddWidths? false def/CC
0 def/charcode 2 string def end put}bind def/doc_trailer{currentdict
Adobe_CoolType_Core eq{end}if}bind def/page_setup{Adobe_CoolType_Core begin}
bind def/page_trailer{end}bind def/unload{systemdict/languagelevel known{
systemdict/languagelevel get 2 ge{userdict/Adobe_CoolType_Core 2 copy known{
undef}{pop pop}ifelse}if}if}bind def/ndf{1 index where{pop pop pop}{dup xcheck
{bind}if def}ifelse}def/findfont dup systemdict begin userdict begin
/globaldict where{/globaldict get begin}if dup where pop exch get/globaldict
where{pop end}if end end def/systemfindfont/findfont load def/undefinefont{pop
}ndf/copyfont{currentglobal 3 1 roll 1 index gcheck setglobal dup null eq{0}{
dup length}ifelse 2 index length add 1 add dict begin exch{1 index/FID eq{pop
pop}{def}ifelse}forall dup null eq{pop}{{def}forall}ifelse currentdict end
exch setglobal}bind def/copyarray{currentglobal exch dup gcheck setglobal dup
length array copy exch setglobal}bind def/newencodedfont{currentglobal{
SharedFontDirectory 3 index known{SharedFontDirectory 3 index get
/FontReferenced known}{false}ifelse}{FontDirectory 3 index known{FontDirectory
3 index get/FontReferenced known}{SharedFontDirectory 3 index known{
SharedFontDirectory 3 index get/FontReferenced known}{false}ifelse}ifelse}
ifelse dup{3 index findfont/FontReferenced get 2 index findfont ne{pop false}
if}if{pop 1 index findfont/Encoding get exch 0 1 255{2 copy get 3 index 3 1
roll put}for pop pop pop}{findfont dup dup maxlength 2 add dict begin exch{1
index/FID ne{def}{pop pop}ifelse}forall/FontReferenced exch def/Encoding exch
dup length array copy def/FontName 1 index dup type/stringtype eq{cvn}if def
currentdict end definefont pop}ifelse}bind def/SetSubstituteStrategy{
$SubstituteFont begin dup type/dicttype ne{0 dict}if currentdict/$Strategies
known{exch $Strategies exch 2 copy known{get 2 copy maxlength exch maxlength
add dict begin{def}forall{def}forall currentdict dup/$Init known{dup/$Init get
exec}if end/$Strategy exch def}{pop pop pop}ifelse}{pop pop}ifelse end}bind
def/scff{$SubstituteFont begin dup type/stringtype eq{dup length exch}{null}
ifelse/$sname exch def/$slen exch def end findfont $SubstituteFont begin
/$sname null def/$slen 0 def end}bind def/isWidthsOnlyFont{dup/WidthsOnly
known{pop pop true}{dup/FDepVector known{/FDepVector get{isWidthsOnlyFont dup{
exit}if}forall}{dup/FDArray known{/FDArray get{isWidthsOnlyFont dup{exit}if}
forall}{pop}ifelse}ifelse}ifelse}bind def/?set{$SubstituteFont begin
/$substituteFound false def/$fontname 4 index def/$doSmartSub false def end 3
index findfont $SubstituteFont begin $substituteFound{false}{dup/FontName
known{dup/FontName get $fontname eq 1 index/DistillerFauxFont known not and
/currentdistillerparams where{pop false 2 index isWidthsOnlyFont not and}if}{
false}ifelse}ifelse exch pop/$doSmartSub true def end{exch pop exch pop exch 2
dict dup/Found 3 index put exch findfont exch}{exch exec exch findfont 2 dict
dup/Downloaded 6 5 roll put}ifelse dup/FontName 4 index put copyfont
definefont pop}bind def/?str1 256 string def/?str2 256 string def/?add{1 index
type/integertype eq{exch true 4 2}{false 3 1}ifelse roll 1 index findfont dup
/Widths known{Adobe_CoolType_Data/AddWidths? true put gsave dup 1000 scalefont
setfont}if/Downloaded known{exec exch{exch ?str2 cvs exch findfont/Downloaded
get 1 dict begin/Downloaded 1 index def ?str1 cvs length ?str1 1 index 1 add 3
index putinterval exch length 1 add 1 index add ?str1 2 index(*)putinterval
?str1 0 2 index getinterval cvn findfont ?str1 3 index(+)putinterval 2 dict
dup/FontName ?str1 0 6 index getinterval cvn put dup/Downloaded Downloaded put
end copyfont dup/FontName get exch definefont pop pop pop}{pop}ifelse}{pop
exch{findfont dup/Found get dup length exch ?str1 cvs pop ?str1 1 index(+)
putinterval ?str1 1 index 1 add 4 index ?str2 cvs putinterval ?str1 exch 0
exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn 1 dict exch 1 index
exch/FontName exch put copyfont dup/FontName get exch definefont pop}{pop}
ifelse}ifelse Adobe_CoolType_Data/AddWidths? get{grestore Adobe_CoolType_Data
/AddWidths? false put}if}bind def/?sh{currentfont/Downloaded known{exch}if pop
}bind def/?chp{currentfont/Downloaded known{pop}{false chp}ifelse}bind def/?mv
{currentfont/Downloaded known{moveto pop pop}{pop pop moveto}ifelse}bind def
setpacking userdict/$SubstituteFont 25 dict put 1 dict begin/SubstituteFont
dup $error exch 2 copy known{get}{pop pop{pop/Courier}bind}ifelse def
/currentdistillerparams where dup{pop pop currentdistillerparams
/CannotEmbedFontPolicy 2 copy known{get/Error eq}{pop pop false}ifelse}if not{
countdictstack array dictstack 0 get begin userdict begin $SubstituteFont
begin/$str 128 string def/$fontpat 128 string def/$slen 0 def/$sname null def
/$match false def/$fontname null def/$substituteFound false def/$doSmartSub
true def/$depth 0 def/$fontname null def/$italicangle 26.5 def/$dstack null
def/$Strategies 10 dict dup begin/$Type3Underprint{currentglobal exch false
setglobal 11 dict begin/UseFont exch $WMode 0 ne{dup length dict copy dup
/WMode $WMode put/UseFont exch definefont}if def/FontName $fontname dup type
/stringtype eq{cvn}if def/FontType 3 def/FontMatrix[.001 0 0 .001 0 0]def
/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def/FontBBox[0 0 0 0]
def/CCInfo 7 dict dup begin/cc null def/x 0 def/y 0 def end def/BuildChar{exch
begin CCInfo begin 1 string dup 0 3 index put exch pop/cc exch def UseFont
1000 scalefont setfont cc stringwidth/y exch def/x exch def x y setcharwidth
$SubstituteFont/$Strategy get/$Underprint get exec 0 0 moveto cc show x y
moveto end end}bind def currentdict end exch setglobal}bind def/$GetaTint 2
dict dup begin/$BuildFont{dup/WMode known{dup/WMode get}{0}ifelse/$WMode exch
def $fontname exch dup/FontName known{dup/FontName get dup type/stringtype eq{
cvn}if}{/unnamedfont}ifelse exch $deepcopyfont exch 1 index exch/FontBasedOn
exch put dup/FontName $fontname dup type/stringtype eq{cvn}if put definefont}
bind def/$Underprint{gsave x abs y abs gt{/y 1000 def}{/x -1000 def 500 120
translate}ifelse Level2?{[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
setcolorspace}{0 setgray}ifelse 10 setlinewidth x .8 mul[7 3]{y mul 8 div 120
sub x 10 div exch moveto 0 y 4 div neg rlineto dup 0 rlineto 0 y 4 div rlineto
closepath gsave Level2?{.2 setcolor}{.8 setgray}ifelse fill grestore stroke}
forall pop grestore}bind def end def/$Oblique 1 dict dup begin/$BuildFont{
currentglobal exch dup gcheck setglobal null copyfont begin/FontBasedOn
currentdict/FontName known{FontName dup type/stringtype eq{cvn}if}{
/unnamedfont}ifelse def/FontName $fontname dup type/stringtype eq{cvn}if def
/currentdistillerparams where{pop}{/FontInfo currentdict/FontInfo known{
FontInfo null copyfont}{2 dict}ifelse dup begin/ItalicAngle $italicangle def
/FontMatrix FontMatrix[1 0 ItalicAngle dup sin exch cos div 1 0 0]matrix
concatmatrix readonly end 4 2 roll def def}ifelse FontName currentdict end
definefont exch setglobal}bind def end def/$None 1 dict dup begin/$BuildFont{}
bind def end def end def/$Oblique SetSubstituteStrategy/$findfontByEnum{dup
type/stringtype eq{cvn}if dup/$fontname exch def $sname null eq{$str cvs dup
length $slen sub $slen getinterval}{pop $sname}ifelse $fontpat dup 0(fonts/*)
putinterval exch 7 exch putinterval/$match false def $SubstituteFont/$dstack
countdictstack array dictstack put mark{$fontpat 0 $slen 7 add getinterval{
/$match exch def exit}$str filenameforall}stopped{cleardictstack currentdict
true $SubstituteFont/$dstack get{exch{1 index eq{pop false}{true}ifelse}{begin
false}ifelse}forall pop}if cleartomark/$slen 0 def $match false ne{$match
(fonts/)anchorsearch pop pop cvn}{/Courier}ifelse}bind def/$ROS 1 dict dup
begin/Adobe 4 dict dup begin/Japan1[/Ryumin-Light/HeiseiMin-W3
/GothicBBB-Medium/HeiseiKakuGo-W5/HeiseiMaruGo-W4/Jun101-Light]def/Korea1[
/HYSMyeongJo-Medium/HYGoThic-Medium]def/GB1[/STSong-Light/STHeiti-Regular]def
/CNS1[/MKai-Medium/MHei-Medium]def end def end def/$cmapname null def
/$deepcopyfont{dup/FontType get 0 eq{1 dict dup/FontName/copied put copyfont
begin/FDepVector FDepVector copyarray 0 1 2 index length 1 sub{2 copy get
$deepcopyfont dup/FontName/copied put/copied exch definefont 3 copy put pop
pop}for def currentdict end}{$Strategies/$Type3Underprint get exec}ifelse}bind
def/$buildfontname{length $str 1 index(-)putinterval 1 add $str 1 index
$cmapname $fontpat cvs putinterval $cmapname length add $str exch 0 exch
getinterval cvn}bind def/$findfontByROS{/$fontname exch def $ROS Registry 2
copy known{get Ordering 2 copy known{get}{pop pop[]}ifelse}{pop pop[]}ifelse
false exch{dup/CIDFont resourcestatus{pop pop save 1 index/CIDFont
findresource dup/WidthsOnly known{dup/WidthsOnly get}{false}ifelse exch pop
exch restore{pop}{exch pop true exit}ifelse}{pop}ifelse}forall{$str cvs
$buildfontname}{false(*){save exch dup/CIDFont findresource dup/WidthsOnly
known{dup/WidthsOnly get not}{true}ifelse exch/CIDSystemInfo get dup/Registry
get Registry eq exch/Ordering get Ordering eq and and{exch restore exch pop
true exit}{pop restore}ifelse}$str/CIDFont resourceforall{$buildfontname}{
$fontname $findfontByEnum}ifelse}ifelse}bind def end end currentdict/$error
known currentdict/languagelevel known and dup{pop $error/SubstituteFont known}
if dup{$error}{Adobe_CoolType_Core}ifelse begin{/SubstituteFont/CMap/Category
resourcestatus{pop pop{$SubstituteFont begin/$substituteFound true def dup
length $slen gt $sname null ne or $slen 0 gt and{$sname null eq{dup $str cvs
dup length $slen sub $slen getinterval cvn}{$sname}ifelse dup/CMap
resourcestatus{pop pop dup/$cmapname exch def/CMap findresource/CIDSystemInfo
get{def}forall $findfontByROS}{128 string cvs dup(-)search{3 1 roll search{3 1
roll pop{dup cvi}stopped{pop pop pop pop pop $findfontByEnum}{4 2 roll pop pop
exch length exch 2 index length 2 index sub exch 1 sub -1 0{$str cvs dup
length 4 index 0 4 index 4 3 roll add getinterval exch 1 index exch 3 index
exch putinterval dup/CMap resourcestatus{pop pop 4 1 roll pop pop pop dup
/$cmapname exch def/CMap findresource/CIDSystemInfo get{def}forall
$findfontByROS true exit}{pop}ifelse}for dup type/booleantype eq{pop}{pop pop
$findfontByEnum}ifelse}ifelse}{pop pop pop $findfontByEnum}ifelse}{pop pop
$findfontByEnum}ifelse}ifelse}{//SubstituteFont exec}ifelse/$slen 0 def end}}{
{$SubstituteFont begin/$substituteFound true def dup length $slen gt $sname
null ne or $slen 0 gt and{$findfontByEnum}{//SubstituteFont exec}ifelse end}}
ifelse bind readonly def Adobe_CoolType_Core/scfindfont/systemfindfont load
put}{/scfindfont{$SubstituteFont begin dup systemfindfont dup/FontName known{
dup/FontName get dup 3 index ne}{/noname true}ifelse dup{/$origfontnamefound 2
index def/$origfontname 4 index def/$substituteFound true def}if exch pop{
$slen 0 gt $sname null ne 3 index length $slen gt or and{pop dup
$findfontByEnum findfont dup maxlength 1 add dict begin{1 index/FID eq{pop pop
}{def}ifelse}forall currentdict end definefont dup/FontName known{dup/FontName
get}{null}ifelse $origfontnamefound ne{$origfontname $str cvs print
( substitution revised, using )print dup/FontName known{dup/FontName get}{
(unspecified font)}ifelse $str cvs print(.
)print}if}{exch pop}ifelse}{exch pop}ifelse end}bind def}ifelse end end
Adobe_CoolType_Core/findfont{$SubstituteFont begin $depth 0 eq{/$fontname 1
index dup type/stringtype ne{$str cvs}if def/$substituteFound false def}if
/$depth $depth 1 add def end scfindfont $SubstituteFont begin/$depth $depth 1
sub def $substituteFound $depth 0 eq and $doSmartSub and{currentdict/$Strategy
known{$Strategy/$BuildFont get exec}if}if end}bind put}if end end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.13 0
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated.
%%Version: 1.13 0
systemdict/languagelevel known dup{currentglobal false setglobal}{false}ifelse
exch userdict/Adobe_CoolType_Utility 2 copy known{2 copy get dup maxlength 25
add dict copy}{25 dict}ifelse put Adobe_CoolType_Utility begin/ct_Level2? exch
def/ct_Clone? 1183615869 internaldict dup/CCRun known not exch/eCCRun known
not ct_Level2? and or def/ct_UseNativeCapability? systemdict/composefont known
def/ct_MakeOCF 35 dict def/ct_Vars 25 dict def/ct_GlyphDirProcs 6 dict def
/ct_BuildCharDict 15 dict dup begin/charcode 2 string def/dst_string 1500
string def/nullstring()def/usewidths? true def end def ct_Level2?{setglobal}{
pop}ifelse ct_GlyphDirProcs begin/GetGlyphDirectory{systemdict/languagelevel
known{pop/CIDFont findresource/GlyphDirectory get}{1 index/CIDFont
findresource/GlyphDirectory get dup type/dicttype eq{dup dup maxlength exch
length sub 2 index lt{dup length 2 index add dict copy 2 index/CIDFont
findresource/GlyphDirectory 2 index put}if}if exch pop exch pop}ifelse +}def/+
{systemdict/languagelevel known{currentglobal false setglobal 3 dict begin/vm
exch def}{1 dict begin}ifelse/$ exch def systemdict/languagelevel known{vm
setglobal/gvm currentglobal def $ gcheck setglobal}if ?{$ begin}if}def/?{$
type/dicttype eq}def/|{userdict/Adobe_CoolType_Data known{Adobe_CoolType_Data
/AddWidths? known{currentdict Adobe_CoolType_Data begin begin AddWidths?{
Adobe_CoolType_Data/CC 3 index put ?{def}{$ 3 1 roll put}ifelse CC charcode
exch 1 index 0 2 index 256 idiv put 1 index exch 1 exch 256 mod put
stringwidth 2 array astore currentfont/Widths get exch CC exch put}{?{def}{$ 3
1 roll put}ifelse}ifelse end end}{?{def}{$ 3 1 roll put}ifelse}ifelse}{?{def}{
$ 3 1 roll put}ifelse}ifelse}def/!{?{end}if systemdict/languagelevel known{gvm
setglobal}if end}def/:{string currentfile exch readstring pop}executeonly def
end ct_MakeOCF begin/ct_cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09
/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C
/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F
/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42
/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55
/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68
/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B
/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E
/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1
/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4
/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7
/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA
/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED
/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_CID_STR_SIZE 8000 def/ct_mkocfStr100 100 string def/ct_defaultFontMtx[.001
0 0 .001 0 0]def/ct_1000Mtx[1000 0 0 1000 0 0]def/ct_raise{exch cvx exch
errordict exch get exec stop}bind def/ct_reraise{cvx $error/errorname get
(Error: )print dup(                    )cvs print errordict exch get exec stop
}bind def/ct_cvnsi{1 index add 1 sub 1 exch 0 4 1 roll{2 index exch get exch 8
bitshift add}for exch pop}bind def/ct_GetInterval{Adobe_CoolType_Utility
/ct_BuildCharDict get begin/dst_index 0 def dup dst_string length gt{dup
string/dst_string exch def}if 1 index ct_CID_STR_SIZE idiv/arrayIndex exch def
2 index arrayIndex get 2 index arrayIndex ct_CID_STR_SIZE mul sub{dup 3 index
add 2 index length le{2 index getinterval dst_string dst_index 2 index
putinterval length dst_index add/dst_index exch def exit}{1 index length 1
index sub dup 4 1 roll getinterval dst_string dst_index 2 index putinterval
pop dup dst_index add/dst_index exch def sub/arrayIndex arrayIndex 1 add def 2
index dup length arrayIndex gt{arrayIndex get}{pop exit}ifelse 0}ifelse}loop
pop pop pop dst_string 0 dst_index getinterval end}bind def ct_Level2?{
/ct_resourcestatus currentglobal mark true setglobal{/unknowninstancename
/Category resourcestatus}stopped{cleartomark setglobal true}{cleartomark
currentglobal not exch setglobal}ifelse{{mark 3 1 roll/Category findresource
begin ct_Vars/vm currentglobal put({ResourceStatus} stopped)0()/SubFileDecode
filter cvx exec{cleartomark false}{{3 2 roll pop true}{cleartomark false}
ifelse}ifelse ct_Vars/vm get setglobal end}}{{resourcestatus}}ifelse bind def
/CIDFont/Category ct_resourcestatus{pop pop}{currentglobal true setglobal
/Generic/Category findresource dup length dict copy dup/InstanceType/dicttype
put/CIDFont exch/Category defineresource pop setglobal}ifelse
ct_UseNativeCapability?{/CIDInit/ProcSet findresource begin 12 dict begin
begincmap/CIDSystemInfo 3 dict dup begin/Registry(Adobe)def/Ordering(Identity)
def/Supplement 0 def end def/CMapName/Identity-H def/CMapVersion 1 def
/CMapType 1 def 1 begincodespacerange<0000><ffff>endcodespacerange 1
begincidrange<0000><ffff>0 endcidrange endcmap CMapName currentdict/CMap
defineresource pop end end}if}{/ct_Category 2 dict begin/CIDFont 10 dict def
/ProcSet 2 dict def currentdict end def/defineresource{ct_Category 1 index 2
copy known{get dup dup maxlength exch length eq{dup length 10 add dict copy
ct_Category 2 index 2 index put}if 3 index 3 index put pop exch pop}{pop pop
/defineresource/undefined ct_raise}ifelse}bind def/findresource{ct_Category 1
index 2 copy known{get 2 index 2 copy known{get 3 1 roll pop pop}{pop pop
/findresource/undefinedresource ct_raise}ifelse}{pop pop/findresource
/undefined ct_raise}ifelse}bind def/resourcestatus{ct_Category 1 index 2 copy
known{get 2 index known exch pop exch pop{0 -1 true}{false}ifelse}{pop pop
/findresource/undefined ct_raise}ifelse}bind def/ct_resourcestatus
/resourcestatus load def}ifelse/ct_CIDInit 2 dict begin/ct_cidfont_stream_init
{{dup(Binary)eq{pop null currentfile ct_Level2?{{cid_BYTE_COUNT()
/SubFileDecode filter}stopped{pop pop pop}if}if/readstring load exit}if dup
(Hex)eq{pop currentfile ct_Level2?{{null exch/ASCIIHexDecode filter/readstring
}stopped{pop exch pop(>)exch/readhexstring}if}{(>)exch/readhexstring}ifelse
load exit}if/StartData/typecheck ct_raise}loop cid_BYTE_COUNT ct_CID_STR_SIZE
le{2 copy cid_BYTE_COUNT string exch exec pop 1 array dup 3 -1 roll 0 exch put
}{cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi dup array exch 2 sub 0 exch 1
exch{2 copy 5 index ct_CID_STR_SIZE string 6 index exec pop put pop}for 2
index cid_BYTE_COUNT ct_CID_STR_SIZE mod string 3 index exec pop 1 index exch
1 index length 1 sub exch put}ifelse cid_CIDFONT exch/GlyphData exch put 2
index null eq{pop pop pop}{pop/readstring load 1 string exch{3 copy exec pop
dup length 0 eq{pop pop pop pop pop true exit}if 4 index eq{pop pop pop pop
false exit}if}loop pop}ifelse}bind def/StartData{mark{currentdict dup/FDArray
get 0 get/FontMatrix get 0 get .001 eq{dup/CDevProc known not{/CDevProc
1183615869 internaldict/stdCDevProc 2 copy known{get}{pop pop{pop pop pop pop
pop 0 -1000 7 index 2 div 880}}ifelse def}if}{/CDevProc{pop pop pop pop pop 0
1 cid_temp/cid_CIDFONT get/FDArray get 0 get/FontMatrix get 0 get div 7 index
2 div 1 index .88 mul}def}ifelse/cid_temp 15 dict def cid_temp begin
/cid_CIDFONT exch def 3 copy pop dup/cid_BYTE_COUNT exch def 0 gt{
ct_cidfont_stream_init FDArray{/Private get dup/SubrMapOffset known{begin
/Subrs SubrCount array def Subrs SubrMapOffset SubrCount SDBytes ct_Level2?{
currentdict dup/SubrMapOffset undef dup/SubrCount undef/SDBytes undef}if end
/cid_SD_BYTES exch def/cid_SUBR_COUNT exch def/cid_SUBR_MAP_OFFSET exch def
/cid_SUBRS exch def cid_SUBR_COUNT 0 gt{GlyphData cid_SUBR_MAP_OFFSET
cid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi 0 1 cid_SUBR_COUNT 1 sub{
exch 1 index 1 add cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add GlyphData exch
cid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi cid_SUBRS 4 2 roll
GlyphData exch 4 index 1 index sub ct_GetInterval dup length string copy put}
for pop}if}{pop}ifelse}forall}if cleartomark pop pop end CIDFontName
currentdict/CIDFont defineresource pop end end}stopped{cleartomark/StartData
ct_reraise}if}bind def currentdict end def/ct_saveCIDInit{/CIDInit/ProcSet
ct_resourcestatus{true}{/CIDInitC/ProcSet ct_resourcestatus}ifelse{pop pop
/CIDInit/ProcSet findresource ct_UseNativeCapability?{pop null}{/CIDInit
ct_CIDInit/ProcSet defineresource pop}ifelse}{/CIDInit ct_CIDInit/ProcSet
defineresource pop null}ifelse ct_Vars exch/ct_oldCIDInit exch put}bind def
/ct_restoreCIDInit{ct_Vars/ct_oldCIDInit get dup null ne{/CIDInit exch/ProcSet
defineresource pop}{pop}ifelse}bind def/ct_BuildCharSetUp{1 index begin
CIDFont begin Adobe_CoolType_Utility/ct_BuildCharDict get begin/ct_dfCharCode
exch def/ct_dfDict exch def CIDFirstByte ct_dfCharCode add dup CIDCount ge{pop
0}if/cid exch def{GlyphDirectory cid 2 copy known{get}{pop pop nullstring}
ifelse dup length FDBytes sub 0 gt{dup FDBytes 0 ne{0 FDBytes ct_cvnsi}{pop 0}
ifelse/fdIndex exch def dup length FDBytes sub FDBytes exch getinterval
/charstring exch def exit}{pop cid 0 eq{/charstring nullstring def exit}if/cid
0 def}ifelse}loop}def/ct_SetCacheDevice{0 0 moveto dup stringwidth 3 -1 roll
true charpath pathbbox 0 -1000 7 index 2 div 880 setcachedevice2 0 0 moveto}
def/ct_CloneSetCacheProc{1 eq{stringwidth pop -2 div -880 0 -1000 setcharwidth
moveto}{usewidths?{currentfont/Widths get cid 2 copy known{get exch pop aload
pop}{pop pop stringwidth}ifelse}{stringwidth}ifelse setcharwidth 0 0 moveto}
ifelse}def/ct_Type3ShowCharString{ct_FDDict fdIndex 2 copy known{get}{
currentglobal 3 1 roll 1 index gcheck setglobal ct_Type1FontTemplate dup
maxlength dict copy begin FDArray fdIndex get dup/FontMatrix 2 copy known{get}
{pop pop ct_defaultFontMtx}ifelse/FontMatrix exch dup length array copy def
/Private get/Private exch def/Widths rootfont/Widths get def/CharStrings 1
dict dup/.notdef<d841272cf18f54fc13>dup length string copy put def currentdict
end/ct_Type1Font exch definefont dup 5 1 roll put setglobal}ifelse dup
/CharStrings get 1 index/Encoding get ct_dfCharCode get charstring put
rootfont/WMode 2 copy known{get}{pop pop 0}ifelse exch 1000 scalefont setfont
ct_str1 0 ct_dfCharCode put ct_str1 exch ct_dfSetCacheProc ct_SyntheticBold{
currentpoint ct_str1 show newpath moveto ct_str1 true charpath ct_StrokeWidth
setlinewidth stroke}{ct_str1 show}ifelse}def/ct_Type4ShowCharString{ct_dfDict
ct_dfCharCode charstring FDArray fdIndex get dup/FontMatrix get dup
ct_defaultFontMtx ct_matrixeq not{ct_1000Mtx matrix concatmatrix concat}{pop}
ifelse/Private get Adobe_CoolType_Utility/ct_Level2? get not{ct_dfDict/Private
3 -1 roll{put}1183615869 internaldict/superexec get exec}if 1183615869
internaldict Adobe_CoolType_Utility/ct_Level2? get{1 index}{3 index/Private
get mark 6 1 roll}ifelse dup/RunInt known{/RunInt get}{pop/CCRun}ifelse get
exec Adobe_CoolType_Utility/ct_Level2? get not{cleartomark}if}bind def
/ct_BuildCharIncremental{{Adobe_CoolType_Utility/ct_MakeOCF get begin
ct_BuildCharSetUp ct_ShowCharString}stopped{stop}if end end end end}bind def
/BaseFontNameStr(BF00)def/ct_Type1FontTemplate 14 dict begin/FontType 1 def
/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def/Encoding
ct_cHexEncoding def/PaintType 0 def currentdict end def/BaseFontTemplate 11
dict begin/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def
/Encoding ct_cHexEncoding def/BuildChar/ct_BuildCharIncremental load def
ct_Clone?{/FontType 3 def/ct_ShowCharString/ct_Type3ShowCharString load def
/ct_dfSetCacheProc/ct_CloneSetCacheProc load def/ct_SyntheticBold false def
/ct_StrokeWidth 1 def}{/FontType 4 def/Private 1 dict dup/lenIV 4 put def
/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def/PaintType 0 def
/ct_ShowCharString/ct_Type4ShowCharString load def}ifelse/ct_str1 1 string def
currentdict end def/BaseFontDictSize BaseFontTemplate length 5 add def
/ct_matrixeq{true 0 1 5{dup 4 index exch get exch 3 index exch get eq and dup
not{exit}if}for exch pop exch pop}bind def/ct_makeocf{15 dict begin exch/WMode
exch def exch/FontName exch def/FontType 0 def/FMapType 2 def/FontMatrix
matrix def/bfCount 1 index/CIDCount get 256 idiv 1 add dup 256 gt{pop 256}if
def/Encoding 256 array 0 1 bfCount 1 sub{2 copy dup put pop}for bfCount 1 255{
2 copy bfCount put pop}for def/FDepVector bfCount dup 256 lt{1 add}if array
def BaseFontTemplate BaseFontDictSize dict copy begin/CIDFont exch def CIDFont
/FontBBox known{CIDFont/FontBBox get/FontBBox exch def}if CIDFont/CDevProc
known{CIDFont/CDevProc get/CDevProc exch def}if currentdict end
BaseFontNameStr 3(0)putinterval 0 1 bfCount dup 256 eq{1 sub}if{FDepVector
exch 2 index BaseFontDictSize dict copy begin dup/CIDFirstByte exch 256 mul
def FontType 3 eq{/ct_FDDict 2 dict def}if currentdict end 1 index 16
BaseFontNameStr 2 2 getinterval cvrs pop BaseFontNameStr exch definefont put}
for ct_Clone?{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
if FontName currentdict end definefont ct_Clone?{gsave dup 1000 scalefont
setfont ct_BuildCharDict begin/usewidths? false def currentfont/Widths get
begin exch/CIDFont get/GlyphDirectory get{pop dup charcode exch 1 index 0 2
index 256 idiv put 1 index exch 1 exch 256 mod put stringwidth 2 array astore
def}forall end/usewidths? true def end grestore}{exch pop}ifelse}bind def
/ct_ComposeFont{ct_UseNativeCapability?{2 index/CMap ct_resourcestatus{pop pop
exch pop}{/CIDInit/ProcSet findresource begin 12 dict begin begincmap/CMapName
3 index def/CMapVersion 1 def/CMapType 1 def exch/WMode exch def/CIDSystemInfo
3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs
(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop
(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1
begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0
endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}
ifelse composefont}{3 2 roll pop 0 get/CIDFont findresource ct_makeocf}ifelse}
bind def/ct_MakeIdentity{ct_UseNativeCapability?{1 index/CMap
ct_resourcestatus{pop pop}{/CIDInit/ProcSet findresource begin 12 dict begin
begincmap/CMapName 2 index def/CMapVersion 1 def/CMapType 1 def/CIDSystemInfo
3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs
(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop
(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1
begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0
endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}
ifelse composefont}{exch pop 0 get/CIDFont findresource ct_makeocf}ifelse}bind
def currentdict readonly pop end end
%%EndResource
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Gradient 1.1 0
%%Version: 1.1 0
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Gradient 190 dict dup begin put
/AGMGrad_&image nd
/AGMGrad_&colorimage nd
/AGMGrad_&fill nd
/AGMGrad_subSampleOK nd
/AGMGrad_d255 nd
/AGMGrad_sSave nd
/AGMGrad_dUserSpace nd
/AGMGrad_bUMatrix nd
/AGMGrad_imageMatrix nd
/AGMGrad_saveMatrix nd
/AGMGrad_gMatrix nd
/AGMGrad_tmpMat nd
/AGMGrad_currentcolorspace nd
/AGMGrad_bbox nd
/AGMGrad_usingShells nd
/AGMGrad_byte nd
/AGMGrad_blackTmp nd
/AGMGrad_yellowTmp nd
/AGMGrad_magentaTmp nd
/AGMGrad_cyanTmp nd
/AGMGrad_cnt nd
/AGMGrad_usingSmoothShade nd
/AGMGrad_index nd
/AGMGrad_rampFuncsArray nd
/AGMGrad_boundsArray nd
/AGMGrad_encodeArray nd
/AGMGrad_beginCoord nd
/AGMGrad_colorSpace nd
/AGMGrad_firstFill nd
/AGMGrad_lastFill nd
/AGMGrad_size nd
/AGMGrad_rampLen nd
/AGMGrad_invert nd
/AGMGrad_endCoord nd
/AGMGrad_s nd
/AGMGrad_j nd
/AGMGrad_i nd
/AGMGrad_tintNdx nd
/AGMGrad_cmpNdx nd
/AGMGrad_nColorSpace nd
/AGMGrad_C0 nd
/AGMGrad_C0_Space nd
/AGMGrad_C1 nd
/AGMGrad_C1_Space nd
/AGMGrad_rampColorSpace nd
/AGMGrad_bUMatrix nd
/AGMGrad_channels nd
/AGMGrad_len nd
/AGMGrad_currenttint nd
/AGMGrad_currentcolorant nd
/AGMGrad_cmpIndx nd
/AGMGrad_ndx nd
/AGMGrad_rampIndex nd
/AGMGrad_firstShell nd
/AGMGrad_ramp nd
/AGMGrad_rampDict nd
/AGMGrad_endPoint nd
/AGMGrad_rampPoint nd
/AGMGrad_midPoint nd
/AGMGrad_colorRamp nd
/AGMGrad_nSamples nd
/AGMGrad_sInc nd
/AGMGrad_bInc nd
/AGMGrad_nSubSamples nd
/AGMGrad_optimize nd
/AGMGrad_nRadSamples nd
/AGMGrad_uRampLen nd
/AGMGrad_pChange nd
/AGMGrad_xBCInc nd
/AGMGrad_yBCInc nd
/AGMGrad_nColorsBd nd
/AGMGrad_gradType nd
/AGMGrad_gradName nd
/AGMGrad_renderFlag nd
/AGMGrad_retainPath nd
/AGMGrad_enabledSmoothShade nd
/AGMGrad_rampData nd
/AGMGrad_nRamps nd
/AGMGrad_xHi nd
/AGMGrad_yHi nd
/AGMGrad_radHilite nd
/AGMGrad_gradNames nd		
/AGMGrad_tint nd
/AGMGrad_tint_min nd
/AGMGrad_tint_max nd
/AGMGrad_range nd
/doc_setup
{
	Adobe_AGM_Core begin
	Adobe_AGM_Gradient begin
	initializeVars
	
	level2{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeShading
	/image where{
		/image get /AGMGrad_&image xp
	}if
	/colorimage where{
		/colorimage get /AGMGrad_&colorimage xp
	}if
	/AGMGrad_&fill /fill load def
	end
	end
}def
/doc_trailer{
	currentdict Adobe_AGM_Gradient eq{
		end
	}if
}def
 
/page_setup
{
	Adobe_AGM_Gradient begin
	/AGMGrad_subSampleOK 
		AGMCORE_deviceDPI AGMGrad_dpiThreshold le 
		currentScreenFreq AGMGrad_screenFreqThreshold le and 
		AGMGrad_contoneDevice not and 
	def
	initializeRectFill
	AGMCORE_producing_seps{
		initializeSep
	}{
		initializeComposite
	}ifelse
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
	end
}def
/page_trailer
{
}def
/initializeVars{
	/AGMGrad_d255 256 array def
	0 1 255{
		AGMGrad_d255 exch dup 255 div put
	}bind for
	/AGMGrad_sSave nd
	/AGMGrad_dUserSpace matrix defaultmatrix def
	/AGMGrad_bUMatrix matrix def
	/AGMGrad_imageMatrix matrix def
	/AGMGrad_saveMatrix matrix def
	/AGMGrad_gMatrix matrix def
	/AGMGrad_tmpMat matrix def
	/AGMGrad_currentcolorspace nd
	/AGMGrad_bbox 4 array def
	/AGMGrad_black (/AGM_Black) def
}def
/queryDevice{
	/AGMGrad_PathsOnly false ndf
	/AGMGrad_useShells false ndf
	/AGMGrad_usingShells AGMGrad_useShells pt
	/AGMGrad_useSmoothShade true ndf
	/AGMGrad_dpiThreshold 600 ndf
	/AGMGrad_screenFreqThreshold 150 ndf
	/AGMGrad_contoneDevice false ndf
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not AGMCORE_producing_seps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/AGMGrad_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/AGMGrad_blackTmp xp
			/AGMGrad_yellowTmp xp
			/AGMGrad_magentaTmp xp
			/AGMGrad_cyanTmp xp
			/AGMGrad_cnt 0 pt
			
			[
			AGMGrad_byte dup 0
			AGMGrad_cyanTmp 
				/AGMGrad_cnt cvx /get cvx AGMGrad_d255 /exch cvx /get cvx .3 /mul cvx
			AGMGrad_magentaTmp
				/AGMGrad_cnt cvx /get cvx AGMGrad_d255 /exch cvx /get cvx .59 /mul cvx
			AGMGrad_yellowTmp
				/AGMGrad_cnt cvx /get cvx AGMGrad_d255 /exch cvx /get cvx .11 /mul cvx
			AGMGrad_blackTmp 
				/AGMGrad_cnt cvx /get cvx AGMGrad_d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/AGMGrad_cnt dup cvx 1 /add cvx /pt cvx
			] cvx bind
			
			AGMGrad_&image
		}def
	}ifelse
	
	/setcolor nd
	/currentcolor nd
	
	/setcolorspace
	{
		0 get /AGMGrad_currentcolorspace xp
		AGMGrad_currentcolorspace /DeviceCMYK eq{
			/setcolor {setcmykcolor} bind pt
			/currentcolor {currentcmykcolor} bind pt
		}{
			AGMGrad_currentcolorspace /DeviceGray eq{
				/setcolor {setgray} bind pt
				/currentcolor {currentgray} bind pt
			}{
				AGMGrad_currentcolorspace /DeviceRGB eq{
					/setcolor {setrgbcolor} bind pt
					/currentcolor {currentrgbcolor} bind pt
				}if
			}ifelse
		}ifelse
	}def
	/currentcolorspace
	{
		[ AGMGrad_currentcolorspace ]
	}def
	/dictImage
	{
		pop
		currentcolorspace 0 get /DeviceGray eq {
			aload pop
			AGMGrad_&image
		}{
			dup length /AGMGrad_tmp xp
			aload pop true AGMGrad_tmp
			colorimage
		}ifelse
	}def
}def
/initializeLev2{
	/dictImage
	{
		10 dict begin
			/Decode xdf
			/DataSource xdf
			/ImageMatrix xdf
			/BitsPerComponent xdf
			/Height xdf
			/Width xdf
			/ImageType 1 def
			DataSource type /arraytype eq{
				/MultipleDataSources true def
			}if
			currentdict
		end
		AGMGrad_&image
	}def
}def
/initializeShading{
	AGMGrad_useSmoothShade level3 and{
		/AGMGrad_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/AGMGrad_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/AGMGrad_index AGMGrad_gradType 0 eq {0}{AGMGrad_maxRampIndex} ifelse pt
		/AGMGrad_rampFuncsArray AGMGrad_nRamps array pt
		/AGMGrad_boundsArray AGMGrad_nRamps 1 sub array pt
		/AGMGrad_encodeArray AGMGrad_nRamps 2 mul array pt
		/AGMGrad_beginCoord AGMGrad_rampPoint pt
		/AGMGrad_colorSpace null pt
		/AGMGrad_firstFill AGMGrad_rampIndex AGMGrad_maxRampIndex eq pt
		/AGMGrad_lastFill false pt
	}def
	/linealShFill{
		popRampSpace
		AGMGrad_gMatrix pushRampSpace
		
		/AGMGrad_size AGMGrad_index 1 add pt
		AGMGrad_size AGMGrad_nRamps lt {
			/AGMGrad_rampFuncsArray AGMGrad_rampFuncsArray 0 AGMGrad_size getinterval pt
			/AGMGrad_boundsArray AGMGrad_boundsArray 0 AGMGrad_size 1 sub getinterval pt
			/AGMGrad_encodeArray AGMGrad_encodeArray 0 AGMGrad_size 2 mul getinterval pt
		}if
		
		/AGMGrad_rampLen AGMGrad_endCoord AGMGrad_beginCoord sub pt
		bdict
			/ShadingType 2
			/ColorSpace AGMGrad_colorSpace
			/Function 
				bdict
					/FunctionType 3
					/Domain [0 1]
					/Functions AGMGrad_rampFuncsArray
					/Bounds AGMGrad_boundsArray
					/Encode AGMGrad_encodeArray
				edict
				AGMGrad_nRamps 1 gt{
					dup begin
					/Bounds [ Bounds {AGMGrad_beginCoord sub AGMGrad_rampLen div} forall] def
					end
				}if
			/Extend [AGMGrad_firstFill AGMGrad_lastFill]
			/Domain [0 1] 
			/Coords [AGMGrad_beginCoord 0 AGMGrad_endCoord 0]
		edict
		shfill
	}def
	
	/radialShFill{
		/AGMGrad_size AGMGrad_nRamps AGMGrad_index sub pt
		AGMGrad_size AGMGrad_nRamps lt {
			/AGMGrad_rampFuncsArray AGMGrad_rampFuncsArray AGMGrad_index AGMGrad_size getinterval pt
			/AGMGrad_boundsArray AGMGrad_boundsArray AGMGrad_index AGMGrad_size 1 sub getinterval pt
			/AGMGrad_encodeArray AGMGrad_encodeArray AGMGrad_index 2 mul AGMGrad_size 2 mul getinterval pt
		}if
		
		/AGMGrad_rampLen AGMGrad_beginCoord AGMGrad_endCoord sub pt
		bdict
			/ShadingType 3
			/ColorSpace AGMGrad_colorSpace
			/Function 
				bdict
					/FunctionType 3
					/Domain [0 1]
					/Functions AGMGrad_rampFuncsArray
					/Bounds AGMGrad_boundsArray
					/Encode AGMGrad_encodeArray
				edict
				AGMGrad_nRamps 1 gt{
					dup begin
					/Bounds [ Bounds {AGMGrad_endCoord sub AGMGrad_rampLen div} forall] def
					end
				}if
			/Extend [AGMGrad_lastFill false]
			/Domain [0 1] 
			/Coords [AGMGrad_xHi AGMGrad_rampLen mul AGMGrad_yHi AGMGrad_rampLen mul AGMGrad_endCoord 0 0 AGMGrad_beginCoord] 
		edict
		shfill
		
		AGMGrad_radHilite{
			AGMGrad_xHi AGMGrad_rampLen mul AGMGrad_yHi AGMGrad_rampLen mul translate
		}if
	}def
	
	/sampFunc{
		/AGMGrad_tmp exch pt
		bdict
			/FunctionType 0
			/Order 1
			/Size [AGMGrad_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource AGMGrad_tmp
			/Range [0 1]
		edict
	}def
	
	/fillRamp{
	
	
		/AGMGrad_invert AGMGrad_midPoint 0.5 lt pt
		AGMGrad_rampIndex AGMGrad_maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		AGMGrad_colorSpace null eq{
			/AGMGrad_colorSpace AGMGrad_rampColorSpace pt
		}{
			AGMGrad_colorSpace AGMGrad_rampColorSpace ne {
				/AGMGrad_index AGMGrad_index 1 
				AGMGrad_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/AGMGrad_colorSpace AGMGrad_rampColorSpace pt
			} if
		}ifelse
		/AGMGrad_endCoord AGMGrad_endPoint pt	
		
		Interpolation{
			false
		}{
			SpotColor{
				false
			}{
				AGMCORE_is_cmyk_sep
			}ifelse
		}ifelse
		
		{ 
			AGMCORE_composite_job{
							
				/AGMGrad_s NumSamples NumComponents mul string def
				/AGMGrad_j 0 pt
				0 1 NumSamples 1 sub {
					/AGMGrad_i exch pt
					0 1 NumComponents 1 sub {
						Ramp exch get AGMGrad_i get AGMGrad_s AGMGrad_j 3 -1 roll put 
						/AGMGrad_j AGMGrad_j 1 add pt
					}for
				}for
				
				AGMGrad_rampFuncsArray AGMGrad_index
				bdict
					/FunctionType 0
					/Order 1
					/Size [NumSamples]
					/Domain [0 1]
					/BitsPerSample 8
					/DataSource AGMGrad_s
					/Range [NumComponents {0 1} repeat]
				edict
				put
			}{
				AGMGrad_rampFuncsArray AGMGrad_index
					AGMCORE_cyan_plate{
						Ramp 0 get
					}if
					AGMCORE_magenta_plate{
						Ramp 1 get
					}if
					AGMCORE_yellow_plate{
						Ramp 2 get
					}if
					AGMCORE_black_plate{
						Ramp 3 get
					}if
					sampFunc
					dup begin /Decode [1 0] def end
				put
			}ifelse
			/AGMGrad_invert false pt
		}{
			
			AGMGrad_rampFuncsArray AGMGrad_index
				bdict
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log AGMGrad_invert{1 AGMGrad_midPoint sub}{AGMGrad_midPoint}ifelse log div
					AGMGrad_gradType 0 eq{
						AGMGrad_invert{/C1}{/C0}ifelse AGMGrad_C0
						AGMGrad_invert{/C0}{/C1}ifelse AGMGrad_C1
					}{
						AGMGrad_invert{/C0}{/C1}ifelse AGMGrad_C1
						AGMGrad_invert{/C1}{/C0}ifelse AGMGrad_C0
					}ifelse
				edict
			put
		}ifelse
		
		AGMGrad_rampIndex 0 ne{
			AGMGrad_boundsArray AGMGrad_index AGMGrad_gradType 1 eq{1 sub}if AGMGrad_endCoord put
		} if
		
		0 1 AGMGrad_invert {exch}if
		AGMGrad_encodeArray AGMGrad_index 2 mul 1 add 3 -1 roll put
		AGMGrad_encodeArray AGMGrad_index 2 mul 3 -1 roll put
		AGMGrad_rampIndex 0 eq {
			/AGMGrad_lastFill true pt
			AGMGrad_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/AGMGrad_index AGMGrad_index 1 
		AGMGrad_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	AGMGrad_PathsOnly not level2 not and{
		/linealFill{
			8 setImageParms
			AGMGrad_colorRamp{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 AGMGrad_&colorimage
			}{
				currentgray makeByte8 AGMGrad_&image 
			}ifelse
		}def
	}if
	level3{
		/getRampColorSpace{
			SpotColor{
				
				AGMGrad_rampDict/AGMGrad_midPoint 0.5 put
				
				[/DeviceN 
					[
					Colorants 0 get
					substituteBlack
					NumTintComponents 2 eq{
						Colorants 1 get
						substituteBlack
					}if
					] 
					CSA map_csa 
					[
						/AGMGrad_range NumTintComponents 2 eq {1} {0} ifelse pt
						/AGMGrad_tint_range_0 TintRange AGMGrad_range get 0 get pt
						/AGMGrad_tint_range_1 TintRange AGMGrad_range get 1 get pt
						AGMGrad_tint_range_0 AGMGrad_tint_range_1 2 copy gt{
							/AGMGrad_tint_min xdf
							/AGMGrad_tint_max xdf
						}{
							/AGMGrad_tint_max xdf
							/AGMGrad_tint_min xdf
						}ifelse
						NumTintComponents 2 eq{	
							/exch cvx  /pop	cvx	
						}{
							AGMGrad_tint_range_0 AGMGrad_tint_range_1 gt{
								AGMGrad_tint_max /exch cvx /sub cvx	AGMGrad_tint_min /add cvx
							}if	
						}ifelse
						/AGMGrad_tint /xp cvx
											
						/AGMGrad_tintNdx 
							/AGMGrad_tint cvx 
							AGMGrad_tint_min /sub cvx 
							AGMGrad_tint_max AGMGrad_tint_min sub 
							dup 0 eq{
								pop 1
							}if
							/div cvx 
							NumSamples 1 sub /mul cvx /cvi cvx
							/dup cvx 0 /lt cvx {
								pop 0
							} /if cvx
							/dup cvx NumSamples 1 sub /gt cvx [
								/pop cvx NumSamples 1 sub
							] cvx /if cvx
						/pt cvx
						
						/AGMGrad_cmpNdx 0 pt
						NumComponents{
							Ramp AGMGrad_cmpNdx /get cvx /dup cvx /type cvx /stringtype /eq cvx{
								AGMGrad_tintNdx get
								AGMGrad_d255 exch get
							}/if cvx
							/AGMGrad_cmpNdx AGMGrad_cmpNdx 1 add pt
						}repeat
						{
							currentdict/Decode known{
								0 2 NumComponents 2 mul 1 sub{
									/AGMGrad_i xp
									NumComponents -1 roll
									Decode AGMGrad_i 1 add get 
									Decode AGMGrad_i get 
									sub mul 
									Decode AGMGrad_i get add
								}for
							}if
						} bind /exec cvx
					] cvx
				] setcolorspace
				/AGMGrad_nColorSpace currentcolorspace pt
			}if
			
			AGMGrad_nSamples 1 gt{ 
				firstRampColor
			}if
			SpotColor{
				/AGMGrad_C0 [
					currenttints 0 get
					currenttints length 2 eq{
						currenttints 1 get
					}if
				] pt
				/AGMGrad_C0_Space AGMGrad_nColorSpace pt
			}{
				/AGMGrad_C0 [currentcolor] pt
				/AGMGrad_C0_Space currentcolorspace pt
			}ifelse
			AGMGrad_nSamples 1 gt{ 
				lastRampColor
			}if
			SpotColor{
				/AGMGrad_C1 [
					currenttints 0 get
					currenttints length 2 eq{
						currenttints 1 get
					}if
				] pt
				/AGMGrad_C1_Space AGMGrad_nColorSpace pt
			}{
				/AGMGrad_C1 [currentcolor] pt
				/AGMGrad_C1_Space currentcolorspace pt
			}ifelse
			
			/AGMGrad_rampColorSpace AGMGrad_C0_Space pt
			
		}def
	}if
}def
/npop{
	{pop}repeat
}def
/pt{
	Adobe_AGM_Gradient 3 1 roll put
}def
/xp{
	exch pt
}def
/mySave{
	save /AGMGrad_sSave xp
}def
/myRestore{
	AGMGrad_sSave type /savetype eq{
		AGMGrad_sSave restore
	}if
}def
/pushRampSpace{
	newpath gsave
	dup /AGMGrad_bUMatrix xp concat 
}def
/popRampSpace{
	grestore
}def
/makeByte8{
	/AGMGrad_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup AGMGrad_tmp 3 index put 
		/AGMGrad_tmp AGMGrad_tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 AGMGrad_imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/path_bbox
{
	{currentpoint} stopped {
		0 0 0 0
	}{
		pop pop
		pathbbox
	}ifelse
}def
/expandOne	{
	/AGMGrad_tmp xp
	dup type /stringtype ne{
		AGMGrad_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 AGMGrad_tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/AGMGrad_channels xp
	/AGMGrad_len xp
	AGMGrad_channels{
		AGMGrad_len expandOne AGMGrad_channels 1 roll
	}repeat
}def
/substituteBlack{
	dup AGMGrad_black eq{
		pop /Black
	}if
}def
/settints
{
	/AGMGrad_currenttint xp
}def
/currenttints
{
	AGMGrad_currenttint
}def
/setcolorants
{
	/AGMGrad_currentcolorant xp
}def
/currentcolorants
{
	AGMGrad_currentcolorant
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/rampColor{
	
	
	/AGMGrad_cmpIndx 0 pt
	AGMCORE_producing_seps not SpotColor and AGMGrad_enabledSmoothShade and not{
		NumComponents{
			Ramp AGMGrad_cmpIndx get dup type /stringtype eq{
				/AGMGrad_ndx cvx /get cvx AGMGrad_d255 /exch cvx /get cvx
			}if
			/AGMGrad_cmpIndx AGMGrad_cmpIndx 1 add pt
		}repeat
		{
			currentdict/Decode known{
				0 2 NumComponents 2 mul 1 sub{
					/AGMGrad_i xp
					NumComponents -1 roll
					Decode AGMGrad_i 1 add get 
					Decode AGMGrad_i get 
					sub mul 
					Decode AGMGrad_i get add
				}for
			}if
			setcolor
		} bind /exec cvx
	}if
	AGMCORE_producing_seps AGMGrad_enabledSmoothShade or SpotColor and{
		/mark cvx
		TintRamp 0 get dup type /stringtype eq{
			/AGMGrad_ndx cvx /get cvx AGMGrad_d255 /exch cvx /get cvx
		}if
		NumTintComponents 2 eq{
			 TintRamp 1 get dup type /stringtype eq{
				/AGMGrad_ndx cvx /get cvx AGMGrad_d255 /exch cvx /get cvx
			}if
		}if
		(]) cvn cvx
		/settints cvx
		Colorants /setcolorants cvx
	}if
}def
/firstRampColor{
	/AGMGrad_ndx 0 pt
	[rampColor] cvx exec
}def			
/lastRampColor{
	/AGMGrad_ndx AGMGrad_nSamples 1 sub pt
	[rampColor] cvx exec
}def			
/useRectImage{
	AGMGrad_subSampleOK AGMGrad_usingSmoothShade not and{
		0 1 dtransform atan cvi 90 mod 0 eq
		1 0 dtransform atan cvi 90 mod 0 eq
		and
	}{
		false
	}ifelse
}def
/linealImage{
	useRectImage AGMGrad_PathsOnly or{
		rectImage
	}{
		rampImage
	}ifelse
}def
/linealRamp{
	pushRampSpace
	AGMGrad_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popRampSpace
	/AGMGrad_rampIndex AGMGrad_rampIndex 1 sub pt
	AGMGrad_rampIndex 0 ge{
		getRampData
	}if
}def
/radialGrad{
	/AGMGrad_usingShells currentoverprint AGMCORE_producing_seps and AGMGrad_usingShells or pt
	
	/AGMGrad_firstShell true pt
	currentoverprint AGMCORE_producing_seps and{
		
		newpath
		clippath path_bbox 
		1 add 4 1 roll
		1 add 4 1 roll
		1 sub 4 1 roll
		1 sub 4 1 roll
		AGMGrad_bbox astore pop
		
		newpath
		AGMGrad_bbox 0 get AGMGrad_bbox 1 get moveto
		AGMGrad_bbox 2 get AGMGrad_bbox 1 get lineto
		AGMGrad_bbox 2 get AGMGrad_bbox 3 get lineto
		AGMGrad_bbox 0 get AGMGrad_bbox 3 get lineto
		closepath
		dup
		gsave dup /AGMGrad_bUMatrix xp concat
		AGMGrad_rampPoint 0 moveto 0 0 AGMGrad_rampPoint 0 360 arc closepath
		eoclip fill
		popRampSpace
	}if
	pushRampSpace
	
	AGMGrad_radHilite{
		AGMGrad_rampPoint 1 lt{
			1 AGMGrad_rampPoint sub dup AGMGrad_xHi mul exch AGMGrad_yHi mul translate
		}if
	}if
	AGMGrad_nRamps{
		radialRamp
		/AGMGrad_rampIndex AGMGrad_rampIndex 1 sub pt
		AGMGrad_rampIndex 0 ge{
			getRampData
		}if
	}repeat
	
	popRampSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/AGMGrad_ramp true pt
	
	AGMGrad_rampDict null ne{
		end
	}if
	/AGMGrad_rampDict AGMGrad_rampData AGMGrad_rampIndex get pt
	AGMGrad_rampDict begin
		
		Start End
		AGMGrad_gradType 1 eq{
			exch
		}if
		/AGMGrad_endPoint xp
		/AGMGrad_rampPoint xp
		/AGMGrad_midPoint Mid pt
		/AGMGrad_colorRamp CSA map_csa 0 get /DeviceGray ne pt
		currentdict set_csa_crd
		SpotColor AGMCORE_producing_seps and{
			
			/SpotConverted [
				0 AGMGrad_SpotConverted
				NumTintComponents 2 eq{
					1 AGMGrad_SpotConverted
				}{
					false
				}ifelse
			] def
			/RenderCMYK SpotConverted aload pop or def
		}{
			/RenderCMYK true def
		}ifelse
		AGMGrad_ramp{
			/AGMGrad_nSamples NumSamples pt
			AGMGrad_enabledSmoothShade not{
				/AGMGrad_ramp AGMGrad_nSamples 1 gt pt
			}if
		}if
}def
/rampImage{
	AGMGrad_enabledSmoothShade{
		fillRamp
	}{
		NumSamples setImageParms
		[ Ramp aload pop ]
		currentdict/Decode known{
			Decode
		}{
			[ NumComponents {0 1} repeat ]
		}ifelse
		dictImage
	}ifelse
}def
	
/rectImage{
	gsave
	/AGMGrad_sInc 1 pt
	/AGMGrad_bInc 1 AGMGrad_nSamples div pt
	/AGMGrad_nSubSamples AGMGrad_nSamples pt
	/AGMGrad_optimize false pt
		
	AGMGrad_subSampleOK{
		/AGMGrad_uRampLen 1 0 dtransform AGMGrad_dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/AGMGrad_pChange AGMGrad_uRampLen 0 eq{0}{AGMGrad_nSamples AGMGrad_uRampLen div}ifelse pt
		
		AGMGrad_pChange .5 gt dup /AGMGrad_optimize xp{
			/AGMGrad_nSubSamples AGMGrad_uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/AGMGrad_bInc 1 AGMGrad_nSubSamples div pt
			/AGMGrad_sInc AGMGrad_nSamples 1 sub AGMGrad_nSubSamples 1 sub div pt
		}if
	}if
	
	0
	AGMGrad_nSubSamples
	[
	/dup cvx
	AGMGrad_optimize {
		/round cvx /cvi cvx
	} if
	/AGMGrad_ndx /exch cvx /pt cvx
	rampColor
	0 0 AGMGrad_bInc 1 /rectfill cvx
	AGMGrad_bInc 0 /translate cvx
	AGMGrad_sInc /add cvx
	] cvx bind
	repeat
	pop
	grestore
}def
/radialInit{
	/AGMGrad_nRadSamples AGMGrad_nSamples dup 0 eq{pop 1}if pt
	/AGMGrad_sInc -1 pt
	/AGMGrad_rampLen AGMGrad_rampPoint AGMGrad_endPoint sub pt
	/AGMGrad_bInc AGMGrad_rampLen AGMGrad_nSamples div neg pt
	/AGMGrad_optimize false pt
	AGMGrad_subSampleOK{
		/AGMGrad_uRampLen
			AGMGrad_rampLen 0 dtransform AGMGrad_dUserSpace idtransform dup mul exch dup mul add sqrt
			0 AGMGrad_rampLen dtransform AGMGrad_dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/AGMGrad_pChange 
			AGMGrad_uRampLen 0 eq{
				0
			}{
				AGMGrad_nSamples AGMGrad_uRampLen div
			}ifelse
		pt
		AGMGrad_pChange .5 gt dup /AGMGrad_optimize xp{
			/AGMGrad_nRadSamples AGMGrad_uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/AGMGrad_bInc AGMGrad_rampLen AGMGrad_nRadSamples div neg pt
			/AGMGrad_sInc AGMGrad_nSamples 1 sub AGMGrad_nRadSamples 1 sub div neg pt
		}if
	}if
	AGMGrad_radHilite{
		/AGMGrad_xBCInc AGMGrad_xHi AGMGrad_rampLen mul AGMGrad_nRadSamples div pt
		/AGMGrad_yBCInc AGMGrad_yHi AGMGrad_rampLen mul AGMGrad_nRadSamples div pt
	}if
}def
/radialRamp{
	AGMGrad_enabledSmoothShade{
		fillRamp
	}{
		/AGMGrad_saveMatrix AGMGrad_saveMatrix currentmatrix pt
		
		radialInit
	
		true
		AGMCORE_producing_seps Interpolation and{
			AGMGrad_nSamples 1 gt{ 
				pop
				firstRampColor currentInkN
				lastRampColor currentInkN
				or
			}if
		}if
		{
			AGMGrad_rampPoint
		
			AGMGrad_nSamples 1 sub
		
			AGMGrad_nRadSamples 
			[
				/dup cvx
		
				AGMGrad_optimize{
					/round cvx /cvi cvx
				}if
		
				/AGMGrad_ndx /exch cvx /pt cvx
				
				AGMGrad_usingShells{
					/AGMGrad_firstShell cvx{
						/AGMGrad_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				rampColor
		
				AGMGrad_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx AGMGrad_bInc /add cvx /exch cvx
		
				AGMGrad_sInc /add cvx
		
				AGMGrad_radHilite{
					AGMGrad_xBCInc AGMGrad_yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			AGMGrad_usingShells{
				0 0 AGMGrad_rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		AGMGrad_saveMatrix setmatrix
		
		AGMGrad_radHilite{
			AGMGrad_xHi AGMGrad_rampLen mul AGMGrad_yHi AGMGrad_rampLen mul translate
		}if
		
		AGMGrad_usingShells AGMGrad_rampIndex 0 eq and{
			fill
		}if
	
	}ifelse
}def
/matrix_invertible
{
	{
		mark 1 index AGMGrad_tmpMat invertmatrix
	} stopped {
		cleartomark
		pop
		false
	}{
		cleartomark
		pop
		true
	}ifelse
}def
/Gb{
	Adobe_AGM_Gradient begin
	/AGMGrad_rampDict null pt
	mySave
}def
/Gd{
	Adobe_AGM_Gradient begin
	/AGMGrad_nColorsBd xp
	/AGMGrad_gradType xp
	/AGMGrad_gradName xp
	[
	[
}def
/Gm{
	AGMGrad_renderFlag 2 ne{
		AGMGrad_gradType 0 eq{
			linealRamp
		}{
			radialGrad
		}ifelse
	}{
		pop
	}ifelse
}def
	
/Gg{
	/AGMGrad_gMatrix xp
	4 npop
	/AGMGrad_gradName xp
	/AGMGrad_renderFlag xp
	/AGMGrad_retainPath xp
	/AGMGrad_enabledSmoothShade false pt
	
	path_bbox 3 index 2 index eq{
		2 index 1 index eq{
			/AGMGrad_renderFlag 2 pt
		}if
	}if
	
	AGMGrad_gMatrix matrix_invertible not{
		/AGMGrad_renderFlag 2 pt
	}if
	
	4 npop 
	AGMGrad_renderFlag 2 ne{
		/AGMGrad_enabledSmoothShade 
			level3{
				AGMGrad_usingSmoothShade
				AGMCORE_producing_seps not
				currentoverprint not or and
				AGMGrad_PathsOnly not and
				AGMCORE_in_rip_sep 1 currenttransfer exec 0.5 lt and not and
			}{
				false
			}ifelse
		pt
		
		AGMGrad_renderFlag 3 eq{
			eoclip
		}{
			clip
		}ifelse
			
		AGMGrad_gradNames AGMGrad_gradName known{
			AGMGrad_gradNames AGMGrad_gradName get
			aload pop
			/AGMGrad_gradType xp
			2 sub dup /AGMGrad_rampIndex xp
			/AGMGrad_maxRampIndex xp
			/AGMGrad_rampData xp
			/AGMGrad_nRamps AGMGrad_rampData length pt
		}if
		getRampData
		
		AGMGrad_enabledSmoothShade{
			getRampColorSpace
		}if
		
		AGMGrad_gradType 0 eq{
			firstRampColor
		}{
			lastRampColor
		}ifelse
		
		
		currentcolorspace 0 get /DeviceN eq{
			currenttints 0 get
			currenttints length 2 eq{
				currenttints 1 get
			}if
			setcolor
		}if
		
		currentoverprint AGMCORE_producing_seps and not{
			gsave fill grestore
		}if
	}if
	
	AGMGrad_gradType 1 eq{
		AGMGrad_gMatrix Gm
	}if
}def
/Gh{
	dup 1 gt{
		pop 1
	}if
	2 copy
	exch dup sin exch cos
	2 index mul exch
	2 index mul 
	neg /AGMGrad_yHi xp
	/AGMGrad_xHi xp
	/AGMGrad_radHilite AGMGrad_xHi 0 ne AGMGrad_yHi 0 ne or pt
	3 npop
}def
/Gc{
	
	AGMGrad_renderFlag 2 eq
	AGMGrad_enabledSmoothShade or{
		pop
	}{
		dup matrix_invertible{
			AGMGrad_gMatrix AGMGrad_tmpMat concatmatrix
			pushRampSpace
			AGMGrad_rampIndex 0 lt{
				lastRampColor
			}if
			linealFill
			popRampSpace
		}{
			pop
		}ifelse
	}ifelse
}def
/Gr{
	dup matrix_invertible{
		AGMGrad_gMatrix AGMGrad_tmpMat concatmatrix
		Gm
	}{
		pop
	}ifelse
}def
/GB{
	AGMGrad_rampDict null ne{
		end
	}if
	AGMGrad_retainPath
	myRestore
	end
	not{
		newpath
	}if
}def
/GD{
	currentdict/AGMGrad_gradNames get null eq{
		/AGMGrad_gradNames 20 dict def
	}if
	]
	dup {
		begin
			/Ramp [ Ramp 0 NumComponents getinterval aload pop NumSamples NumComponents expandColor ] def
			currentdict/Colorant known{
				/TintRamp [ TintRamp 0 NumTintComponents getinterval aload pop NumSamples NumTintComponents expandColor ] def
			}if
		end
	} forall
	AGMGrad_nColorsBd AGMGrad_gradType
	]  AGMGrad_gradName exch /AGMGrad_gradNames xput
	end
}def
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_AGM_Gradient_Sep 1.0 0
%%Version: 1.0 0
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
Adobe_AGM_Gradient begin
/initializeSep{
	/AGMGrad_ccAry1 5 array pt
	/AGMGrad_whiteBytes 1 makeByte8 pt
	/AGMGrad_name null pt
	/AGMGrad_nColorSpace null pt
	
	AGMCORE_composite_job{
		initializeInRIPSeps
	}{
		initializeHostBasedSeps
	}ifelse
	initializeAllSeps
	Adobe_AGM_Gradient{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
}def
/initializeAllSeps{
	AGMGrad_PathsOnly not level2 not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
					8 setImageParms
					AGMGrad_colorRamp{
						SpotColor{
							TintRamp 0 currenttints 0 get makeByte8 put
							currenttints length 2 eq{
								TintRamp 1 currenttints 1 get makeByte8 put
							}if
						}if
		
						currentcolor
						4{
							makeByte8 4 1 roll
						}repeat
						
						AGMGrad_SepColorImage
					}{
						currentcolor 1 exch sub 
						
						makeByte8 
						
						AGMGrad_SepImage
					}ifelse
				myRestore
			}ifelse
		}def
	}if
	 /AGMGrad_knockOut{
		AGMGrad_PathsOnly level2 or{
			gsave
			1 setgray 
			newpath
			0 0 moveto 1 0 lineto 1 1 lineto 0 1 lineto closepath 
			AGMGrad_&fill
			grestore
		}{
			8 setImageParms AGMGrad_whiteBytes AGMGrad_&image
		}ifelse
	}def
	/setCustomColor
	{
		1 index AGMGrad_black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll AGMGrad_ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setPreTintCustomColor
	{
		{
			pop setcmykcolor
		}{
			setCustomColor
		}ifelse
	}def
	
	/AGMGrad_CurrentInk{
		true
		AGMCORE_in_rip_sep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentgray 1 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		RenderCMYK{
			AGMGrad_CurrentInk
		}{
			currentcolorspace 0 get /DeviceCMYK eq{
				gsave
				currentcolor currentcolorants 0 get currenttints 0 get SpotConverted 0 get setPreTintCustomColor
				AGMGrad_CurrentInk
				grestore
				currenttints length 2 eq{
					gsave
					currentcolor currentcolorants 1 get currenttints 1 get SpotConverted 1 get setPreTintCustomColor
					AGMGrad_CurrentInk
					grestore
					or
				}if
			}{
				true	
			}ifelse
		} ifelse
	}def
	/fillOvp{
		currentoverprint{
			AGMCORE_in_rip_sep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentgray 1 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		AGMGrad_&fill
	}def
	/fill{
		RenderCMYK{
			fillOvp
		}{
			currentcolorspace 0 get /DeviceGray eq{
				0 0 0 currentgray 1 exch sub setcmykcolor
			}if
			
			currentcolorspace 0 get /DeviceCMYK eq{
				
				gsave
				currentcolor currentcolorants 0 get currenttints 0 get SpotConverted 0 get setPreTintCustomColor
				fillOvp 
				grestore
				currenttints length 2 eq{
					gsave
					/AGMGrad_currentoverprint currentoverprint pt
					true setoverprint
					currentcolor currentcolorants 1 get currenttints 1 get SpotConverted 1 get setPreTintCustomColor
					fillOvp
					AGMGrad_currentoverprint setoverprint
					grestore
				}if
			}{
				gsave
				[/Separation currentcolorants 0 get substituteBlack currentcolorspace [/pop cvx currentcolor] cvx ] setcolorspace
				currenttints 0 get setcolor
				fillOvp
				grestore
				currenttints length 2 eq{
					gsave
					/AGMGrad_currentoverprint currentoverprint pt
					[/Separation currentcolorants 1 get substituteBlack currentcolorspace [/pop cvx currentcolor] cvx ] setcolorspace
					
					true setoverprint
					currenttints 1 get setcolor
					fillOvp
					AGMGrad_currentoverprint setoverprint
					grestore
				}if
			}ifelse
			newpath
		}ifelse
	}def
	
	/rampImage{
		currentoverprint{
			rectImage
		}{
			AGMGrad_enabledSmoothShade{
				fillRamp
			}{
				AGMGrad_nSamples setImageParms
				Ramp aload pop
				AGMGrad_colorRamp{
					AGMGrad_SepColorImage
				}{
					AGMGrad_SepImage
				}ifelse
			}ifelse
		}ifelse
	}def
}def
/initializeInRIPSeps{
	/AGMGrad_decodeNorm	[0 1] pt
	/AGMGrad_SpotConverted
	{
		SpotColor{
			Colorants exch get /AGMGrad_name xp
			AGMGrad_name dup null ne exch AGMGrad_black ne and{
				false
				currentpagedevice/SeparationColorNames 2 copy known{
					get{
					AGMGrad_name eq or
				}forall
				}{
					pop pop
				}ifelse
				not
			}{
				false
			}ifelse
		}{
			pop false
		}ifelse
	}def
	/AGMGrad_SepImage{
			/DeviceGray setcolorspace
			AGMGrad_decodeNorm dictImage
	}def
	/AGMGrad_SepColorImage{
		RenderCMYK{
			[ NumComponents 1 add 1 roll ] 
			[ NumComponents { 0 1 } repeat ]
			dictImage
		}{
			NumComponents npop
			[/Separation Colorants 0 get substituteBlack /DeviceGray{}] setcolorspace
			4 copy
			TintRamp 0 get AGMGrad_decodeNorm dictImage
			/AGMGrad_currentoverprint currentoverprint pt
			true setoverprint
			NumTintComponents 2 eq{
				[/Separation Colorants 1 get substituteBlack /DeviceGray{}] setcolorspace
				TintRamp 1 get  AGMGrad_decodeNorm dictImage
			}{
				4 npop
			}ifelse
			AGMGrad_currentoverprint setoverprint
		}ifelse
	}def
	/getRampColorSpace{
		
		RenderCMYK not{
			[/DeviceN 
				[
				Colorants 0 get
				substituteBlack
				NumTintComponents 2 eq{
					Colorants 1 get
					substituteBlack
				}if
				] /DeviceCMYK {}
			] setcolorspace
			/AGMGrad_nColorSpace currentcolorspace pt
		}if
		
		AGMGrad_nSamples 1 gt{ 
			firstRampColor
		}if
		RenderCMYK{
			/AGMGrad_C0 [currentcolor] pt
			/AGMGrad_C0_Space currentcolorspace pt
		}{
			/AGMGrad_C0 [
				currenttints 0 get
				currenttints length 2 eq{
					currenttints 1 get
				}if
			] pt
			/AGMGrad_C0_Space AGMGrad_nColorSpace pt
		}ifelse
		
		AGMGrad_nSamples 1 gt{ 
			lastRampColor
		}if
		RenderCMYK{
			/AGMGrad_C1 [currentcolor] pt
			/AGMGrad_C1_Space currentcolorspace pt
		}{
			/AGMGrad_C1 [
				currenttints 0 get
				currenttints length 2 eq{
					currenttints 1 get
				}if
			] pt
			/AGMGrad_C1_Space AGMGrad_nColorSpace pt
		}ifelse
		
		/AGMGrad_rampColorSpace AGMGrad_C0_Space pt
	}def
}def
/initializeHostBasedSeps{
	/setcolor null pt
	/currentcolor null pt
	/setcolorspace null pt
	/currentcolorspace null pt
	/AGMGrad_currentcmyk 4 array pt
	/AGMGrad_currentgray null pt
	/AGMGrad_currentrgb 3 array pt
	
	
	/setcolorspace
	{
		0 get /AGMGrad_currentcolorspace xp
		AGMGrad_currentcolorspace /DeviceCMYK eq{
			/setcolor 
			{
				4 copy AGMGrad_currentcmyk astore pop setcmykcolor
			}bind pt
			/currentcolor 
			{
				AGMGrad_currentcmyk aload pop
			}bind pt
		}{
			AGMGrad_currentcolorspace /DeviceGray eq{
				/setcolor
				{
					dup /AGMGrad_currentgray xp setgray
				}bind pt
				/currentcolor
				{
					AGMGrad_currentgray
				}bind pt
			}{
				AGMGrad_currentcolorspace /DeviceRGB eq{
					/setcolor
					{
						3 copy AGMGrad_currentrgb astore pop setrgbcolor
					} bind pt
					/currentcolor
					{
						AGMGrad_currentrgb aload pop
					}bind pt
				}if
			}ifelse
		}ifelse
	}pt
	/currentcolorspace
	{
		[ AGMGrad_currentcolorspace ]
	}bind pt
	/AGMGrad_invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/AGMGrad_ccThrough{
		gsave
		1 setCustomColor
		currentgray 1 ne
		grestore
	}def
	/AGMGrad_SpotConverted
	{
		AGMCORE_is_cmyk_sep SpotColor and{
			Colorants exch get /AGMGrad_name xp
			AGMGrad_name dup null ne exch AGMGrad_black ne and{
				1 1 1 1 AGMGrad_name AGMGrad_ccThrough
			}{
				false
			}ifelse
		}{
			pop false
		}ifelse
	}def
	/AGMGrad_SpotChannel
	{
		AGMCORE_is_cmyk_sep SpotColor not and{
			pop false
		}{
			Colorants exch get /AGMGrad_name xp
			AGMGrad_name null eq{
				false
			}{
				1 1 1 1 AGMGrad_name AGMGrad_ccThrough 
			}ifelse
		}ifelse
	}def
	/getChannelData
	{
		AGMCORE_is_cmyk_sep RenderCMYK and{
			AGMCORE_black_plate{
				4 1 roll 3 npop
			}{
				AGMCORE_yellow_plate{
					4 2 roll 3 npop
				}{
					AGMCORE_magenta_plate{
						4 3 roll 3 npop
					}{
						3 npop
					}ifelse
				}ifelse
			}ifelse
			/Invert /IsData
		}{
			4 npop
			/NoInvert /NoData
			
			SpotColor{
				0 AGMGrad_SpotChannel{
					pop pop
					TintRamp 0 get /Invert /IsData 
				}{
					NumTintComponents 2 eq{
						1 AGMGrad_SpotChannel{
							pop pop
							TintRamp 1 get /Invert /IsData 
						}if
					}if
				}ifelse
			}if
		}ifelse
	}def
	/renderChannelData
	{
		gsave
		
		/IsData eq{
			/Invert eq{
				AGMGrad_invertXfer
			}if
			systemdict/image get exec
		}{
			5 npop
			AGMGrad_knockOut
		}ifelse
		
		grestore
	}def
	/AGMGrad_SepImage{
		dup dup dup
		getChannelData
		exch pop /NoInvert exch
		renderChannelData
	}def
	/AGMGrad_SepColorImage{
		
		/AGMGrad_currentoverprint currentoverprint pt
		SpotColor{
			NumTintComponents 2 eq{
				 1 AGMGrad_SpotChannel{
					true setoverprint
				}if
			}if
		}if
		getChannelData 
		renderChannelData
	
		AGMGrad_currentoverprint setoverprint
	}def
	/getRampColorSpace{
				
		AGMGrad_nSamples 1 gt{ 
			firstRampColor
		}if
		
		/AGMGrad_C0_Space [/DeviceGray] pt
		RenderCMYK{
			/AGMGrad_C0 [currentgray] pt
		}{
			/AGMGrad_C0 [
				0
				0 AGMGrad_SpotChannel{
					pop currenttints 0 get
				}if
				currenttints length 2 eq{
					1 AGMGrad_SpotChannel{
						pop currenttints 1 get
					}if
				}if
				1 exch sub
			] pt
		}ifelse
		
		AGMGrad_nSamples 1 gt{ 
			lastRampColor
		}if
		
		/AGMGrad_C1_Space [/DeviceGray] pt
		RenderCMYK{
			/AGMGrad_C1 [currentgray] pt
		}{
			/AGMGrad_C1 [
				0
					0 AGMGrad_SpotChannel{
						pop currenttints 0 get
					}if
					currenttints length 2 eq{
						 1 AGMGrad_SpotChannel{
							pop currenttints 1 get
						}if
					}if
				1 exch sub
			] pt
		}ifelse
		
		/AGMGrad_rampColorSpace AGMGrad_C0_Space pt
	}def
}def
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2000 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Image 65 dict dup begin put
/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
%%don't initialize AGMIMG_&customcolorimage, it wrecks havoc in a nested environment
%%AGMIMG_ccimage_exists not {/AGMIMG_&customcolorimage nd} if 
/AGMIMG_&imagemask nd
/AGMIMG_mbuf () def
/AGMIMG_ybuf () def
/AGMIMG_kbuf () def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/idximg nd
/doc_setup
{ 
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage /colorimage ldf
	}if
	end
	end
}def
/page_setup
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists {/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				 }ifelse
			 }ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
	}ifelse
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/idximg /indexed_imageormask ldf
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer
{
}def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMIMG_&imagemask
			}{
				AGMIMG_&image
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get
		dup /DeviceGray eq{
			pop AGMCORE_black_plate not
		}{
			/DeviceCMYK eq{
				AGMCORE_is_cmyk_sep not
			}if
		}ifelse
	}{
		false
	}ifelse
}def
/imageormask
{
	begin
		SkipImageProc not{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					image
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					AGMCORE_host_sep{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentdict ignoreimagedata
				 		}ifelse
					}{
						imagemask
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								MultipleDataSources{
									4 {pop} repeat
									/DataSource [
										DataSource 0 get /exec cvx
										DataSource 1 get /exec cvx
										DataSource 2 get /exec cvx
										DataSource 3 get /exec cvx
										/AGMCORE_get_ink_data cvx
									] cvx def
								}{
									/DataSource /DataSource load filter_cmyk 0 () /SubFileDecode filter def
								}ifelse
	
								/Decode [ Decode 0 get Decode 1 get ] def
								/MultipleDataSources false def
								/NComponents 1 def
								/Operator /image def
								AGMCORE_is_cmyk_sep{
									currentoverprint InksUsed current_ink not and{
										currentdict consumeimagedata
									}{
										invert_image_samples
						 				1 AGMCORE_&setgray
										currentdict imageormask_sys
									}ifelse
								}{
										currentdict ignoreimagedata
								}ifelse
							}{
									
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								/DoImage true def
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys} if
							}{
								image
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentoverprint InksUsed current_ink not and{
								}{
									currentcolorspace overprint_plate not{
										knockout_unitsq
									}if
								}ifelse
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	begin
	SkipImageProc not{
		save mark 
	
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentoverprint InksUsed current_ink not and{
						}{
							currentdict/ImageMatrix get concat
							knockout_unitsq
						}ifelse
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
	 								[ /Separation Name [/DeviceGray]
	 								{ 
	 									sep_colorspace_proc AGMCORE_get_ink_data
										1 exch sub
	 								} bind
									] AGMCORE_&setcolorspace
									/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
							currentdict consumeimagedata 
 							currentoverprint not Name (All) eq or{
								gsave 
								knockout_unitsq
								grestore
		 					}if
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}if
	end
	end
}def
/imageormask_l2_overprint
{
	
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{ 			
			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN [
				AGMIMG_c 0 ne {/Cyan} if
				AGMIMG_m 0 ne {/Magenta} if
				AGMIMG_y 0 ne {/Yellow} if
				AGMIMG_k 0 ne {/Black} if
				] /DeviceCMYK {}] setcolorspace
				
				AGMIMG_c 0 ne {AGMIMG_c} if
				AGMIMG_m 0 ne {AGMIMG_m} if
				AGMIMG_y 0 ne {AGMIMG_y} if
				AGMIMG_k 0 ne {AGMIMG_k} if
				setcolor			
			}{	
				/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
				[/Indexed 				
					[
						/DeviceN [
							AGMIMG_c 0 ne {/Cyan} if
							AGMIMG_m 0 ne {/Magenta} if
							AGMIMG_y 0 ne {/Yellow} if
							AGMIMG_k 0 ne {/Black} if
						] 
						/DeviceCMYK {
							AGMIMG_k 0 eq {0} if
							AGMIMG_y 0 eq {0 exch} if
							AGMIMG_m 0 eq {0 3 1 roll} if
							AGMIMG_c 0 eq {0 4 1 roll} if						
						}
					]
					255
					{
						255 div 
		
						mark exch
						dup	dup dup
		
						
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
							
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
		
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
							
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				] setcolorspace
			}ifelse
			
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
	
 		currentdict
 		AGMCORE_host_sep{
 			
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget /CSA get map_csa overprint_plate not{
					knockout_unitsq
				}if
			}{
	 			AGMCORE_is_cmyk_sep{
					Operator /imagemask eq{
						imageormask_sys
					}{
						level2{
							indexed_image_lev2_sep
						}{
							indexed_image_lev1_sep
						}ifelse
					}ifelse
				}{
					currentoverprint not{
						knockout_image_samples
		 				imageormask_sys
		 			}{
		 				currentdict consumeimagedata
		 			}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				imageormask
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		
		currentcolorspace 
		dup 1 /DeviceGray put
		dup 3 [
			currentcolorspace 3 get 
			{
				exch 4 mul 4 getinterval {} forall
				AGMCORE_get_ink_data 255 div 1 exch sub
			} /exec cvx
		] cvx put
		setcolorspace
		
		currentdict 
		Operator /imagemask eq{
			AGMIMG_&imagemask
		}{
			AGMIMG_&image
		}ifelse
			
	end end
}def
/OPIimage
{
	dup type /dicttype ne{
		10 dict begin
			/DataSource xdf
			/ImageMatrix xdf
			/BitsPerComponent xdf
			/Height xdf
			/Width xdf
			/ImageType 1 def
			/Decode [0 1 def]
			currentdict
		end
	}if
	dup begin
		/NComponents 1 cdndf
		/MultipleDataSources false cdndf
		/SkipImageProc {false} cdndf
		/HostSepColorImage false cdndf
		/Decode [
				0 
				currentcolorspace 0 get /Indexed eq{
					2 BitsPerComponent exp 1 sub
				}{
					1
				}ifelse
		] cdndf
		/Operator /image cdndf
	end
	/sep_colorspace_dict AGMCORE_gget null eq{
		imageormask
	}{
		gsave
		dup begin invert_image_samples end
		sep_imageormask
		grestore
	}ifelse
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type /dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode [/customcolor_tint AGMCORE_gget 0] def
				/Operator /image def
				/HostSepColorImage false def
				/InksUsed [] def
				/SkipImageProc {false} def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		bdict
			/Name AGMIMG_colorAry 4 get
			/CSA [ /DeviceCMYK ] 
			/TintMethod /Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components [ AGMIMG_colorAry aload pop pop ] 
		edict
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		dup 4 get map_alias{
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					} if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage	
		end
	} def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				
				{
					255 mul round cvi GrayLookup exch get
				} currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get /DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
						
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer
						currentdict imageormask
					}{ 
						
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					
					MappedCSA 0 get /DeviceGray eq {
						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get /DeviceCMYK eq {
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{ 
							currentcolortransfer
							{pop 1} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
					
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{ 
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			
			currentdict imageormask_sys
				
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				
				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				
				MappedCSA 0 get /DeviceGray eq {
					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 	   Lookup exch get HiVal div} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			
			currentdict imageormask_sys
				
		end end
	}def
}if
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%ADOBeginClientInjection: DocumentProlog End "AI10"
%ADOEndClientInjection: DocumentProlog End "AI10"
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
%ADOBeginClientInjection: DocumentSetup Start "AI10"
%ADOEndClientInjection: DocumentSetup Start "AI10"
Adobe_AGM_Utils begin
2 2010 true Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
Adobe_AGM_Gradient/doc_setup get exec
Adobe_AGM_Image/doc_setup get exec
%ADOBeginClientInjection: DocumentSetup End "AI10"
%ADOEndClientInjection: DocumentSetup End "AI10"
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: logo_prologin2005.eps 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI10"
%ADOEndClientInjection: PageSetup Start "AI10"
Adobe_AGM_Utils begin
Adobe_AGM_Core/page_setup get exec
Adobe_CoolType_Core/page_setup get exec
Adobe_AGM_Gradient/page_setup get exec
Adobe_AGM_Image/page_setup get exec
%ADOBeginClientInjection: PageSetup End "AI10"
%ADOEndClientInjection: PageSetup End "AI10"
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
1 -1 scale 0 -654.72 translate
[1 0 0 1 0 0 ]  concat
mark
/0 
[/DeviceGray] add_csa
/CSA /0 
/1 
[/DeviceCMYK] add_csa
/CSA /1 
/2 
[/DeviceRGB] add_csa
/CSA /2 
cleartomark
800 path_rez
% page clip
gsave
newpath
gsave % PSGState
0 0 mo
0 654.72 li
995.882 654.72 li
995.882 0 li
clp
[1 0 0 1 0 0 ] concat
%ADOBeginClientInjection: BeginPageContent "AI10"
%ADOEndClientInjection: BeginPageContent "AI10"
729.432 101.906 mo
796.32 137.042 li
778.896 102.771 li
778.032 100.898 li
777.168 99.3145 li
776.16 98.0186 li
775.296 96.7949 li
774.432 95.7861 li
773.568 94.9229 li
772.56 94.2021 li
771.696 93.9141 li
770.544 93.0508 li
769.176 92.5464 li
767.808 92.1865 li
766.44 92.0425 li
764.928 92.0425 li
763.344 92.1865 li
761.976 92.5464 li
760.464 93.0508 li
758.736 90.458 li
787.392 80.5947 li
788.76 82.6104 li
787.392 83.4746 li
786.24 84.1943 li
785.016 84.8423 li
784.008 85.4902 li
783.144 86.2109 li
782.497 86.8589 li
781.993 87.5781 li
781.632 88.2261 li
780.913 88.9463 li
780.408 89.8105 li
780.264 90.8184 li
780.625 92.0425 li
780.625 92.6904 li
780.768 93.6982 li
781.128 94.5625 li
781.417 95.5703 li
781.993 96.7949 li
782.497 98.0186 li
783.36 99.1709 li
784.152 100.395 li
817.488 169.658 li
814.896 170.162 li
723.6 122.93 li
749.16 174.267 li
750.024 175.634 li
751.104 177.003 li
751.896 178.226 li
752.976 179.379 li
753.768 180.387 li
754.848 181.106 li
755.856 181.755 li
757.081 182.259 li
758.232 182.618 li
759.6 182.834 li
760.824 182.979 li
761.976 182.979 li
762.984 182.979 li
764.208 182.834 li
765.216 182.618 li
766.081 182.259 li
768.457 181.251 li
769.32 183.843 li
738.648 194.067 li
737.424 192.339 li
739.152 191.69 li
740.665 190.971 li
742.032 190.322 li
743.256 189.603 li
744.264 188.954 li
745.128 188.234 li
745.632 187.442 li
745.92 186.578 li
746.497 185.57 li
746.784 184.49 li
747 183.339 li
746.784 182.114 li
746.497 180.747 li
745.92 179.234 li
745.417 177.507 li
744.552 175.634 li
716.4 118.322 li
712.008 116.451 li
711.144 115.875 li
710.28 115.37 li
709.417 115.082 li
708.552 114.723 li
707.688 114.363 li
707.041 114.219 li
706.392 114.003 li
705.816 114.003 li
705.168 114.003 li
704.304 114.003 li
703.44 114.003 li
702.577 114.003 li
701.568 114.003 li
700.56 114.003 li
699.552 114.003 li
698.329 114.003 li
697.825 112.131 li
729.432 101.906 li
false sop
.0118 .9608 .9137 0 cmyk
ef
731.808 194.067 mo
732.96 195.938 li
688.104 211.994 li
687.096 209.618 li
689.256 208.755 li
690.336 208.395 li
691.2 208.251 li
691.993 207.891 li
692.712 207.53 li
693.36 207.026 li
693.864 206.522 li
694.44 206.019 li
694.944 205.299 li
695.088 204.795 li
695.448 203.786 li
695.808 202.778 li
695.953 201.555 li
695.953 201.051 li
695.808 200.546 li
695.448 199.683 li
695.088 198.675 li
694.728 197.45 li
694.081 196.082 li
693.577 194.786 li
692.712 193.202 li
666.216 139.49 li
665.712 138.122 li
665.064 136.898 li
664.344 135.675 li
663.84 134.667 li
663.192 133.658 li
662.472 132.938 li
661.968 132.65 li
661.464 132.434 li
661.104 131.786 li
660.312 131.067 li
659.232 130.778 li
658.369 130.563 li
657.36 130.563 li
656.497 130.563 li
655.705 130.563 li
654.84 130.563 li
653.976 130.563 li
653.112 130.563 li
652.249 130.563 li
651.384 130.563 li
648.504 132.434 li
646.993 129.051 li
692.208 114.003 li
692.712 116.451 li
690.121 117.242 li
688.249 118.106 li
687.096 118.971 li
686.016 119.979 li
685.224 121.202 li
684.648 121.851 li
684.36 122.57 li
684.144 123.578 li
684.144 124.946 li
684.144 125.451 li
684.504 125.955 li
684.864 126.818 li
685.224 127.683 li
685.728 128.906 li
686.232 129.914 li
686.736 131.282 li
687.096 132.434 li
713.88 186.578 li
714.384 187.946 li
715.032 189.099 li
715.896 190.322 li
716.616 191.33 li
717.264 192.339 li
717.768 193.059 li
718.272 193.706 li
718.488 194.067 li
719.352 194.786 li
720.216 195.074 li
721.224 195.435 li
722.736 195.938 li
723.24 195.938 li
723.96 195.938 li
724.608 195.938 li
725.329 195.795 li
725.976 195.795 li
726.696 195.578 li
727.488 195.435 li
728.352 195.074 li
731.808 194.067 li
.0118 .9608 .9137 0 cmyk
ef
638.568 132.434 mo
652.608 161.667 li
649.512 161.955 li
646.993 159.795 li
644.4 157.706 li
641.88 155.69 li
639.289 153.963 li
636.552 152.451 li
633.96 151.082 li
631.296 150.219 li
628.705 149.498 li
625.824 148.706 li
622.873 148.131 li
619.993 147.627 li
617.256 147.627 li
614.376 147.627 li
611.64 148.131 li
608.904 148.706 li
606.168 149.498 li
603.792 150.003 li
601.56 151.082 li
599.688 152.091 li
598.176 153.314 li
596.592 154.826 li
595.44 156.338 li
594.432 158.067 li
593.352 159.795 li
592.344 161.667 li
591.696 163.683 li
591.192 165.771 li
590.833 167.93 li
590.616 170.379 li
590.833 172.755 li
590.976 175.131 li
591.48 177.65 li
591.984 180.099 li
592.488 182.618 li
593.064 185.354 li
593.856 187.946 li
594.72 190.683 li
595.8 193.059 li
596.953 195.435 li
598.176 197.45 li
599.688 200.402 li
601.201 203.282 li
602.928 206.019 li
604.656 208.755 li
606.312 211.49 li
608.256 213.866 li
609.913 216.242 li
611.784 218.475 li
613.512 220.202 li
615.24 221.715 li
617.112 223.226 li
618.984 224.45 li
621 225.458 li
623.088 226.467 li
625.104 227.042 li
627.192 227.546 li
629.208 228.051 li
631.44 228.194 li
633.672 228.339 li
635.688 228.339 li
637.92 228.194 li
640.152 227.834 li
642.528 227.33 li
644.76 226.683 li
645.264 226.322 li
645.913 225.963 li
646.632 225.818 li
647.28 225.458 li
648.144 225.099 li
648.864 224.811 li
649.728 224.45 li
650.376 224.091 li
651.24 223.587 li
652.104 223.082 li
652.968 222.578 li
653.76 222.074 li
654.48 221.354 li
655.344 220.851 li
655.993 220.347 li
656.712 219.986 li
647.784 201.555 li
647.136 200.402 li
646.632 199.395 li
646.128 198.53 li
645.625 197.666 li
645.121 197.162 li
644.544 196.658 li
644.041 196.082 li
643.752 195.938 li
643.032 195.29 li
642.024 194.786 li
641.161 194.211 li
640.152 194.067 li
639.432 194.067 li
638.784 194.067 li
637.92 194.067 li
637.272 194.211 li
636.408 194.211 li
635.688 194.57 li
635.041 194.786 li
634.537 195.074 li
631.944 195.938 li
630.936 193.202 li
672.913 179.019 li
673.92 181.251 li
672.768 181.61 li
671.544 182.114 li
670.537 182.618 li
669.672 182.979 li
668.953 183.482 li
668.304 183.986 li
667.8 184.347 li
667.296 184.706 li
666.792 185.858 li
666.432 186.723 li
666.216 187.729 li
666.216 188.954 li
666.216 189.314 li
666.432 189.818 li
666.577 190.467 li
666.936 191.187 li
667.296 191.834 li
667.584 192.698 li
667.944 193.418 li
668.304 194.067 li
677.665 211.994 li
676.008 213.507 li
674.136 215.091 li
672.408 216.603 li
670.537 217.971 li
668.665 219.339 li
666.792 220.706 li
664.705 222.074 li
662.688 223.226 li
660.6 224.45 li
658.584 225.818 li
656.352 227.042 li
654.336 228.051 li
651.888 229.059 li
649.728 230.067 li
647.136 230.786 li
644.76 231.435 li
641.665 232.442 li
638.784 233.162 li
636.048 234.026 li
633.312 234.53 li
630.72 235.034 li
628.2 235.179 li
625.608 235.538 li
623.088 235.538 li
620.712 235.538 li
618.121 235.395 li
615.745 235.034 li
613.512 234.675 li
611.136 234.171 li
608.904 233.666 li
606.888 232.946 li
604.656 232.299 li
602.568 231.435 li
600.552 230.427 li
598.464 229.563 li
596.448 228.555 li
594.577 227.33 li
592.488 226.179 li
590.833 224.811 li
589.104 223.226 li
587.088 221.858 li
585 220.347 li
583.128 218.475 li
581.4 216.458 li
579.745 214.226 li
578.161 211.994 li
576.792 209.618 li
575.424 207.242 li
574.417 205.011 li
573.552 202.634 li
572.76 200.402 li
572.041 198.026 li
571.537 195.795 li
571.176 193.418 li
570.816 191.187 li
570.816 188.811 li
570.816 186.578 li
570.816 184.202 li
571.176 181.971 li
571.537 179.738 li
572.041 177.507 li
572.544 175.274 li
573.264 173.042 li
574.056 171.026 li
574.92 168.795 li
575.784 166.563 li
576.792 164.546 li
578.016 162.53 li
579.384 160.587 li
580.896 158.715 li
582.48 157.059 li
584.136 155.33 li
585.864 153.818 li
587.736 152.234 li
589.824 150.723 li
591.84 149.498 li
594.072 148.131 li
596.448 147.122 li
598.824 146.114 li
601.417 145.106 li
603.072 144.891 li
604.8 144.603 li
606.528 144.242 li
608.041 143.738 li
609.625 143.379 li
611.136 143.019 li
612.648 142.875 li
614.016 142.73 li
614.52 142.37 li
615.384 142.154 li
616.392 142.011 li
617.76 142.011 li
619.128 141.866 li
620.712 141.866 li
622.369 141.866 li
623.953 141.866 li
625.608 141.866 li
627.192 141.866 li
628.56 141.866 li
629.928 141.866 li
630.936 141.65 li
631.8 141.65 li
632.304 141.507 li
632.808 141.363 li
633.457 141.146 li
634.32 140.642 li
635.041 139.994 li
635.329 139.131 li
635.544 138.627 li
635.688 138.122 li
635.904 137.546 li
636.048 136.898 li
636.048 136.034 li
636.048 135.387 li
635.904 134.667 li
635.688 133.803 li
638.568 132.434 li
.0118 .9608 .9137 0 cmyk
ef
457.344 259.587 mo
467.784 289.971 li
392.329 317.475 li
390.456 314.883 li
393.192 314.019 li
394.056 313.729 li
394.92 313.37 li
395.712 312.866 li
396.432 312.507 li
397.081 312.003 li
397.8 311.642 li
398.448 311.138 li
399.312 310.778 li
399.528 309.986 li
400.032 309.122 li
400.321 307.898 li
400.536 306.53 li
400.536 306.171 li
400.321 305.667 li
400.032 305.019 li
399.672 304.155 li
399.168 302.931 li
398.665 301.923 li
397.944 300.555 li
397.081 299.187 li
370.657 244.898 li
369.648 243.242 li
368.784 241.874 li
368.064 240.507 li
367.417 239.498 li
366.913 238.419 li
366.409 237.771 li
365.905 237.267 li
365.401 237.051 li
364.825 236.546 li
364.032 236.042 li
362.952 235.683 li
361.8 235.538 li
360.936 235.538 li
359.928 235.538 li
359.064 235.538 li
358.056 235.683 li
357.192 235.683 li
356.472 235.898 li
355.608 236.042 li
355.104 236.402 li
352.081 237.051 li
350.856 234.53 li
397.081 218.475 li
398.808 221.067 li
394.704 222.938 li
393.84 223.082 li
393.048 223.442 li
392.329 223.729 li
391.464 224.307 li
390.817 224.595 li
390.312 225.099 li
389.592 225.458 li
389.088 225.818 li
388.44 226.683 li
387.72 227.69 li
387.36 228.914 li
387.216 229.923 li
387.577 230.427 li
387.864 230.931 li
388.224 231.795 li
388.728 232.803 li
389.233 233.811 li
389.952 235.034 li
390.6 236.259 li
391.464 237.41 li
416.88 289.971 li
417.745 291.339 li
418.464 292.706 li
419.112 293.931 li
419.833 294.938 li
420.336 295.802 li
420.696 296.45 li
420.985 296.954 li
420.985 297.171 li
422.208 298.322 li
423.36 299.042 li
424.728 299.402 li
425.808 299.546 li
426.312 299.546 li
426.817 299.402 li
427.68 299.402 li
428.688 299.042 li
429.696 298.826 li
430.92 298.322 li
432.073 297.818 li
433.296 297.171 li
441.288 293.931 li
442.872 293.715 li
444.241 293.211 li
445.752 292.706 li
447.12 291.843 li
448.489 290.979 li
449.64 290.187 li
450.72 289.106 li
451.728 287.954 li
452.375 286.946 li
453.096 285.866 li
453.6 284.715 li
454.104 283.49 li
454.464 282.339 li
454.825 280.971 li
454.968 279.387 li
454.968 277.874 li
455.329 276.507 li
455.472 274.778 li
455.616 272.906 li
455.616 270.891 li
455.616 268.659 li
455.472 266.282 li
455.329 263.69 li
454.968 260.954 li
457.344 259.587 li
.0118 .9608 .9137 0 cmyk
ef
300.312 250.587 mo
302.76 249.507 li
305.28 248.714 li
307.656 247.994 li
310.104 247.347 li
312.624 246.986 li
315 246.626 li
317.376 246.267 li
319.824 246.267 li
322.2 246.267 li
324.72 246.481 li
326.952 246.626 li
329.329 246.986 li
331.92 247.49 li
334.296 248.138 li
336.672 248.858 li
339.264 249.722 li
341.497 250.729 li
343.512 251.954 li
345.745 253.322 li
347.76 254.475 li
349.848 255.986 li
351.72 257.354 li
353.592 258.938 li
355.464 260.595 li
357.192 262.322 li
358.848 264.051 li
360.432 265.923 li
361.944 267.938 li
363.312 270.026 li
364.536 272.042 li
365.544 274.274 li
366.552 276.507 li
367.56 278.234 li
368.424 280.106 li
369.288 281.979 li
370.008 283.851 li
370.657 285.722 li
371.161 287.595 li
371.52 289.467 li
371.88 291.339 li
372.024 293.427 li
372.168 295.298 li
372.384 297.171 li
372.168 299.042 li
372.168 300.914 li
371.88 302.786 li
371.52 304.659 li
371.161 306.53 li
370.296 309.122 li
369.432 311.642 li
368.424 314.019 li
367.272 316.25 li
365.905 318.339 li
364.536 320.354 li
362.808 322.226 li
361.081 324.099 li
359.208 325.826 li
357.192 327.339 li
355.104 328.923 li
352.872 330.435 li
350.497 331.803 li
347.976 333.171 li
345.241 334.539 li
342.504 335.69 li
339.624 336.555 li
336.672 337.419 li
333.792 337.923 li
331.056 338.427 li
328.176 338.787 li
325.584 338.931 li
322.848 338.931 li
320.328 338.787 li
317.592 338.643 li
315 338.139 li
312.48 337.635 li
309.888 336.915 li
307.368 336.051 li
304.92 335.187 li
302.544 334.035 li
300.312 332.811 li
296.424 330.795 li
292.464 328.202 li
289.08 325.683 li
285.84 322.587 li
282.744 319.202 li
280.224 315.603 li
277.848 311.858 li
275.904 307.755 li
274.752 305.667 li
273.744 303.65 li
272.88 301.419 li
272.016 299.402 li
271.512 297.171 li
271.008 294.938 li
270.648 292.706 li
270.504 290.475 li
270.504 288.242 li
270.504 286.082 li
270.792 283.851 li
271.152 281.763 li
271.512 279.603 li
272.016 277.37 li
272.664 275.138 li
273.528 273.122 li
275.4 269.019 li
277.848 265.419 li
280.512 261.963 li
283.608 258.938 li
287.208 256.202 li
291.312 253.826 li
295.56 251.595 li
300.312 249.722 li
300.312 250.587 li
cp
302.544 253.971 mo
299.664 254.978 li
297.288 256.347 li
295.2 258.218 li
293.544 260.306 li
292.176 262.826 li
291.096 265.563 li
290.592 268.515 li
290.448 271.755 li
290.448 273.122 li
290.592 274.419 li
290.808 276.003 li
290.952 277.515 li
291.096 279.026 li
291.456 280.61 li
291.96 282.339 li
292.464 284.211 li
292.968 285.866 li
293.688 287.738 li
294.336 289.826 li
295.2 291.843 li
296.064 293.931 li
297.072 295.946 li
298.152 298.179 li
299.304 300.41 li
300.528 302.931 li
301.68 305.379 li
303.048 307.755 li
304.416 309.986 li
305.784 312.146 li
307.152 314.234 li
308.736 316.25 li
310.104 318.122 li
311.616 319.994 li
313.128 321.722 li
314.712 323.234 li
316.224 324.818 li
317.736 326.187 li
319.32 327.194 li
320.832 328.419 li
322.344 329.427 li
324.577 330.579 li
326.592 331.299 li
328.825 331.946 li
331.2 332.163 li
333.648 332.163 li
336.168 331.946 li
338.544 331.658 li
341.136 330.938 li
342.144 330.291 li
343.368 329.57 li
344.52 328.923 li
345.745 328.059 li
346.752 327.194 li
347.616 326.475 li
348.12 325.467 li
348.48 324.458 li
349.632 322.946 li
350.712 321.218 li
351.36 319.49 li
352.081 317.475 li
352.368 315.387 li
352.728 313.226 li
352.872 310.994 li
352.872 308.618 li
352.368 306.387 li
351.72 303.794 li
350.856 301.059 li
349.848 298.034 li
348.84 294.938 li
347.472 291.843 li
346.104 288.603 li
344.737 285.362 li
342.648 281.259 li
340.632 277.515 li
338.544 274.13 li
336.528 270.891 li
334.44 267.938 li
332.569 265.419 li
330.696 263.042 li
328.825 260.954 li
326.952 259.587 li
325.224 258.218 li
323.352 257.067 li
321.696 255.843 li
319.824 254.834 li
318.096 253.971 li
316.584 253.322 li
314.856 252.747 li
313.344 252.458 li
311.76 252.242 li
310.248 252.242 li
308.52 252.242 li
307.008 252.458 li
305.496 252.747 li
303.912 253.322 li
302.544 253.971 li
.0118 .9608 .9137 0 cmyk
ef
218.736 333.314 mo
230.04 356.354 li
230.904 358.227 li
231.768 359.811 li
232.56 360.963 li
233.28 362.187 li
233.928 363.051 li
234.432 363.698 li
234.648 364.059 li
234.792 364.419 li
235.656 365.066 li
236.88 365.57 li
237.888 365.931 li
238.536 366.074 li
239.4 366.074 li
240.408 365.931 li
241.488 365.787 li
242.856 365.427 li
244.008 365.282 li
245.376 364.707 li
246.888 364.419 li
248.472 363.915 li
249.336 367.154 li
204.912 381.627 li
204.264 379.755 li
205.632 379.251 li
206.784 378.891 li
207.864 378.387 li
208.872 378.026 li
209.52 377.522 li
210.24 377.163 li
210.744 376.875 li
211.248 376.515 li
212.256 375.507 li
212.976 374.282 li
213.12 373.419 li
213.12 372.771 li
213.336 372.051 li
213.336 371.187 li
212.976 370.395 li
212.616 369.314 li
212.112 368.163 li
211.392 366.938 li
210.744 365.57 li
209.88 363.915 li
183.456 309.771 li
182.736 308.402 li
182.088 307.034 li
181.584 306.026 li
181.08 305.019 li
180.504 304.155 li
180 303.435 li
179.712 303.146 li
179.136 302.931 li
178.128 301.778 li
176.976 301.059 li
175.608 300.555 li
174.528 300.41 li
173.736 300.41 li
172.872 300.555 li
171.864 300.771 li
170.784 301.059 li
169.776 301.419 li
168.552 301.778 li
167.4 302.282 li
165.888 302.931 li
164.664 299.546 li
204.912 285.866 li
208.512 284.715 li
211.968 283.851 li
215.208 282.986 li
218.232 282.339 li
220.968 281.763 li
223.704 281.475 li
226.08 281.114 li
228.312 281.114 li
230.4 280.971 li
232.272 280.971 li
234.144 280.971 li
236.016 281.259 li
238.032 281.618 li
239.904 281.979 li
241.776 282.626 li
243.648 283.49 li
245.736 284.498 li
247.464 285.579 li
248.976 286.946 li
250.344 288.242 li
251.712 289.826 li
252.864 291.339 li
253.944 293.067 li
254.952 294.794 li
255.96 297.171 li
256.68 299.546 li
256.968 301.923 li
257.184 304.155 li
257.184 306.387 li
256.824 308.402 li
256.32 310.49 li
255.456 312.146 li
254.808 313.37 li
254.088 314.738 li
253.08 316.106 li
252.072 317.475 li
250.848 318.843 li
249.336 319.994 li
247.752 321.218 li
246.096 322.226 li
280.512 343.035 li
282.096 343.898 li
283.608 344.763 li
284.832 345.482 li
285.984 346.131 li
287.208 346.851 li
288.072 347.139 li
288.72 347.643 li
289.44 347.858 li
290.088 347.858 li
290.952 347.858 li
291.816 347.858 li
292.68 347.858 li
293.688 347.643 li
294.696 347.643 li
295.704 347.499 li
296.928 347.354 li
296.928 349.227 li
271.152 358.73 li
224.424 331.803 li
218.736 333.314 li
cp
198.648 293.571 mo
215.856 328.563 li
220.32 327.698 li
222.336 327.051 li
224.208 326.475 li
225.936 325.826 li
227.664 325.106 li
229.032 324.313 li
230.4 323.595 li
231.408 322.946 li
232.416 322.226 li
233.28 321.218 li
234.144 320.354 li
234.792 319.347 li
235.296 318.482 li
236.016 317.475 li
236.376 316.467 li
236.88 315.242 li
237.168 314.019 li
237.168 312.866 li
237.168 311.498 li
237.024 310.13 li
236.88 308.618 li
236.664 307.25 li
236.16 305.667 li
235.656 304.298 li
234.792 302.931 li
233.64 300.771 li
232.272 298.683 li
230.904 296.81 li
229.536 295.298 li
227.952 293.931 li
226.44 292.706 li
224.568 291.698 li
222.696 290.979 li
221.184 289.971 li
219.24 289.322 li
217.224 288.963 li
215.208 288.818 li
212.976 288.963 li
210.6 289.467 li
208.152 290.187 li
205.776 290.979 li
198.648 293.571 li
.0118 .9608 .9137 0 cmyk
ef
139.608 361.467 mo
150.984 385.011 li
151.848 386.379 li
152.712 387.747 li
153.432 388.971 li
154.08 389.979 li
154.728 390.986 li
155.088 391.851 li
155.592 392.57 li
155.808 393.074 li
156.672 393.579 li
157.824 394.083 li
159.048 394.227 li
160.056 394.442 li
160.92 394.442 li
161.928 394.227 li
162.936 394.083 li
164.16 393.938 li
165.312 393.579 li
166.536 393.219 li
167.76 392.715 li
168.912 392.066 li
170.28 394.442 li
126.072 409.635 li
125.064 407.259 li
126.432 407.043 li
127.656 406.539 li
128.808 406.179 li
130.032 405.675 li
130.896 405.171 li
131.688 404.811 li
132.264 404.307 li
132.768 404.019 li
133.632 403.299 li
133.92 402.291 li
134.136 401.066 li
134.136 400.059 li
134.136 399.411 li
133.92 398.69 li
133.776 397.827 li
133.632 396.818 li
133.272 395.811 li
132.768 394.587 li
132.048 393.435 li
131.184 392.066 li
104.4 337.419 li
103.896 336.267 li
103.248 335.043 li
102.528 334.035 li
101.88 333.026 li
101.16 332.163 li
100.512 331.442 li
100.008 331.083 li
99.792 330.938 li
99.4321 329.931 li
98.4243 329.066 li
97.2725 328.419 li
96.4082 327.698 li
95.5444 327.698 li
94.5361 327.843 li
93.5283 328.059 li
92.3042 328.202 li
90.936 328.563 li
89.5684 329.066 li
88.2002 329.427 li
86.688 329.931 li
85.9683 327.698 li
123.84 314.019 li
126.072 313.37 li
128.304 312.65 li
130.392 312.003 li
132.408 311.498 li
134.424 311.138 li
136.296 310.778 li
138.24 310.634 li
140.112 310.49 li
141.984 310.274 li
143.64 310.274 li
145.368 310.49 li
147.096 310.634 li
148.608 310.778 li
150.336 311.138 li
151.848 311.498 li
153.432 311.858 li
156.096 312.65 li
158.688 313.874 li
161.064 315.242 li
163.296 316.61 li
165.312 318.339 li
167.04 320.211 li
168.552 322.226 li
169.92 324.458 li
170.64 326.33 li
171.144 328.202 li
171.648 330.291 li
171.864 332.163 li
171.864 334.179 li
171.864 336.051 li
171.648 337.923 li
171.504 339.795 li
171 341.522 li
169.92 343.395 li
168.912 345.123 li
167.544 346.851 li
165.888 348.362 li
164.16 350.091 li
162.072 351.603 li
160.056 352.971 li
158.544 353.835 li
156.816 354.698 li
154.584 355.707 li
152.208 356.715 li
149.328 357.938 li
146.376 359.307 li
142.992 360.675 li
139.608 361.971 li
139.608 361.467 li
cp
119.952 321.218 mo
137.52 356.354 li
138.744 356.354 li
139.896 356.354 li
140.904 356.354 li
141.624 356.354 li
143.352 355.49 li
145.008 354.482 li
146.376 353.475 li
147.744 352.251 li
148.824 351.243 li
149.832 350.091 li
150.48 348.867 li
150.984 347.858 li
151.488 345.986 li
151.704 344.114 li
151.848 342.243 li
151.704 340.154 li
151.344 338.139 li
150.696 336.051 li
149.832 333.818 li
148.824 331.803 li
147.456 329.715 li
146.232 327.843 li
145.008 326.33 li
143.856 324.603 li
142.488 323.234 li
141.264 321.866 li
139.896 320.715 li
138.384 319.706 li
136.512 318.986 li
134.64 318.482 li
132.768 318.339 li
130.68 318.339 li
128.664 318.482 li
126.576 318.843 li
124.416 319.202 li
122.328 319.706 li
119.952 321.218 li
.0118 .9608 .9137 0 cmyk
ef
472.176 261.313 mo
472.032 261.171 li
468.792 257.067 li
466.417 252.747 li
464.329 248.498 li
462.672 244.106 li
461.448 239.498 li
460.584 235.179 li
460.224 230.427 li
460.081 225.675 li
460.44 221.211 li
460.944 216.603 li
461.952 212.354 li
462.817 208.034 li
464.184 204.003 li
465.913 200.042 li
467.424 196.299 li
469.296 192.843 li
463.176 189.458 li
461.304 193.202 li
459.432 197.307 li
457.704 201.555 li
456.336 206.019 li
455.112 210.627 li
454.104 215.595 li
453.6 220.49 li
453.241 225.675 li
453.456 230.786 li
453.745 235.898 li
454.608 241.155 li
456.192 246.122 li
457.848 251.234 li
460.224 256.202 li
463.321 261.171 li
466.92 265.563 li
466.776 265.419 li
472.176 261.313 li
.2627 .4941 .6706 .1333 cmyk
ef
2.0001 lw
0 lc
0 lj
2.6131 ml
[] 0 dsh
true sadj
472.176 261.313 mo
472.032 261.171 li
468.792 257.067 li
466.417 252.747 li
464.329 248.498 li
462.672 244.106 li
461.448 239.498 li
460.584 235.179 li
460.224 230.427 li
460.081 225.675 li
460.44 221.211 li
460.944 216.603 li
461.952 212.354 li
462.817 208.034 li
464.184 204.003 li
465.913 200.042 li
467.424 196.299 li
469.296 192.843 li
463.176 189.458 li
461.304 193.202 li
459.432 197.307 li
457.704 201.555 li
456.336 206.019 li
455.112 210.627 li
454.104 215.595 li
453.6 220.49 li
453.241 225.675 li
453.456 230.786 li
453.745 235.898 li
454.608 241.155 li
456.192 246.122 li
457.848 251.234 li
460.224 256.202 li
463.321 261.171 li
466.92 265.563 li
466.776 265.419 li
472.176 261.313 li
cp
0 0 0 1 cmyk
s
564.552 300.41 mo
559.584 294.579 li
554.112 289.826 li
547.993 285.866 li
541.656 282.986 li
535.032 280.61 li
527.976 278.738 li
521.208 277.37 li
514.369 276.146 li
507.528 274.994 li
501.048 273.914 li
494.928 272.546 li
488.952 271.179 li
483.84 269.306 li
479.233 267.29 li
475.272 264.555 li
472.176 261.313 li
466.776 265.419 li
470.808 269.667 li
475.776 273.122 li
481.104 275.786 li
487.224 277.729 li
493.2 279.387 li
499.68 280.755 li
506.52 281.763 li
513 282.986 li
519.84 284.211 li
526.68 285.579 li
532.944 287.091 li
538.92 289.467 li
544.896 292.059 li
550.008 295.298 li
554.833 299.402 li
559.081 304.515 li
564.552 300.41 li
.2627 .498 .6706 .1333 cmyk
ef
564.552 300.41 mo
559.584 294.579 li
554.112 289.826 li
547.993 285.866 li
541.656 282.986 li
535.032 280.61 li
527.976 278.738 li
521.208 277.37 li
514.369 276.146 li
507.528 274.994 li
501.048 273.914 li
494.928 272.546 li
488.952 271.179 li
483.84 269.306 li
479.233 267.29 li
475.272 264.555 li
472.176 261.313 li
466.776 265.419 li
470.808 269.667 li
475.776 273.122 li
481.104 275.786 li
487.224 277.729 li
493.2 279.387 li
499.68 280.755 li
506.52 281.763 li
513 282.986 li
519.84 284.211 li
526.68 285.579 li
532.944 287.091 li
538.92 289.467 li
544.896 292.059 li
550.008 295.298 li
554.833 299.402 li
559.081 304.515 li
564.552 300.41 li
cp
0 0 0 1 cmyk
s
568.44 221.067 mo
568.44 221.067 li
566.208 214.37 li
563.688 208.395 li
560.592 202.778 li
557.208 197.811 li
553.464 193.563 li
549.36 189.818 li
545.4 186.578 li
541.296 183.482 li
537.192 181.106 li
533.161 179.019 li
529.056 177.146 li
525.6 175.778 li
522.36 174.627 li
519.336 173.618 li
516.745 172.755 li
514.728 172.395 li
513 178.875 li
515.016 179.595 li
517.249 180.099 li
519.984 181.106 li
523.224 182.259 li
526.68 183.627 li
530.064 185.211 li
533.808 187.226 li
537.552 189.314 li
541.296 192.051 li
544.896 194.931 li
548.352 198.314 li
551.736 202.274 li
554.833 206.522 li
557.568 211.49 li
559.728 216.747 li
561.6 222.723 li
568.44 221.067 li
.2627 .4941 .6706 .1333 cmyk
ef
.216 lw
568.44 221.067 mo
568.44 221.067 li
566.208 214.37 li
563.688 208.395 li
560.592 202.778 li
557.208 197.811 li
553.464 193.563 li
549.36 189.818 li
545.4 186.578 li
541.296 183.482 li
537.192 181.106 li
533.161 179.019 li
529.056 177.146 li
525.6 175.778 li
522.36 174.627 li
519.336 173.618 li
516.745 172.755 li
514.728 172.395 li
513 178.875 li
515.016 179.595 li
517.249 180.099 li
519.984 181.106 li
523.224 182.259 li
526.68 183.627 li
530.064 185.211 li
533.808 187.226 li
537.552 189.314 li
541.296 192.051 li
544.896 194.931 li
548.352 198.314 li
551.736 202.274 li
554.833 206.522 li
557.568 211.49 li
559.728 216.747 li
561.6 222.723 li
568.44 221.067 li
cp
0 0 0 1 cmyk
s
530.928 316.25 mo
530.568 308.402 li
531.577 301.274 li
533.304 294.579 li
535.68 288.603 li
538.92 282.986 li
542.52 277.515 li
546.625 272.259 li
550.728 267.146 li
554.833 262.179 li
558.72 257.067 li
562.464 251.954 li
565.56 246.626 li
567.936 240.866 li
569.304 234.53 li
569.448 228.051 li
568.44 221.067 li
561.6 222.723 li
562.68 228.339 li
562.464 233.811 li
561.457 238.778 li
559.44 243.53 li
556.705 248.138 li
553.249 252.963 li
549.36 257.715 li
545.256 262.683 li
541.152 267.794 li
537.048 273.41 li
533.161 279.242 li
529.56 285.579 li
526.825 292.563 li
524.736 299.906 li
523.728 308.042 li
524.088 316.971 li
530.928 316.25 li
.2863 .4588 .7098 .1569 cmyk
ef
2 lw
530.928 316.25 mo
530.568 308.402 li
531.577 301.274 li
533.304 294.579 li
535.68 288.603 li
538.92 282.986 li
542.52 277.515 li
546.625 272.259 li
550.728 267.146 li
554.833 262.179 li
558.72 257.067 li
562.464 251.954 li
565.56 246.626 li
567.936 240.866 li
569.304 234.53 li
569.448 228.051 li
568.44 221.067 li
561.6 222.723 li
562.68 228.339 li
562.464 233.811 li
561.457 238.778 li
559.44 243.53 li
556.705 248.138 li
553.249 252.963 li
549.36 257.715 li
545.256 262.683 li
541.152 267.794 li
537.048 273.41 li
533.161 279.242 li
529.56 285.579 li
526.825 292.563 li
524.736 299.906 li
523.728 308.042 li
524.088 316.971 li
530.928 316.25 li
cp
0 0 0 1 cmyk
s
469.296 192.843 mo
469.8 191.33 li
469.657 189.963 li
468.936 188.954 li
467.928 188.091 li
466.776 187.587 li
465.409 187.729 li
464.184 188.234 li
463.176 189.458 li
469.296 192.843 li
.7647 0 .9412 0 cmyk
ef
2.0001 lw
469.296 192.843 mo
469.8 191.33 li
469.657 189.963 li
468.936 188.954 li
467.928 188.091 li
466.776 187.587 li
465.409 187.729 li
464.184 188.234 li
463.176 189.458 li
469.296 192.843 li
cp
0 0 0 1 cmyk
s
514.728 172.395 mo
513.144 172.395 li
511.993 172.898 li
511.128 173.763 li
510.625 174.771 li
510.625 176.138 li
510.913 177.363 li
511.632 178.226 li
513 178.875 li
514.728 172.395 li
.7647 0 .9412 0 cmyk
ef
514.728 172.395 mo
513.144 172.395 li
511.993 172.898 li
511.128 173.763 li
510.625 174.771 li
510.625 176.138 li
510.913 177.363 li
511.632 178.226 li
513 178.875 li
514.728 172.395 li
cp
0 0 0 1 cmyk
s
498.168 279.747 mo
498.672 280.25 li
499.176 280.755 li
499.825 281.475 li
500.544 282.122 li
501.048 283.13 li
501.192 284.211 li
501.192 285.362 li
500.688 286.729 li
500.329 288.099 li
499.537 289.467 li
498.456 290.979 li
497.088 292.563 li
495.72 294.075 li
494.208 295.298 li
492.696 296.45 li
491.329 297.171 li
490.968 295.802 li
490.608 293.931 li
490.321 292.059 li
490.104 289.826 li
489.959 287.738 li
489.959 285.866 li
489.959 283.994 li
490.321 282.626 li
490.825 281.618 li
491.472 280.971 li
492.336 280.395 li
493.2 280.106 li
494.208 279.891 li
495.216 279.747 li
496.081 279.747 li
496.944 279.747 li
498.168 279.747 li
.7647 0 .9412 0 cmyk
ef
498.168 279.747 mo
498.672 280.25 li
499.176 280.755 li
499.825 281.475 li
500.544 282.122 li
501.048 283.13 li
501.192 284.211 li
501.192 285.362 li
500.688 286.729 li
500.329 288.099 li
499.537 289.467 li
498.456 290.979 li
497.088 292.563 li
495.72 294.075 li
494.208 295.298 li
492.696 296.45 li
491.329 297.171 li
490.968 295.802 li
490.608 293.931 li
490.321 292.059 li
490.104 289.826 li
489.959 287.738 li
489.959 285.866 li
489.959 283.994 li
490.321 282.626 li
490.825 281.618 li
491.472 280.971 li
492.336 280.395 li
493.2 280.106 li
494.208 279.891 li
495.216 279.747 li
496.081 279.747 li
496.944 279.747 li
498.168 279.747 li
cp
0 0 0 1 cmyk
s
497.304 277.874 mo
496.8 277.37 li
496.081 276.866 li
495.432 276.146 li
494.712 275.498 li
494.208 274.778 li
493.848 273.914 li
493.848 272.906 li
494.424 271.755 li
495.073 270.171 li
496.081 268.515 li
497.304 266.931 li
498.672 265.419 li
499.825 264.051 li
501.192 262.826 li
502.56 261.818 li
503.784 260.954 li
504.432 262.322 li
504.936 264.051 li
505.512 265.923 li
505.8 267.938 li
506.016 270.026 li
506.016 271.898 li
506.016 273.626 li
505.8 275.138 li
504.936 276.003 li
504.144 276.65 li
503.064 277.155 li
502.056 277.515 li
501.192 277.729 li
500.329 277.874 li
499.68 277.874 li
499.176 277.874 li
497.304 277.874 li
.7647 0 .9412 0 cmyk
ef
497.304 277.874 mo
496.8 277.37 li
496.081 276.866 li
495.432 276.146 li
494.712 275.498 li
494.208 274.778 li
493.848 273.914 li
493.848 272.906 li
494.424 271.755 li
495.073 270.171 li
496.081 268.515 li
497.304 266.931 li
498.672 265.419 li
499.825 264.051 li
501.192 262.826 li
502.56 261.818 li
503.784 260.954 li
504.432 262.322 li
504.936 264.051 li
505.512 265.923 li
505.8 267.938 li
506.016 270.026 li
506.016 271.898 li
506.016 273.626 li
505.8 275.138 li
504.936 276.003 li
504.144 276.65 li
503.064 277.155 li
502.056 277.515 li
501.192 277.729 li
500.329 277.874 li
499.68 277.874 li
499.176 277.874 li
497.304 277.874 li
cp
0 0 0 1 cmyk
s
464.329 189.818 mo
463.68 189.818 li
462.959 189.818 li
462.168 189.818 li
461.088 189.603 li
460.224 189.314 li
459.432 188.954 li
458.712 188.091 li
458.208 187.082 li
457.704 185.715 li
457.56 183.986 li
457.344 182.114 li
457.344 180.099 li
457.56 178.011 li
457.704 175.994 li
457.848 174.122 li
458.208 172.395 li
459.432 173.259 li
460.8 174.267 li
462.312 175.49 li
463.825 177.003 li
465.409 178.515 li
466.92 180.099 li
468.288 181.755 li
469.44 183.339 li
469.44 184.49 li
469.296 185.57 li
468.792 186.578 li
468.288 187.442 li
467.569 188.234 li
467.064 188.954 li
466.56 189.458 li
466.2 189.818 li
464.329 189.818 li
.7647 0 .9412 0 cmyk
ef
464.329 189.818 mo
463.68 189.818 li
462.959 189.818 li
462.168 189.818 li
461.088 189.603 li
460.224 189.314 li
459.432 188.954 li
458.712 188.091 li
458.208 187.082 li
457.704 185.715 li
457.56 183.986 li
457.344 182.114 li
457.344 180.099 li
457.56 178.011 li
457.704 175.994 li
457.848 174.122 li
458.208 172.395 li
459.432 173.259 li
460.8 174.267 li
462.312 175.49 li
463.825 177.003 li
465.409 178.515 li
466.92 180.099 li
468.288 181.755 li
469.44 183.339 li
469.44 184.49 li
469.296 185.57 li
468.792 186.578 li
468.288 187.442 li
467.569 188.234 li
467.064 188.954 li
466.56 189.458 li
466.2 189.818 li
464.329 189.818 li
cp
0 0 0 1 cmyk
s
466.776 189.818 mo
466.417 189.099 li
466.056 188.091 li
465.696 187.226 li
465.192 186.219 li
465.048 185.211 li
465.048 184.202 li
465.409 183.122 li
466.2 182.259 li
467.28 181.467 li
468.792 180.387 li
470.52 179.379 li
472.176 178.37 li
474.048 177.507 li
475.993 176.642 li
477.648 176.138 li
479.016 175.634 li
479.233 177.363 li
479.233 179.234 li
478.872 181.251 li
478.368 183.339 li
477.648 185.211 li
477 187.082 li
476.136 188.595 li
475.128 189.818 li
474.409 190.683 li
473.401 191.187 li
472.536 191.475 li
471.528 191.475 li
470.304 191.33 li
469.44 190.971 li
468.432 190.683 li
467.784 190.322 li
466.776 189.818 li
.7647 0 .9412 0 cmyk
ef
466.776 189.818 mo
466.417 189.099 li
466.056 188.091 li
465.696 187.226 li
465.192 186.219 li
465.048 185.211 li
465.048 184.202 li
465.409 183.122 li
466.2 182.259 li
467.28 181.467 li
468.792 180.387 li
470.52 179.379 li
472.176 178.37 li
474.048 177.507 li
475.993 176.642 li
477.648 176.138 li
479.016 175.634 li
479.233 177.363 li
479.233 179.234 li
478.872 181.251 li
478.368 183.339 li
477.648 185.211 li
477 187.082 li
476.136 188.595 li
475.128 189.818 li
474.409 190.683 li
473.401 191.187 li
472.536 191.475 li
471.528 191.475 li
470.304 191.33 li
469.44 190.971 li
468.432 190.683 li
467.784 190.322 li
466.776 189.818 li
cp
0 0 0 1 cmyk
s
470.016 192.339 mo
470.016 191.834 li
470.161 190.971 li
470.52 190.179 li
471.024 189.314 li
471.672 188.45 li
472.536 187.729 li
473.76 187.226 li
475.128 187.082 li
476.64 187.226 li
478.368 187.587 li
480.241 188.234 li
482.112 189.099 li
483.84 189.963 li
485.497 190.971 li
486.864 192.194 li
487.872 193.202 li
486.72 193.923 li
485.352 194.786 li
483.624 195.578 li
481.752 196.442 li
479.88 197.162 li
478.008 197.811 li
476.497 198.171 li
475.128 198.314 li
473.76 198.53 li
472.536 198.171 li
471.672 197.666 li
471.024 196.803 li
470.304 195.938 li
470.016 194.931 li
469.657 194.067 li
469.44 193.202 li
470.016 192.339 li
.7647 0 .9412 0 cmyk
ef
470.016 192.339 mo
470.016 191.834 li
470.161 190.971 li
470.52 190.179 li
471.024 189.314 li
471.672 188.45 li
472.536 187.729 li
473.76 187.226 li
475.128 187.082 li
476.64 187.226 li
478.368 187.587 li
480.241 188.234 li
482.112 189.099 li
483.84 189.963 li
485.497 190.971 li
486.864 192.194 li
487.872 193.202 li
486.72 193.923 li
485.352 194.786 li
483.624 195.578 li
481.752 196.442 li
479.88 197.162 li
478.008 197.811 li
476.497 198.171 li
475.128 198.314 li
473.76 198.53 li
472.536 198.171 li
471.672 197.666 li
471.024 196.803 li
470.304 195.938 li
470.016 194.931 li
469.657 194.067 li
469.44 193.202 li
470.016 192.339 li
cp
0 0 0 1 cmyk
s
466.2 195.074 mo
466.56 194.786 li
467.064 194.211 li
467.784 193.923 li
468.648 193.418 li
469.44 193.202 li
470.52 193.059 li
471.528 193.059 li
472.392 193.202 li
473.76 194.067 li
475.128 195.435 li
476.497 196.803 li
477.864 198.53 li
479.233 200.402 li
480.241 202.059 li
480.888 203.786 li
481.249 205.299 li
479.737 205.658 li
478.008 205.658 li
475.993 205.658 li
473.905 205.515 li
471.888 205.011 li
469.8 204.507 li
468.073 204.003 li
466.776 203.138 li
465.696 202.418 li
465.192 201.771 li
464.833 200.906 li
464.833 199.898 li
465.048 199.034 li
465.192 198.026 li
465.409 197.162 li
465.409 196.442 li
466.2 195.074 li
.7647 0 .9412 0 cmyk
ef
466.2 195.074 mo
466.56 194.786 li
467.064 194.211 li
467.784 193.923 li
468.648 193.418 li
469.44 193.202 li
470.52 193.059 li
471.528 193.059 li
472.392 193.202 li
473.76 194.067 li
475.128 195.435 li
476.497 196.803 li
477.864 198.53 li
479.233 200.402 li
480.241 202.059 li
480.888 203.786 li
481.249 205.299 li
479.737 205.658 li
478.008 205.658 li
475.993 205.658 li
473.905 205.515 li
471.888 205.011 li
469.8 204.507 li
468.073 204.003 li
466.776 203.138 li
465.696 202.418 li
465.192 201.771 li
464.833 200.906 li
464.833 199.898 li
465.048 199.034 li
465.192 198.026 li
465.409 197.162 li
465.409 196.442 li
466.2 195.074 li
cp
0 0 0 1 cmyk
s
462.959 195.074 mo
462.672 195.578 li
461.952 196.299 li
461.304 196.946 li
460.44 197.666 li
459.432 198.026 li
458.208 198.171 li
456.985 198.026 li
455.833 197.45 li
454.968 196.442 li
453.745 195.074 li
452.737 193.563 li
451.584 191.834 li
450.504 190.179 li
449.497 188.45 li
448.632 186.866 li
447.985 185.57 li
449.497 185.354 li
451.368 185.211 li
453.241 185.211 li
455.329 185.354 li
457.344 185.715 li
459.216 186.074 li
460.8 186.578 li
462.168 187.082 li
463.321 187.946 li
464.04 188.811 li
464.329 189.818 li
464.329 190.826 li
464.184 191.69 li
463.825 192.698 li
463.68 193.418 li
463.464 194.067 li
462.959 195.074 li
.7647 0 .9412 0 cmyk
ef
462.959 195.074 mo
462.672 195.578 li
461.952 196.299 li
461.304 196.946 li
460.44 197.666 li
459.432 198.026 li
458.208 198.171 li
456.985 198.026 li
455.833 197.45 li
454.968 196.442 li
453.745 195.074 li
452.737 193.563 li
451.584 191.834 li
450.504 190.179 li
449.497 188.45 li
448.632 186.866 li
447.985 185.57 li
449.497 185.354 li
451.368 185.211 li
453.241 185.211 li
455.329 185.354 li
457.344 185.715 li
459.216 186.074 li
460.8 186.578 li
462.168 187.082 li
463.321 187.946 li
464.04 188.811 li
464.329 189.818 li
464.329 190.826 li
464.184 191.69 li
463.825 192.698 li
463.68 193.418 li
463.464 194.067 li
462.959 195.074 li
cp
0 0 0 1 cmyk
s
487.872 274.274 mo
487.368 273.771 li
486.864 273.267 li
486.216 272.546 li
485.712 271.755 li
485.352 270.891 li
485.208 269.81 li
485.352 268.659 li
486 267.435 li
486.504 266.282 li
487.584 264.914 li
488.952 263.546 li
490.608 262.179 li
492.336 260.954 li
494.064 259.946 li
495.72 259.082 li
497.304 258.579 li
497.448 260.306 li
497.665 262.179 li
497.665 264.194 li
497.448 266.282 li
497.304 268.155 li
496.944 270.026 li
496.584 271.755 li
496.081 273.122 li
495.432 274.13 li
494.569 274.994 li
493.704 275.282 li
492.84 275.498 li
491.833 275.498 li
490.968 275.498 li
490.104 275.282 li
489.241 275.138 li
487.872 274.274 li
.7647 0 .9412 0 cmyk
ef
487.872 274.274 mo
487.368 273.771 li
486.864 273.267 li
486.216 272.546 li
485.712 271.755 li
485.352 270.891 li
485.208 269.81 li
485.352 268.659 li
486 267.435 li
486.504 266.282 li
487.584 264.914 li
488.952 263.546 li
490.608 262.179 li
492.336 260.954 li
494.064 259.946 li
495.72 259.082 li
497.304 258.579 li
497.448 260.306 li
497.665 262.179 li
497.665 264.194 li
497.448 266.282 li
497.304 268.155 li
496.944 270.026 li
496.584 271.755 li
496.081 273.122 li
495.432 274.13 li
494.569 274.994 li
493.704 275.282 li
492.84 275.498 li
491.833 275.498 li
490.968 275.498 li
490.104 275.282 li
489.241 275.138 li
487.872 274.274 li
cp
0 0 0 1 cmyk
s
487.872 277.37 mo
488.448 277.729 li
489.096 278.234 li
489.6 278.883 li
490.104 279.747 li
490.464 280.755 li
490.608 281.979 li
490.608 283.13 li
490.321 284.354 li
489.241 285.362 li
487.872 286.587 li
486.504 287.738 li
484.848 288.963 li
483.12 290.187 li
481.392 291.194 li
479.737 292.059 li
478.008 292.563 li
477.864 290.834 li
477.864 288.963 li
478.008 286.946 li
478.153 284.858 li
478.368 282.843 li
478.657 280.971 li
479.233 279.242 li
479.88 277.874 li
480.6 277.011 li
481.249 276.507 li
482.112 276.146 li
483.12 276.146 li
483.985 276.146 li
484.993 276.362 li
486 276.507 li
486.864 276.507 li
487.872 277.37 li
.7647 0 .9412 0 cmyk
ef
487.872 277.37 mo
488.448 277.729 li
489.096 278.234 li
489.6 278.883 li
490.104 279.747 li
490.464 280.755 li
490.608 281.979 li
490.608 283.13 li
490.321 284.354 li
489.241 285.362 li
487.872 286.587 li
486.504 287.738 li
484.848 288.963 li
483.12 290.187 li
481.392 291.194 li
479.737 292.059 li
478.008 292.563 li
477.864 290.834 li
477.864 288.963 li
478.008 286.946 li
478.153 284.858 li
478.368 282.843 li
478.657 280.971 li
479.233 279.242 li
479.88 277.874 li
480.6 277.011 li
481.249 276.507 li
482.112 276.146 li
483.12 276.146 li
483.985 276.146 li
484.993 276.362 li
486 276.507 li
486.864 276.507 li
487.872 277.37 li
cp
0 0 0 1 cmyk
s
479.016 269.81 mo
478.512 269.306 li
478.153 268.515 li
477.648 267.65 li
477.288 266.786 li
477.288 265.778 li
477.504 264.698 li
478.008 263.69 li
479.016 262.826 li
480.024 261.818 li
481.608 260.81 li
483.48 259.946 li
485.352 259.082 li
487.368 258.579 li
489.241 258.075 li
491.112 257.715 li
492.48 257.571 li
492.336 259.082 li
491.976 260.81 li
491.329 262.683 li
490.608 264.555 li
489.817 266.427 li
488.737 268.298 li
487.728 269.667 li
486.864 270.891 li
486 271.898 li
484.993 272.402 li
484.128 272.546 li
483.12 272.402 li
482.472 272.042 li
481.608 271.755 li
481.249 271.179 li
480.888 270.891 li
479.016 269.81 li
.7647 0 .9412 0 cmyk
ef
479.016 269.81 mo
478.512 269.306 li
478.153 268.515 li
477.648 267.65 li
477.288 266.786 li
477.288 265.778 li
477.504 264.698 li
478.008 263.69 li
479.016 262.826 li
480.024 261.818 li
481.608 260.81 li
483.48 259.946 li
485.352 259.082 li
487.368 258.579 li
489.241 258.075 li
491.112 257.715 li
492.48 257.571 li
492.336 259.082 li
491.976 260.81 li
491.329 262.683 li
490.608 264.555 li
489.817 266.427 li
488.737 268.298 li
487.728 269.667 li
486.864 270.891 li
486 271.898 li
484.993 272.402 li
484.128 272.546 li
483.12 272.402 li
482.472 272.042 li
481.608 271.755 li
481.249 271.179 li
480.888 270.891 li
479.016 269.81 li
cp
0 0 0 1 cmyk
s
478.008 272.259 mo
478.512 273.122 li
478.872 273.914 li
479.375 274.994 li
479.52 275.786 li
479.737 276.866 li
479.52 277.874 li
479.016 278.883 li
478.008 279.747 li
477 280.61 li
475.417 281.475 li
473.76 282.339 li
471.888 282.986 li
470.016 283.49 li
467.928 283.994 li
466.056 284.211 li
464.329 284.354 li
464.833 282.986 li
465.409 281.475 li
466.056 279.603 li
466.776 277.729 li
467.424 276.003 li
468.288 274.274 li
469.153 272.906 li
470.016 271.755 li
470.808 270.675 li
471.888 270.171 li
472.896 270.026 li
473.905 270.171 li
474.913 270.53 li
475.993 270.891 li
476.784 271.395 li
477.648 271.755 li
478.008 272.259 li
.7647 0 .9412 0 cmyk
ef
478.008 272.259 mo
478.512 273.122 li
478.872 273.914 li
479.375 274.994 li
479.52 275.786 li
479.737 276.866 li
479.52 277.874 li
479.016 278.883 li
478.008 279.747 li
477 280.61 li
475.417 281.475 li
473.76 282.339 li
471.888 282.986 li
470.016 283.49 li
467.928 283.994 li
466.056 284.211 li
464.329 284.354 li
464.833 282.986 li
465.409 281.475 li
466.056 279.603 li
466.776 277.729 li
467.424 276.003 li
468.288 274.274 li
469.153 272.906 li
470.016 271.755 li
470.808 270.675 li
471.888 270.171 li
472.896 270.026 li
473.905 270.171 li
474.913 270.53 li
475.993 270.891 li
476.784 271.395 li
477.648 271.755 li
478.008 272.259 li
cp
0 0 0 1 cmyk
s
470.016 263.33 mo
469.8 262.538 li
469.657 261.458 li
469.44 260.45 li
469.44 259.442 li
469.44 258.435 li
470.016 257.571 li
470.665 256.851 li
472.032 256.202 li
473.04 255.339 li
474.409 254.69 li
476.136 254.114 li
478.008 253.61 li
479.88 253.322 li
481.896 252.963 li
483.84 252.747 li
485.497 252.747 li
484.993 254.475 li
484.344 256.347 li
483.48 258.218 li
482.616 259.946 li
481.392 261.675 li
480.241 263.187 li
479.233 264.41 li
478.008 265.202 li
477.144 266.067 li
476.136 266.571 li
475.128 266.571 li
474.048 266.282 li
473.256 265.923 li
472.392 265.202 li
471.528 264.698 li
471.024 264.194 li
470.016 263.33 li
.7647 0 .9412 0 cmyk
ef
470.016 263.33 mo
469.8 262.538 li
469.657 261.458 li
469.44 260.45 li
469.44 259.442 li
469.44 258.435 li
470.016 257.571 li
470.665 256.851 li
472.032 256.202 li
473.04 255.339 li
474.409 254.69 li
476.136 254.114 li
478.008 253.61 li
479.88 253.322 li
481.896 252.963 li
483.84 252.747 li
485.497 252.747 li
484.993 254.475 li
484.344 256.347 li
483.48 258.218 li
482.616 259.946 li
481.392 261.675 li
480.241 263.187 li
479.233 264.41 li
478.008 265.202 li
477.144 266.067 li
476.136 266.571 li
475.128 266.571 li
474.048 266.282 li
473.256 265.923 li
472.392 265.202 li
471.528 264.698 li
471.024 264.194 li
470.016 263.33 li
cp
0 0 0 1 cmyk
s
469.44 265.202 mo
469.44 266.067 li
469.657 267.146 li
469.8 268.155 li
469.8 269.019 li
469.8 270.026 li
469.44 270.891 li
468.792 271.538 li
467.784 272.259 li
466.417 273.267 li
464.688 274.13 li
462.959 274.778 li
461.304 275.282 li
459.432 275.642 li
457.56 275.786 li
455.833 275.786 li
454.104 275.498 li
454.464 273.914 li
455.112 272.259 li
455.976 270.53 li
456.84 268.659 li
457.848 266.931 li
458.856 265.563 li
459.936 264.194 li
460.944 263.33 li
461.952 262.683 li
462.959 262.322 li
464.04 262.322 li
464.833 262.538 li
465.913 263.042 li
466.56 263.33 li
467.28 263.906 li
467.784 264.194 li
469.44 265.202 li
.7647 0 .9412 0 cmyk
ef
469.44 265.202 mo
469.44 266.067 li
469.657 267.146 li
469.8 268.155 li
469.8 269.019 li
469.8 270.026 li
469.44 270.891 li
468.792 271.538 li
467.784 272.259 li
466.417 273.267 li
464.688 274.13 li
462.959 274.778 li
461.304 275.282 li
459.432 275.642 li
457.56 275.786 li
455.833 275.786 li
454.104 275.498 li
454.464 273.914 li
455.112 272.259 li
455.976 270.53 li
456.84 268.659 li
457.848 266.931 li
458.856 265.563 li
459.936 264.194 li
460.944 263.33 li
461.952 262.683 li
462.959 262.322 li
464.04 262.322 li
464.833 262.538 li
465.913 263.042 li
466.56 263.33 li
467.28 263.906 li
467.784 264.194 li
469.44 265.202 li
cp
0 0 0 1 cmyk
s
464.329 253.971 mo
464.329 253.106 li
464.329 252.242 li
464.329 251.234 li
464.544 250.226 li
464.833 249.218 li
465.409 248.354 li
466.417 247.634 li
467.784 247.13 li
469.153 246.771 li
470.808 246.481 li
472.536 246.481 li
474.624 246.267 li
476.497 246.481 li
478.153 246.626 li
479.88 246.771 li
481.249 247.13 li
480.888 248.498 li
480.241 250.226 li
479.233 251.954 li
477.864 253.467 li
476.497 254.978 li
475.128 256.202 li
473.76 257.211 li
472.392 257.571 li
471.384 258.218 li
470.304 258.435 li
469.296 258.218 li
468.432 257.715 li
467.569 257.067 li
467.064 256.347 li
466.56 255.843 li
466.2 255.339 li
464.329 253.971 li
.7647 0 .9412 0 cmyk
ef
464.329 253.971 mo
464.329 253.106 li
464.329 252.242 li
464.329 251.234 li
464.544 250.226 li
464.833 249.218 li
465.409 248.354 li
466.417 247.634 li
467.784 247.13 li
469.153 246.771 li
470.808 246.481 li
472.536 246.481 li
474.624 246.267 li
476.497 246.481 li
478.153 246.626 li
479.88 246.771 li
481.249 247.13 li
480.888 248.498 li
480.241 250.226 li
479.233 251.954 li
477.864 253.467 li
476.497 254.978 li
475.128 256.202 li
473.76 257.211 li
472.392 257.571 li
471.384 258.218 li
470.304 258.435 li
469.296 258.218 li
468.432 257.715 li
467.569 257.067 li
467.064 256.347 li
466.56 255.843 li
466.2 255.339 li
464.329 253.971 li
cp
0 0 0 1 cmyk
s
463.464 256.202 mo
463.464 256.851 li
463.464 257.715 li
463.68 258.579 li
463.464 259.802 li
463.321 260.81 li
462.817 261.818 li
461.952 262.683 li
460.944 263.33 li
459.72 263.906 li
458.064 264.194 li
456.192 264.41 li
454.104 264.41 li
452.088 264.194 li
450.216 264.051 li
448.344 263.69 li
446.976 263.33 li
447.624 261.818 li
448.489 260.306 li
449.497 258.579 li
450.72 257.067 li
452.088 255.481 li
453.241 253.971 li
454.608 252.747 li
455.833 251.954 li
456.985 251.595 li
458.064 251.738 li
459.073 251.954 li
459.936 252.458 li
460.8 253.106 li
461.448 253.61 li
462.312 254.114 li
462.959 254.475 li
463.464 256.202 li
.7647 0 .9412 0 cmyk
ef
463.464 256.202 mo
463.464 256.851 li
463.464 257.715 li
463.68 258.579 li
463.464 259.802 li
463.321 260.81 li
462.817 261.818 li
461.952 262.683 li
460.944 263.33 li
459.72 263.906 li
458.064 264.194 li
456.192 264.41 li
454.104 264.41 li
452.088 264.194 li
450.216 264.051 li
448.344 263.69 li
446.976 263.33 li
447.624 261.818 li
448.489 260.306 li
449.497 258.579 li
450.72 257.067 li
452.088 255.481 li
453.241 253.971 li
454.608 252.747 li
455.833 251.954 li
456.985 251.595 li
458.064 251.738 li
459.073 251.954 li
459.936 252.458 li
460.8 253.106 li
461.448 253.61 li
462.312 254.114 li
462.959 254.475 li
463.464 256.202 li
cp
0 0 0 1 cmyk
s
459.216 244.898 mo
459.216 244.395 li
459.216 243.53 li
459.432 242.522 li
459.72 241.515 li
460.081 240.507 li
460.8 239.498 li
461.808 238.778 li
462.959 238.274 li
464.544 238.419 li
466.417 238.634 li
468.432 238.923 li
470.52 239.498 li
472.536 240.002 li
474.409 240.507 li
476.136 241.011 li
477.648 241.515 li
476.64 242.883 li
475.272 244.25 li
473.76 245.618 li
472.032 246.986 li
470.304 248.138 li
468.648 249.218 li
466.92 250.082 li
465.409 250.587 li
464.184 250.729 li
463.321 250.587 li
462.456 250.226 li
461.808 249.507 li
461.088 248.714 li
460.44 247.851 li
459.936 246.986 li
459.216 246.267 li
459.216 244.898 li
.7647 0 .9412 0 cmyk
ef
459.216 244.898 mo
459.216 244.395 li
459.216 243.53 li
459.432 242.522 li
459.72 241.515 li
460.081 240.507 li
460.8 239.498 li
461.808 238.778 li
462.959 238.274 li
464.544 238.419 li
466.417 238.634 li
468.432 238.923 li
470.52 239.498 li
472.536 240.002 li
474.409 240.507 li
476.136 241.011 li
477.648 241.515 li
476.64 242.883 li
475.272 244.25 li
473.76 245.618 li
472.032 246.986 li
470.304 248.138 li
468.648 249.218 li
466.92 250.082 li
465.409 250.587 li
464.184 250.729 li
463.321 250.587 li
462.456 250.226 li
461.808 249.507 li
461.088 248.714 li
460.44 247.851 li
459.936 246.986 li
459.216 246.267 li
459.216 244.898 li
cp
0 0 0 1 cmyk
s
457.344 246.267 mo
457.344 247.13 li
457.344 248.138 li
457.2 249.218 li
456.84 250.37 li
456.48 251.595 li
455.833 252.603 li
454.825 253.467 li
453.6 253.971 li
452.233 253.826 li
450.36 253.61 li
448.489 253.322 li
446.616 252.747 li
444.528 252.242 li
442.657 251.595 li
441 251.091 li
439.632 250.587 li
440.784 249.002 li
442.153 247.49 li
443.737 246.122 li
445.249 244.755 li
446.976 243.747 li
448.632 242.738 li
450.216 242.019 li
451.728 241.515 li
452.952 241.37 li
453.745 241.659 li
454.464 242.019 li
455.112 242.522 li
455.833 243.242 li
456.336 243.891 li
456.84 244.395 li
457.344 244.898 li
457.344 246.267 li
.7647 0 .9412 0 cmyk
ef
457.344 246.267 mo
457.344 247.13 li
457.344 248.138 li
457.2 249.218 li
456.84 250.37 li
456.48 251.595 li
455.833 252.603 li
454.825 253.467 li
453.6 253.971 li
452.233 253.826 li
450.36 253.61 li
448.489 253.322 li
446.616 252.747 li
444.528 252.242 li
442.657 251.595 li
441 251.091 li
439.632 250.587 li
440.784 249.002 li
442.153 247.49 li
443.737 246.122 li
445.249 244.755 li
446.976 243.747 li
448.632 242.738 li
450.216 242.019 li
451.728 241.515 li
452.952 241.37 li
453.745 241.659 li
454.464 242.019 li
455.112 242.522 li
455.833 243.242 li
456.336 243.891 li
456.84 244.395 li
457.344 244.898 li
457.344 246.267 li
cp
0 0 0 1 cmyk
s
457.344 236.402 mo
457.704 235.538 li
458.064 234.53 li
458.569 233.666 li
459.073 232.803 li
459.577 231.938 li
460.224 231.29 li
461.088 230.931 li
462.168 230.786 li
463.825 230.931 li
465.552 231.29 li
467.424 231.938 li
469.153 232.803 li
471.024 233.666 li
472.68 234.53 li
474.264 235.538 li
475.632 236.402 li
474.264 237.267 li
472.68 238.13 li
471.024 239.138 li
469.296 240.146 li
467.569 241.155 li
465.913 241.874 li
464.329 242.379 li
462.959 242.522 li
461.592 242.522 li
460.584 242.019 li
459.72 241.37 li
459.073 240.507 li
458.569 239.498 li
458.064 238.634 li
457.704 237.914 li
457.344 237.41 li
457.344 236.402 li
.7647 0 .9412 0 cmyk
ef
457.344 236.402 mo
457.704 235.538 li
458.064 234.53 li
458.569 233.666 li
459.073 232.803 li
459.577 231.938 li
460.224 231.29 li
461.088 230.931 li
462.168 230.786 li
463.825 230.931 li
465.552 231.29 li
467.424 231.938 li
469.153 232.803 li
471.024 233.666 li
472.68 234.53 li
474.264 235.538 li
475.632 236.402 li
474.264 237.267 li
472.68 238.13 li
471.024 239.138 li
469.296 240.146 li
467.569 241.155 li
465.913 241.874 li
464.329 242.379 li
462.959 242.522 li
461.592 242.522 li
460.584 242.019 li
459.72 241.37 li
459.073 240.507 li
458.569 239.498 li
458.064 238.634 li
457.704 237.914 li
457.344 237.41 li
457.344 236.402 li
cp
0 0 0 1 cmyk
s
454.968 237.41 mo
454.968 238.13 li
454.608 238.923 li
454.249 240.002 li
453.96 240.866 li
453.241 241.659 li
452.375 242.379 li
451.368 242.883 li
450.216 243.026 li
448.489 242.883 li
446.76 242.379 li
444.888 241.659 li
443.016 240.866 li
441.288 239.786 li
439.632 238.923 li
438.264 237.914 li
437.04 237.051 li
438.264 236.042 li
439.632 235.034 li
441.144 234.026 li
443.016 232.946 li
444.745 232.154 li
446.401 231.435 li
447.985 230.931 li
449.352 230.786 li
450.72 230.931 li
451.872 231.435 li
452.737 232.154 li
453.456 232.803 li
453.96 233.811 li
454.249 234.675 li
454.608 235.538 li
454.968 236.402 li
454.968 237.41 li
.7647 0 .9412 0 cmyk
ef
454.968 237.41 mo
454.968 238.13 li
454.608 238.923 li
454.249 240.002 li
453.96 240.866 li
453.241 241.659 li
452.375 242.379 li
451.368 242.883 li
450.216 243.026 li
448.489 242.883 li
446.76 242.379 li
444.888 241.659 li
443.016 240.866 li
441.288 239.786 li
439.632 238.923 li
438.264 237.914 li
437.04 237.051 li
438.264 236.042 li
439.632 235.034 li
441.144 234.026 li
443.016 232.946 li
444.745 232.154 li
446.401 231.435 li
447.985 230.931 li
449.352 230.786 li
450.72 230.931 li
451.872 231.435 li
452.737 232.154 li
453.456 232.803 li
453.96 233.811 li
454.249 234.675 li
454.608 235.538 li
454.968 236.402 li
454.968 237.41 li
cp
0 0 0 1 cmyk
s
457.344 225.818 mo
457.704 225.099 li
458.064 224.307 li
458.569 223.226 li
459.073 222.435 li
459.577 221.715 li
460.224 221.067 li
461.088 220.851 li
462.168 221.067 li
463.825 221.211 li
465.552 221.715 li
467.28 222.578 li
469.153 223.442 li
470.808 224.595 li
472.536 225.963 li
473.905 227.187 li
475.128 228.555 li
473.76 229.059 li
472.176 229.923 li
470.52 230.57 li
468.648 231.29 li
466.56 231.795 li
464.544 232.299 li
462.672 232.442 li
460.944 232.299 li
460.081 232.299 li
459.216 231.938 li
458.569 231.435 li
458.208 230.427 li
457.704 229.563 li
457.56 228.339 li
457.344 227.546 li
457.344 226.683 li
457.344 225.818 li
.7647 0 .9412 0 cmyk
ef
457.344 225.818 mo
457.704 225.099 li
458.064 224.307 li
458.569 223.226 li
459.073 222.435 li
459.577 221.715 li
460.224 221.067 li
461.088 220.851 li
462.168 221.067 li
463.825 221.211 li
465.552 221.715 li
467.28 222.578 li
469.153 223.442 li
470.808 224.595 li
472.536 225.963 li
473.905 227.187 li
475.128 228.555 li
473.76 229.059 li
472.176 229.923 li
470.52 230.57 li
468.648 231.29 li
466.56 231.795 li
464.544 232.299 li
462.672 232.442 li
460.944 232.299 li
460.081 232.299 li
459.216 231.938 li
458.569 231.435 li
458.208 230.427 li
457.704 229.563 li
457.56 228.339 li
457.344 227.546 li
457.344 226.683 li
457.344 225.818 li
cp
0 0 0 1 cmyk
s
454.968 226.683 mo
454.608 227.546 li
454.104 228.339 li
453.6 229.202 li
453.096 230.067 li
452.233 230.786 li
451.368 231.29 li
450.504 231.65 li
449.352 231.435 li
447.985 231.29 li
446.256 230.786 li
444.528 230.067 li
442.657 229.059 li
440.784 227.834 li
439.128 226.683 li
437.76 225.458 li
436.68 224.091 li
437.905 223.587 li
439.417 222.938 li
441.144 222.219 li
443.016 221.57 li
444.888 221.067 li
446.76 220.49 li
448.489 220.202 li
450.216 219.986 li
451.368 220.202 li
452.375 220.706 li
453.241 221.354 li
453.96 222.219 li
454.249 223.226 li
454.608 224.091 li
454.968 225.099 li
454.968 225.818 li
454.968 226.683 li
.7647 0 .9412 0 cmyk
ef
454.968 226.683 mo
454.608 227.546 li
454.104 228.339 li
453.6 229.202 li
453.096 230.067 li
452.233 230.786 li
451.368 231.29 li
450.504 231.65 li
449.352 231.435 li
447.985 231.29 li
446.256 230.786 li
444.528 230.067 li
442.657 229.059 li
440.784 227.834 li
439.128 226.683 li
437.76 225.458 li
436.68 224.091 li
437.905 223.587 li
439.417 222.938 li
441.144 222.219 li
443.016 221.57 li
444.888 221.067 li
446.76 220.49 li
448.489 220.202 li
450.216 219.986 li
451.368 220.202 li
452.375 220.706 li
453.241 221.354 li
453.96 222.219 li
454.249 223.226 li
454.608 224.091 li
454.968 225.099 li
454.968 225.818 li
454.968 226.683 li
cp
0 0 0 1 cmyk
s
460.944 205.299 mo
461.448 204.795 li
461.952 204.146 li
462.456 203.427 li
463.176 202.778 li
463.825 202.418 li
464.688 202.274 li
465.552 202.418 li
466.776 203.138 li
468.288 203.642 li
470.016 204.507 li
471.528 205.658 li
473.04 207.026 li
474.409 208.61 li
475.632 210.122 li
476.784 211.49 li
477.648 212.858 li
475.993 213.362 li
474.048 213.866 li
472.032 214.226 li
470.016 214.37 li
467.928 214.515 li
466.056 214.37 li
464.329 214.226 li
462.959 213.723 li
461.808 213.003 li
461.088 212.138 li
460.584 211.274 li
460.44 210.482 li
460.44 209.402 li
460.44 208.61 li
460.584 207.891 li
460.584 207.242 li
460.944 205.299 li
.7647 0 .9412 0 cmyk
ef
460.944 205.299 mo
461.448 204.795 li
461.952 204.146 li
462.456 203.427 li
463.176 202.778 li
463.825 202.418 li
464.688 202.274 li
465.552 202.418 li
466.776 203.138 li
468.288 203.642 li
470.016 204.507 li
471.528 205.658 li
473.04 207.026 li
474.409 208.61 li
475.632 210.122 li
476.784 211.49 li
477.648 212.858 li
475.993 213.362 li
474.048 213.866 li
472.032 214.226 li
470.016 214.37 li
467.928 214.515 li
466.056 214.37 li
464.329 214.226 li
462.959 213.723 li
461.808 213.003 li
461.088 212.138 li
460.584 211.274 li
460.44 210.482 li
460.44 209.402 li
460.44 208.61 li
460.584 207.891 li
460.584 207.242 li
460.944 205.299 li
cp
0 0 0 1 cmyk
s
458.208 206.379 mo
457.848 206.666 li
457.344 207.387 li
456.696 207.891 li
455.833 208.61 li
454.968 208.898 li
453.96 209.259 li
452.952 209.114 li
451.728 208.755 li
450.36 208.034 li
448.993 206.883 li
447.48 205.658 li
445.896 204.146 li
444.384 202.634 li
443.161 201.051 li
442.008 199.683 li
441.288 198.314 li
442.872 198.026 li
444.745 197.666 li
446.76 197.45 li
448.848 197.307 li
450.864 197.307 li
452.737 197.45 li
454.464 197.811 li
455.833 198.314 li
456.84 198.818 li
457.704 199.538 li
458.208 200.402 li
458.352 201.267 li
458.569 202.274 li
458.712 203.282 li
458.856 204.146 li
459.216 204.795 li
458.208 206.379 li
.7647 0 .9412 0 cmyk
ef
458.208 206.379 mo
457.848 206.666 li
457.344 207.387 li
456.696 207.891 li
455.833 208.61 li
454.968 208.898 li
453.96 209.259 li
452.952 209.114 li
451.728 208.755 li
450.36 208.034 li
448.993 206.883 li
447.48 205.658 li
445.896 204.146 li
444.384 202.634 li
443.161 201.051 li
442.008 199.683 li
441.288 198.314 li
442.872 198.026 li
444.745 197.666 li
446.76 197.45 li
448.848 197.307 li
450.864 197.307 li
452.737 197.45 li
454.464 197.811 li
455.833 198.314 li
456.84 198.818 li
457.704 199.538 li
458.208 200.402 li
458.352 201.267 li
458.569 202.274 li
458.712 203.282 li
458.856 204.146 li
459.216 204.795 li
458.208 206.379 li
cp
0 0 0 1 cmyk
s
459.216 216.242 mo
459.432 215.738 li
459.72 215.234 li
460.224 214.515 li
460.944 213.866 li
461.808 213.362 li
462.672 212.858 li
463.464 212.642 li
464.329 212.858 li
465.696 213.507 li
467.424 214.729 li
469.153 215.883 li
470.808 217.467 li
472.392 218.979 li
473.76 220.49 li
474.913 221.858 li
475.632 223.226 li
474.048 223.587 li
472.392 223.946 li
470.304 224.091 li
468.288 224.45 li
466.056 224.45 li
464.184 224.45 li
462.456 224.45 li
460.944 224.091 li
460.081 223.587 li
459.432 222.938 li
458.856 222.074 li
458.569 221.211 li
458.352 220.202 li
458.208 219.122 li
458.208 218.33 li
458.208 217.61 li
459.216 216.242 li
.7647 0 .9412 0 cmyk
ef
459.216 216.242 mo
459.432 215.738 li
459.72 215.234 li
460.224 214.515 li
460.944 213.866 li
461.808 213.362 li
462.672 212.858 li
463.464 212.642 li
464.329 212.858 li
465.696 213.507 li
467.424 214.729 li
469.153 215.883 li
470.808 217.467 li
472.392 218.979 li
473.76 220.49 li
474.913 221.858 li
475.632 223.226 li
474.048 223.587 li
472.392 223.946 li
470.304 224.091 li
468.288 224.45 li
466.056 224.45 li
464.184 224.45 li
462.456 224.45 li
460.944 224.091 li
460.081 223.587 li
459.432 222.938 li
458.856 222.074 li
458.569 221.211 li
458.352 220.202 li
458.208 219.122 li
458.208 218.33 li
458.208 217.61 li
459.216 216.242 li
cp
0 0 0 1 cmyk
s
455.833 216.603 mo
455.472 217.251 li
454.968 218.114 li
454.249 218.979 li
453.6 219.698 li
452.737 220.202 li
451.872 220.49 li
451.008 220.49 li
450.216 219.986 li
448.632 219.482 li
446.976 218.618 li
445.249 217.61 li
443.52 216.242 li
442.153 214.729 li
440.784 213.219 li
439.632 211.851 li
438.913 210.482 li
440.424 209.906 li
442.368 209.402 li
444.241 209.259 li
446.112 209.114 li
448.128 209.114 li
450 209.114 li
451.872 209.259 li
453.6 209.618 li
454.825 210.122 li
455.472 210.771 li
455.976 211.49 li
456.192 212.354 li
456.192 213.362 li
455.976 214.011 li
455.833 214.729 li
455.833 215.234 li
455.833 216.603 li
.7647 0 .9412 0 cmyk
ef
455.833 216.603 mo
455.472 217.251 li
454.968 218.114 li
454.249 218.979 li
453.6 219.698 li
452.737 220.202 li
451.872 220.49 li
451.008 220.49 li
450.216 219.986 li
448.632 219.482 li
446.976 218.618 li
445.249 217.61 li
443.52 216.242 li
442.153 214.729 li
440.784 213.219 li
439.632 211.851 li
438.913 210.482 li
440.424 209.906 li
442.368 209.402 li
444.241 209.259 li
446.112 209.114 li
448.128 209.114 li
450 209.114 li
451.872 209.259 li
453.6 209.618 li
454.825 210.122 li
455.472 210.771 li
455.976 211.49 li
456.192 212.354 li
456.192 213.362 li
455.976 214.011 li
455.833 214.729 li
455.833 215.234 li
455.833 216.603 li
cp
0 0 0 1 cmyk
s
567.577 230.786 mo
567.936 230.067 li
568.296 229.202 li
568.8 228.339 li
569.304 227.546 li
570.024 226.826 li
570.816 226.322 li
571.896 225.963 li
573.264 225.818 li
574.632 225.963 li
576.144 226.467 li
578.016 227.187 li
579.745 228.194 li
581.616 229.202 li
583.272 230.282 li
584.64 231.29 li
585.72 232.299 li
584.352 233.162 li
582.768 234.026 li
581.256 234.891 li
579.384 235.683 li
577.656 236.402 li
575.784 236.906 li
574.272 237.267 li
572.76 237.41 li
571.392 237.267 li
570.168 236.906 li
569.448 236.259 li
568.944 235.538 li
568.44 234.675 li
568.152 233.811 li
567.936 232.946 li
567.577 232.299 li
567.577 230.786 li
.7647 0 .9412 0 cmyk
ef
567.577 230.786 mo
567.936 230.067 li
568.296 229.202 li
568.8 228.339 li
569.304 227.546 li
570.024 226.826 li
570.816 226.322 li
571.896 225.963 li
573.264 225.818 li
574.632 225.963 li
576.144 226.467 li
578.016 227.187 li
579.745 228.194 li
581.616 229.202 li
583.272 230.282 li
584.64 231.29 li
585.72 232.299 li
584.352 233.162 li
582.768 234.026 li
581.256 234.891 li
579.384 235.683 li
577.656 236.402 li
575.784 236.906 li
574.272 237.267 li
572.76 237.41 li
571.392 237.267 li
570.168 236.906 li
569.448 236.259 li
568.944 235.538 li
568.44 234.675 li
568.152 233.811 li
567.936 232.946 li
567.577 232.299 li
567.577 230.786 li
cp
0 0 0 1 cmyk
s
565.056 231.435 mo
565.056 232.442 li
564.84 233.522 li
564.552 234.314 li
564.048 235.179 li
563.329 236.042 li
562.464 236.546 li
561.457 236.906 li
560.232 237.051 li
558.936 236.906 li
557.208 236.402 li
555.121 235.683 li
553.249 234.675 li
551.232 233.666 li
549.504 232.442 li
548.136 231.074 li
547.272 229.923 li
548.64 229.202 li
550.224 228.555 li
551.88 227.834 li
553.752 227.042 li
555.625 226.322 li
557.352 225.675 li
558.936 225.314 li
560.232 225.099 li
562.68 225.818 li
564.192 227.187 li
564.84 228.698 li
565.056 229.923 li
565.056 231.435 li
.7647 0 .9412 0 cmyk
ef
565.056 231.435 mo
565.056 232.442 li
564.84 233.522 li
564.552 234.314 li
564.048 235.179 li
563.329 236.042 li
562.464 236.546 li
561.457 236.906 li
560.232 237.051 li
558.936 236.906 li
557.208 236.402 li
555.121 235.683 li
553.249 234.675 li
551.232 233.666 li
549.504 232.442 li
548.136 231.074 li
547.272 229.923 li
548.64 229.202 li
550.224 228.555 li
551.88 227.834 li
553.752 227.042 li
555.625 226.322 li
557.352 225.675 li
558.936 225.314 li
560.232 225.099 li
562.68 225.818 li
564.192 227.187 li
564.84 228.698 li
565.056 229.923 li
565.056 231.435 li
cp
0 0 0 1 cmyk
s
561.312 250.587 mo
561.6 249.866 li
561.96 249.002 li
562.68 248.354 li
563.329 247.634 li
564.192 247.13 li
565.201 246.986 li
566.424 246.771 li
567.577 247.13 li
568.8 247.851 li
570.312 249.002 li
571.68 250.37 li
573.264 251.738 li
574.417 253.322 li
575.64 254.834 li
576.504 256.347 li
576.792 257.571 li
575.64 258.218 li
573.913 258.722 li
572.041 258.938 li
570.024 259.082 li
567.936 258.938 li
565.92 258.722 li
564.192 258.218 li
562.825 257.571 li
561.816 257.211 li
560.953 256.706 li
560.448 255.843 li
560.232 254.834 li
560.088 253.971 li
560.232 252.963 li
560.232 252.099 li
560.232 251.595 li
561.312 250.587 li
.7647 0 .9412 0 cmyk
ef
561.312 250.587 mo
561.6 249.866 li
561.96 249.002 li
562.68 248.354 li
563.329 247.634 li
564.192 247.13 li
565.201 246.986 li
566.424 246.771 li
567.577 247.13 li
568.8 247.851 li
570.312 249.002 li
571.68 250.37 li
573.264 251.738 li
574.417 253.322 li
575.64 254.834 li
576.504 256.347 li
576.792 257.571 li
575.64 258.218 li
573.913 258.722 li
572.041 258.938 li
570.024 259.082 li
567.936 258.938 li
565.92 258.722 li
564.192 258.218 li
562.825 257.571 li
561.816 257.211 li
560.953 256.706 li
560.448 255.843 li
560.232 254.834 li
560.088 253.971 li
560.232 252.963 li
560.232 252.099 li
560.232 251.595 li
561.312 250.587 li
cp
0 0 0 1 cmyk
s
558.216 250.587 mo
557.712 251.091 li
556.993 251.954 li
556.344 252.603 li
555.625 253.322 li
554.616 253.826 li
553.608 254.114 li
552.6 254.33 li
551.376 253.971 li
550.224 253.106 li
548.64 251.954 li
547.272 250.37 li
545.904 249.002 li
544.537 247.347 li
543.384 245.763 li
542.52 244.395 li
541.656 243.026 li
543.384 242.522 li
545.256 242.019 li
547.128 241.874 li
549.144 241.659 li
551.232 241.659 li
553.104 241.874 li
554.833 242.379 li
556.201 243.026 li
557.208 243.53 li
557.856 244.25 li
558.36 245.114 li
558.577 246.122 li
558.72 247.13 li
558.577 248.138 li
558.577 249.002 li
558.577 249.722 li
558.216 250.587 li
.7647 0 .9412 0 cmyk
ef
558.216 250.587 mo
557.712 251.091 li
556.993 251.954 li
556.344 252.603 li
555.625 253.322 li
554.616 253.826 li
553.608 254.114 li
552.6 254.33 li
551.376 253.971 li
550.224 253.106 li
548.64 251.954 li
547.272 250.37 li
545.904 249.002 li
544.537 247.347 li
543.384 245.763 li
542.52 244.395 li
541.656 243.026 li
543.384 242.522 li
545.256 242.019 li
547.128 241.874 li
549.144 241.659 li
551.232 241.659 li
553.104 241.874 li
554.833 242.379 li
556.201 243.026 li
557.208 243.53 li
557.856 244.25 li
558.36 245.114 li
558.577 246.122 li
558.72 247.13 li
558.577 248.138 li
558.577 249.002 li
558.577 249.722 li
558.216 250.587 li
cp
0 0 0 1 cmyk
s
515.232 175.274 mo
514.728 175.778 li
514.152 176.498 li
513.504 177.146 li
512.856 177.866 li
511.993 178.37 li
510.913 178.729 li
509.76 178.515 li
508.537 178.226 li
507.384 177.363 li
506.161 176.354 li
504.792 174.986 li
503.424 173.402 li
502.056 171.891 li
500.904 170.379 li
499.825 168.795 li
499.176 167.282 li
500.688 166.923 li
502.417 166.778 li
504.432 166.563 li
506.52 166.563 li
508.752 166.563 li
510.625 166.778 li
512.497 166.923 li
513.864 167.282 li
514.873 167.93 li
515.52 168.65 li
516.096 169.658 li
516.24 170.522 li
516.384 171.53 li
516.24 172.538 li
516.24 173.402 li
516.24 174.267 li
515.232 175.274 li
.7647 0 .9412 0 cmyk
ef
515.232 175.274 mo
514.728 175.778 li
514.152 176.498 li
513.504 177.146 li
512.856 177.866 li
511.993 178.37 li
510.913 178.729 li
509.76 178.515 li
508.537 178.226 li
507.384 177.363 li
506.161 176.354 li
504.792 174.986 li
503.424 173.402 li
502.056 171.891 li
500.904 170.379 li
499.825 168.795 li
499.176 167.282 li
500.688 166.923 li
502.417 166.778 li
504.432 166.563 li
506.52 166.563 li
508.752 166.563 li
510.625 166.778 li
512.497 166.923 li
513.864 167.282 li
514.873 167.93 li
515.52 168.65 li
516.096 169.658 li
516.24 170.522 li
516.384 171.53 li
516.24 172.538 li
516.24 173.402 li
516.24 174.267 li
515.232 175.274 li
cp
0 0 0 1 cmyk
s
564.192 240.866 mo
564.552 240.146 li
564.84 239.282 li
565.417 238.419 li
565.92 237.771 li
566.784 237.051 li
567.577 236.763 li
568.8 236.763 li
570.312 237.051 li
571.896 237.41 li
573.408 237.914 li
574.92 238.778 li
576.504 239.786 li
577.873 241.011 li
579.24 242.379 li
580.249 243.53 li
581.112 244.898 li
579.745 245.763 li
578.161 246.267 li
576.289 246.986 li
574.272 247.347 li
572.184 247.634 li
570.312 247.994 li
568.656 248.138 li
567.072 248.138 li
566.064 247.634 li
565.201 246.986 li
564.696 245.978 li
564.336 245.114 li
564.192 244.106 li
564.048 243.026 li
564.048 242.163 li
563.833 241.515 li
564.192 240.866 li
.7647 0 .9412 0 cmyk
ef
564.192 240.866 mo
564.552 240.146 li
564.84 239.282 li
565.417 238.419 li
565.92 237.771 li
566.784 237.051 li
567.577 236.763 li
568.8 236.763 li
570.312 237.051 li
571.896 237.41 li
573.408 237.914 li
574.92 238.778 li
576.504 239.786 li
577.873 241.011 li
579.24 242.379 li
580.249 243.53 li
581.112 244.898 li
579.745 245.763 li
578.161 246.267 li
576.289 246.986 li
574.272 247.347 li
572.184 247.634 li
570.312 247.994 li
568.656 248.138 li
567.072 248.138 li
566.064 247.634 li
565.201 246.986 li
564.696 245.978 li
564.336 245.114 li
564.192 244.106 li
564.048 243.026 li
564.048 242.163 li
563.833 241.515 li
564.192 240.866 li
cp
0 0 0 1 cmyk
s
561.312 240.866 mo
560.953 241.659 li
560.448 242.522 li
559.728 243.387 li
559.224 244.25 li
558.36 244.755 li
557.568 245.114 li
556.705 245.259 li
555.625 244.898 li
553.968 244.755 li
552.24 244.106 li
550.512 243.242 li
548.856 242.163 li
547.128 241.011 li
545.76 239.642 li
544.392 238.274 li
543.384 237.051 li
544.896 236.259 li
546.768 235.538 li
548.64 235.034 li
550.512 234.675 li
552.6 234.314 li
554.616 234.314 li
556.488 234.171 li
558.216 234.171 li
559.44 234.53 li
560.232 235.034 li
560.808 235.683 li
561.096 236.546 li
561.457 237.555 li
561.457 238.634 li
561.6 239.498 li
561.816 240.29 li
561.312 240.866 li
.7647 0 .9412 0 cmyk
ef
561.312 240.866 mo
560.953 241.659 li
560.448 242.522 li
559.728 243.387 li
559.224 244.25 li
558.36 244.755 li
557.568 245.114 li
556.705 245.259 li
555.625 244.898 li
553.968 244.755 li
552.24 244.106 li
550.512 243.242 li
548.856 242.163 li
547.128 241.011 li
545.76 239.642 li
544.392 238.274 li
543.384 237.051 li
544.896 236.259 li
546.768 235.538 li
548.64 235.034 li
550.512 234.675 li
552.6 234.314 li
554.616 234.314 li
556.488 234.171 li
558.216 234.171 li
559.44 234.53 li
560.232 235.034 li
560.808 235.683 li
561.096 236.546 li
561.457 237.555 li
561.457 238.634 li
561.6 239.498 li
561.816 240.29 li
561.312 240.866 li
cp
0 0 0 1 cmyk
s
553.752 258.579 mo
552.96 259.082 li
551.88 259.442 li
551.016 259.946 li
550.008 260.306 li
549.144 260.595 li
547.993 260.81 li
546.984 260.595 li
545.76 260.091 li
544.537 259.082 li
543.384 257.715 li
542.161 256.202 li
541.152 254.475 li
540.289 252.747 li
539.424 251.091 li
538.92 249.507 li
538.417 248.138 li
540.144 247.851 li
541.8 247.851 li
543.745 247.851 li
545.76 247.994 li
547.632 248.498 li
549.36 249.002 li
551.016 249.722 li
552.384 250.587 li
553.608 251.234 li
554.329 251.954 li
554.472 252.747 li
554.472 253.61 li
554.329 254.69 li
554.112 255.481 li
553.968 256.347 li
553.752 257.211 li
553.752 258.579 li
.7647 0 .9412 0 cmyk
ef
553.752 258.579 mo
552.96 259.082 li
551.88 259.442 li
551.016 259.946 li
550.008 260.306 li
549.144 260.595 li
547.993 260.81 li
546.984 260.595 li
545.76 260.091 li
544.537 259.082 li
543.384 257.715 li
542.161 256.202 li
541.152 254.475 li
540.289 252.747 li
539.424 251.091 li
538.92 249.507 li
538.417 248.138 li
540.144 247.851 li
541.8 247.851 li
543.745 247.851 li
545.76 247.994 li
547.632 248.498 li
549.36 249.002 li
551.016 249.722 li
552.384 250.587 li
553.608 251.234 li
554.329 251.954 li
554.472 252.747 li
554.472 253.61 li
554.329 254.69 li
554.112 255.481 li
553.968 256.347 li
553.752 257.211 li
553.752 258.579 li
cp
0 0 0 1 cmyk
s
555.625 258.579 mo
556.201 258.075 li
556.993 257.571 li
557.856 257.067 li
558.72 256.563 li
559.728 256.202 li
560.808 256.202 li
561.816 256.563 li
562.825 257.211 li
564.048 257.931 li
565.417 259.082 li
566.568 260.595 li
567.792 262.179 li
568.8 264.051 li
569.808 265.778 li
570.312 267.435 li
570.672 269.019 li
569.161 269.019 li
567.432 268.802 li
565.417 268.659 li
563.329 268.515 li
561.457 268.155 li
559.584 267.794 li
558.216 267.29 li
556.993 266.571 li
555.84 265.923 li
554.976 265.059 li
554.472 264.194 li
554.472 263.187 li
554.616 262.179 li
554.833 261.313 li
555.336 260.595 li
555.625 260.091 li
555.625 258.579 li
.7647 0 .9412 0 cmyk
ef
555.625 258.579 mo
556.201 258.075 li
556.993 257.571 li
557.856 257.067 li
558.72 256.563 li
559.728 256.202 li
560.808 256.202 li
561.816 256.563 li
562.825 257.211 li
564.048 257.931 li
565.417 259.082 li
566.568 260.595 li
567.792 262.179 li
568.8 264.051 li
569.808 265.778 li
570.312 267.435 li
570.672 269.019 li
569.161 269.019 li
567.432 268.802 li
565.417 268.659 li
563.329 268.515 li
561.457 268.155 li
559.584 267.794 li
558.216 267.29 li
556.993 266.571 li
555.84 265.923 li
554.976 265.059 li
554.472 264.194 li
554.472 263.187 li
554.616 262.179 li
554.833 261.313 li
555.336 260.595 li
555.625 260.091 li
555.625 258.579 li
cp
0 0 0 1 cmyk
s
517.104 177.65 mo
517.104 178.37 li
517.249 179.234 li
517.464 180.099 li
517.464 181.106 li
517.249 182.259 li
516.888 183.122 li
516.24 183.986 li
515.232 184.706 li
513.864 185.354 li
511.993 185.858 li
510.121 186.219 li
507.888 186.578 li
505.8 186.723 li
503.784 186.723 li
502.056 186.723 li
500.688 186.578 li
501.408 184.851 li
502.417 183.122 li
503.28 181.467 li
504.432 179.595 li
505.656 178.011 li
506.88 176.498 li
508.249 175.274 li
509.544 174.267 li
510.408 173.763 li
511.272 173.763 li
512.136 173.906 li
513 174.267 li
513.864 174.986 li
514.728 175.49 li
515.376 176.138 li
516.24 176.498 li
517.104 177.65 li
.7647 0 .9412 0 cmyk
ef
517.104 177.65 mo
517.104 178.37 li
517.249 179.234 li
517.464 180.099 li
517.464 181.106 li
517.249 182.259 li
516.888 183.122 li
516.24 183.986 li
515.232 184.706 li
513.864 185.354 li
511.993 185.858 li
510.121 186.219 li
507.888 186.578 li
505.8 186.723 li
503.784 186.723 li
502.056 186.723 li
500.688 186.578 li
501.408 184.851 li
502.417 183.122 li
503.28 181.467 li
504.432 179.595 li
505.656 178.011 li
506.88 176.498 li
508.249 175.274 li
509.544 174.267 li
510.408 173.763 li
511.272 173.763 li
512.136 173.906 li
513 174.267 li
513.864 174.986 li
514.728 175.49 li
515.376 176.138 li
516.24 176.498 li
517.104 177.65 li
cp
0 0 0 1 cmyk
s
518.472 175.634 mo
517.752 175.49 li
517.104 175.274 li
516.096 175.131 li
515.232 174.771 li
514.369 174.267 li
513.648 173.402 li
513.144 172.395 li
513 171.026 li
512.856 169.515 li
512.856 167.786 li
513 165.914 li
513.504 164.042 li
514.152 162.171 li
515.016 160.299 li
516.096 158.715 li
517.104 157.202 li
518.256 158.427 li
519.48 159.795 li
520.705 161.451 li
521.712 163.179 li
522.72 165.051 li
523.584 166.778 li
524.088 168.29 li
524.232 169.658 li
524.448 170.883 li
524.232 172.034 li
523.728 172.898 li
523.224 173.618 li
522.36 174.122 li
521.497 174.627 li
520.705 175.131 li
519.984 175.634 li
518.472 175.634 li
.7647 0 .9412 0 cmyk
ef
518.472 175.634 mo
517.752 175.49 li
517.104 175.274 li
516.096 175.131 li
515.232 174.771 li
514.369 174.267 li
513.648 173.402 li
513.144 172.395 li
513 171.026 li
512.856 169.515 li
512.856 167.786 li
513 165.914 li
513.504 164.042 li
514.152 162.171 li
515.016 160.299 li
516.096 158.715 li
517.104 157.202 li
518.256 158.427 li
519.48 159.795 li
520.705 161.451 li
521.712 163.179 li
522.72 165.051 li
523.584 166.778 li
524.088 168.29 li
524.232 169.658 li
524.448 170.883 li
524.232 172.034 li
523.728 172.898 li
523.224 173.618 li
522.36 174.122 li
521.497 174.627 li
520.705 175.131 li
519.984 175.634 li
518.472 175.634 li
cp
0 0 0 1 cmyk
s
522.72 179.883 mo
523.369 180.387 li
524.088 180.963 li
524.736 181.61 li
525.457 182.475 li
525.816 183.339 li
525.96 184.347 li
525.816 185.354 li
525.096 186.578 li
524.592 187.729 li
523.584 189.099 li
522.072 190.467 li
520.488 191.69 li
518.76 192.843 li
516.888 193.706 li
515.376 194.57 li
513.864 195.074 li
513.504 193.923 li
513.36 192.194 li
513.36 190.179 li
513.36 188.091 li
513.36 186.074 li
513.504 183.986 li
513.864 182.259 li
514.152 180.963 li
515.016 179.883 li
516.096 179.234 li
517.104 178.875 li
518.112 178.729 li
519.121 178.729 li
520.128 178.875 li
520.993 179.019 li
521.856 179.019 li
522.72 179.883 li
.7647 0 .9412 0 cmyk
ef
522.72 179.883 mo
523.369 180.387 li
524.088 180.963 li
524.736 181.61 li
525.457 182.475 li
525.816 183.339 li
525.96 184.347 li
525.816 185.354 li
525.096 186.578 li
524.592 187.729 li
523.584 189.099 li
522.072 190.467 li
520.488 191.69 li
518.76 192.843 li
516.888 193.706 li
515.376 194.57 li
513.864 195.074 li
513.504 193.923 li
513.36 192.194 li
513.36 190.179 li
513.36 188.091 li
513.36 186.074 li
513.504 183.986 li
513.864 182.259 li
514.152 180.963 li
515.016 179.883 li
516.096 179.234 li
517.104 178.875 li
518.112 178.729 li
519.121 178.729 li
520.128 178.875 li
520.993 179.019 li
521.856 179.019 li
522.72 179.883 li
cp
0 0 0 1 cmyk
s
522.72 176.498 mo
522.36 176.138 li
521.712 175.49 li
521.208 174.771 li
520.488 173.763 li
520.128 172.898 li
519.984 172.034 li
520.128 171.026 li
520.848 170.162 li
521.712 168.795 li
522.864 167.282 li
524.232 165.914 li
525.816 164.546 li
527.329 163.322 li
529.056 162.171 li
530.568 161.307 li
532.081 160.803 li
532.296 162.314 li
532.44 164.187 li
532.44 166.274 li
532.296 168.434 li
532.081 170.522 li
531.577 172.395 li
531.072 174.267 li
530.424 175.634 li
529.705 176.642 li
529.056 177.363 li
528.192 177.866 li
527.329 177.866 li
526.464 177.866 li
525.6 177.866 li
524.736 177.65 li
524.232 177.65 li
522.72 176.498 li
.7647 0 .9412 0 cmyk
ef
522.72 176.498 mo
522.36 176.138 li
521.712 175.49 li
521.208 174.771 li
520.488 173.763 li
520.128 172.898 li
519.984 172.034 li
520.128 171.026 li
520.848 170.162 li
521.712 168.795 li
522.864 167.282 li
524.232 165.914 li
525.816 164.546 li
527.329 163.322 li
529.056 162.171 li
530.568 161.307 li
532.081 160.803 li
532.296 162.314 li
532.44 164.187 li
532.44 166.274 li
532.296 168.434 li
532.081 170.522 li
531.577 172.395 li
531.072 174.267 li
530.424 175.634 li
529.705 176.642 li
529.056 177.363 li
528.192 177.866 li
527.329 177.866 li
526.464 177.866 li
525.6 177.866 li
524.736 177.65 li
524.232 177.65 li
522.72 176.498 li
cp
0 0 0 1 cmyk
s
532.584 183.339 mo
533.161 183.627 li
533.448 184.202 li
533.953 184.851 li
534.528 185.715 li
534.672 186.723 li
534.672 187.729 li
534.312 188.811 li
533.665 189.818 li
532.8 190.971 li
531.577 192.051 li
530.064 193.202 li
528.336 194.211 li
526.68 195.074 li
524.953 195.795 li
523.224 196.299 li
521.856 196.442 li
521.712 195.074 li
521.497 193.563 li
521.712 191.69 li
522.072 189.818 li
522.577 188.091 li
523.081 186.219 li
523.728 184.706 li
524.232 183.339 li
524.953 182.259 li
525.6 181.61 li
526.68 181.106 li
527.472 180.963 li
528.552 181.106 li
529.56 181.106 li
530.424 181.251 li
531.289 181.251 li
532.584 183.339 li
.7647 0 .9412 0 cmyk
ef
532.584 183.339 mo
533.161 183.627 li
533.448 184.202 li
533.953 184.851 li
534.528 185.715 li
534.672 186.723 li
534.672 187.729 li
534.312 188.811 li
533.665 189.818 li
532.8 190.971 li
531.577 192.051 li
530.064 193.202 li
528.336 194.211 li
526.68 195.074 li
524.953 195.795 li
523.224 196.299 li
521.856 196.442 li
521.712 195.074 li
521.497 193.563 li
521.712 191.69 li
522.072 189.818 li
522.577 188.091 li
523.081 186.219 li
523.728 184.706 li
524.232 183.339 li
524.953 182.259 li
525.6 181.61 li
526.68 181.106 li
527.472 180.963 li
528.552 181.106 li
529.56 181.106 li
530.424 181.251 li
531.289 181.251 li
532.584 183.339 li
cp
0 0 0 1 cmyk
s
532.584 179.883 mo
532.296 179.234 li
531.936 178.515 li
531.289 177.65 li
530.928 176.642 li
530.568 175.778 li
530.424 174.627 li
530.568 173.618 li
531.289 172.395 li
532.296 171.53 li
533.665 170.522 li
535.32 169.515 li
537.048 168.65 li
538.776 167.786 li
540.504 167.138 li
542.016 166.563 li
543.384 166.419 li
543.528 167.786 li
543.528 169.515 li
543.528 171.171 li
543.384 173.042 li
543.024 174.986 li
542.52 176.859 li
541.8 178.515 li
541.152 179.883 li
540.504 180.963 li
539.424 181.61 li
538.56 181.755 li
537.552 181.755 li
536.544 181.61 li
535.537 181.467 li
534.528 181.106 li
533.665 180.963 li
532.584 179.883 li
.7647 0 .9412 0 cmyk
ef
532.584 179.883 mo
532.296 179.234 li
531.936 178.515 li
531.289 177.65 li
530.928 176.642 li
530.568 175.778 li
530.424 174.627 li
530.568 173.618 li
531.289 172.395 li
532.296 171.53 li
533.665 170.522 li
535.32 169.515 li
537.048 168.65 li
538.776 167.786 li
540.504 167.138 li
542.016 166.563 li
543.384 166.419 li
543.528 167.786 li
543.528 169.515 li
543.528 171.171 li
543.384 173.042 li
543.024 174.986 li
542.52 176.859 li
541.8 178.515 li
541.152 179.883 li
540.504 180.963 li
539.424 181.61 li
538.56 181.755 li
537.552 181.755 li
536.544 181.61 li
535.537 181.467 li
534.528 181.106 li
533.665 180.963 li
532.584 179.883 li
cp
0 0 0 1 cmyk
s
541.152 187.946 mo
541.512 188.595 li
541.8 189.458 li
542.161 190.322 li
542.52 191.187 li
542.665 192.194 li
542.665 193.059 li
542.376 194.067 li
541.656 195.074 li
540.648 196.082 li
539.136 197.162 li
537.552 198.171 li
535.896 199.179 li
533.953 200.187 li
532.081 200.906 li
530.424 201.41 li
528.84 201.555 li
528.84 199.898 li
529.201 198.171 li
529.56 196.299 li
529.92 194.427 li
530.424 192.555 li
531.072 190.826 li
531.792 189.314 li
532.584 187.946 li
533.448 186.866 li
534.312 186.362 li
535.32 186.074 li
536.4 186.074 li
537.552 186.219 li
538.417 186.578 li
539.424 186.866 li
540.144 187.082 li
541.152 187.946 li
.7647 0 .9412 0 cmyk
ef
541.152 187.946 mo
541.512 188.595 li
541.8 189.458 li
542.161 190.322 li
542.52 191.187 li
542.665 192.194 li
542.665 193.059 li
542.376 194.067 li
541.656 195.074 li
540.648 196.082 li
539.136 197.162 li
537.552 198.171 li
535.896 199.179 li
533.953 200.187 li
532.081 200.906 li
530.424 201.41 li
528.84 201.555 li
528.84 199.898 li
529.201 198.171 li
529.56 196.299 li
529.92 194.427 li
530.424 192.555 li
531.072 190.826 li
531.792 189.314 li
532.584 187.946 li
533.448 186.866 li
534.312 186.362 li
535.32 186.074 li
536.4 186.074 li
537.552 186.219 li
538.417 186.578 li
539.424 186.866 li
540.144 187.082 li
541.152 187.946 li
cp
0 0 0 1 cmyk
s
541.152 184.706 mo
540.648 184.347 li
540.289 183.627 li
539.784 182.979 li
539.424 182.114 li
539.136 181.251 li
539.136 180.242 li
539.424 179.234 li
540.144 178.226 li
541.152 177.146 li
542.52 175.994 li
544.249 174.986 li
545.904 173.906 li
547.776 172.898 li
549.72 172.25 li
551.376 171.53 li
552.96 171.026 li
552.96 172.755 li
552.6 174.627 li
552.24 176.642 li
551.88 178.515 li
551.232 180.387 li
550.728 182.114 li
549.864 183.627 li
549 184.706 li
548.352 186.074 li
547.488 186.723 li
546.408 187.082 li
545.4 187.226 li
544.537 187.082 li
543.745 186.866 li
543.024 186.723 li
542.52 186.578 li
541.152 184.706 li
.7647 0 .9412 0 cmyk
ef
541.152 184.706 mo
540.648 184.347 li
540.289 183.627 li
539.784 182.979 li
539.424 182.114 li
539.136 181.251 li
539.136 180.242 li
539.424 179.234 li
540.144 178.226 li
541.152 177.146 li
542.52 175.994 li
544.249 174.986 li
545.904 173.906 li
547.776 172.898 li
549.72 172.25 li
551.376 171.53 li
552.96 171.026 li
552.96 172.755 li
552.6 174.627 li
552.24 176.642 li
551.88 178.515 li
551.232 180.387 li
550.728 182.114 li
549.864 183.627 li
549 184.706 li
548.352 186.074 li
547.488 186.723 li
546.408 187.082 li
545.4 187.226 li
544.537 187.082 li
543.745 186.866 li
543.024 186.723 li
542.52 186.578 li
541.152 184.706 li
cp
0 0 0 1 cmyk
s
548.136 193.202 mo
548.352 193.923 li
548.497 194.931 li
548.64 195.795 li
549 196.803 li
549 197.811 li
548.856 198.818 li
548.352 199.898 li
547.272 200.69 li
546.264 201.555 li
544.752 202.418 li
543.024 203.282 li
541.152 204.003 li
539.136 204.507 li
537.192 205.011 li
535.32 205.154 li
533.665 205.299 li
533.953 203.786 li
534.528 202.059 li
535.176 200.402 li
536.041 198.53 li
536.904 196.803 li
537.913 195.074 li
538.92 193.706 li
540.144 192.698 li
541.008 191.834 li
542.016 191.475 li
543.024 191.33 li
544.032 191.475 li
544.896 191.834 li
545.616 192.194 li
546.264 192.555 li
546.768 192.698 li
548.136 193.202 li
.7647 0 .9412 0 cmyk
ef
548.136 193.202 mo
548.352 193.923 li
548.497 194.931 li
548.64 195.795 li
549 196.803 li
549 197.811 li
548.856 198.818 li
548.352 199.898 li
547.272 200.69 li
546.264 201.555 li
544.752 202.418 li
543.024 203.282 li
541.152 204.003 li
539.136 204.507 li
537.192 205.011 li
535.32 205.154 li
533.665 205.299 li
533.953 203.786 li
534.528 202.059 li
535.176 200.402 li
536.041 198.53 li
536.904 196.803 li
537.913 195.074 li
538.92 193.706 li
540.144 192.698 li
541.008 191.834 li
542.016 191.475 li
543.024 191.33 li
544.032 191.475 li
544.896 191.834 li
545.616 192.194 li
546.264 192.555 li
546.768 192.698 li
548.136 193.202 li
cp
0 0 0 1 cmyk
s
549 192.339 mo
548.64 191.33 li
548.136 190.322 li
547.776 189.314 li
547.488 188.091 li
547.272 187.082 li
547.488 185.858 li
547.993 184.851 li
549 183.843 li
550.008 182.979 li
551.592 182.114 li
553.249 181.467 li
555.121 180.963 li
557.208 180.387 li
559.224 180.099 li
561.096 179.883 li
562.825 179.883 li
562.32 181.467 li
561.816 183.122 li
561.096 184.994 li
560.448 186.866 li
559.584 188.595 li
558.72 190.322 li
557.856 191.69 li
556.993 192.698 li
556.201 193.418 li
555.121 193.706 li
554.112 193.706 li
553.104 193.563 li
552.096 193.202 li
551.232 192.843 li
550.369 192.555 li
549.72 192.339 li
549 192.339 li
.7647 0 .9412 0 cmyk
ef
549 192.339 mo
548.64 191.33 li
548.136 190.322 li
547.776 189.314 li
547.488 188.091 li
547.272 187.082 li
547.488 185.858 li
547.993 184.851 li
549 183.843 li
550.008 182.979 li
551.592 182.114 li
553.249 181.467 li
555.121 180.963 li
557.208 180.387 li
559.224 180.099 li
561.096 179.883 li
562.825 179.883 li
562.32 181.467 li
561.816 183.122 li
561.096 184.994 li
560.448 186.866 li
559.584 188.595 li
558.72 190.322 li
557.856 191.69 li
556.993 192.698 li
556.201 193.418 li
555.121 193.706 li
554.112 193.706 li
553.104 193.563 li
552.096 193.202 li
551.232 192.843 li
550.369 192.555 li
549.72 192.339 li
549 192.339 li
cp
0 0 0 1 cmyk
s
553.752 200.69 mo
553.752 201.41 li
553.968 202.274 li
554.112 203.138 li
554.329 204.29 li
554.329 205.299 li
553.968 206.379 li
553.464 207.387 li
552.384 208.034 li
551.016 208.61 li
549.144 209.114 li
547.272 209.402 li
545.4 209.763 li
543.384 210.122 li
541.512 210.267 li
539.784 210.482 li
538.417 210.482 li
538.92 208.755 li
539.424 207.026 li
540.289 205.154 li
541.152 203.282 li
542.161 201.771 li
543.384 200.187 li
544.537 199.034 li
545.76 198.314 li
546.984 197.666 li
547.993 197.307 li
549 197.307 li
550.008 197.666 li
550.873 198.026 li
551.592 198.53 li
552.24 199.179 li
552.96 199.683 li
553.752 200.69 li
.7647 0 .9412 0 cmyk
ef
553.752 200.69 mo
553.752 201.41 li
553.968 202.274 li
554.112 203.138 li
554.329 204.29 li
554.329 205.299 li
553.968 206.379 li
553.464 207.387 li
552.384 208.034 li
551.016 208.61 li
549.144 209.114 li
547.272 209.402 li
545.4 209.763 li
543.384 210.122 li
541.512 210.267 li
539.784 210.482 li
538.417 210.482 li
538.92 208.755 li
539.424 207.026 li
540.289 205.154 li
541.152 203.282 li
542.161 201.771 li
543.384 200.187 li
544.537 199.034 li
545.76 198.314 li
546.984 197.666 li
547.993 197.307 li
549 197.307 li
550.008 197.666 li
550.873 198.026 li
551.592 198.53 li
552.24 199.179 li
552.96 199.683 li
553.752 200.69 li
cp
0 0 0 1 cmyk
s
554.616 198.314 mo
554.616 197.45 li
554.472 196.658 li
554.329 195.578 li
554.112 194.57 li
554.329 193.563 li
554.616 192.698 li
555.121 191.834 li
556.201 191.187 li
557.352 190.683 li
558.936 190.322 li
560.953 189.818 li
562.968 189.458 li
565.201 189.314 li
567.289 189.099 li
569.161 188.954 li
570.672 188.954 li
570.168 190.467 li
569.304 192.051 li
568.296 193.706 li
567.072 195.29 li
565.92 196.946 li
564.84 198.314 li
563.688 199.683 li
562.825 200.69 li
561.6 201.41 li
560.448 201.555 li
559.44 201.41 li
558.577 201.051 li
557.712 200.69 li
556.848 200.187 li
556.201 199.898 li
555.625 199.683 li
554.616 198.314 li
.7647 0 .9412 0 cmyk
ef
554.616 198.314 mo
554.616 197.45 li
554.472 196.658 li
554.329 195.578 li
554.112 194.57 li
554.329 193.563 li
554.616 192.698 li
555.121 191.834 li
556.201 191.187 li
557.352 190.683 li
558.936 190.322 li
560.953 189.818 li
562.968 189.458 li
565.201 189.314 li
567.289 189.099 li
569.161 188.954 li
570.672 188.954 li
570.168 190.467 li
569.304 192.051 li
568.296 193.706 li
567.072 195.29 li
565.92 196.946 li
564.84 198.314 li
563.688 199.683 li
562.825 200.69 li
561.6 201.41 li
560.448 201.555 li
559.44 201.41 li
558.577 201.051 li
557.712 200.69 li
556.848 200.187 li
556.201 199.898 li
555.625 199.683 li
554.616 198.314 li
cp
0 0 0 1 cmyk
s
558.577 210.986 mo
558.577 211.851 li
558.577 212.642 li
558.36 213.723 li
558.216 214.515 li
557.856 215.595 li
557.352 216.458 li
556.705 217.106 li
555.625 217.61 li
553.968 217.826 li
552.096 217.971 li
550.008 217.971 li
547.993 217.826 li
545.904 217.467 li
544.032 217.106 li
542.52 216.747 li
541.152 216.242 li
541.8 214.875 li
542.88 213.362 li
544.032 211.851 li
545.616 210.267 li
547.128 208.898 li
548.64 207.747 li
550.008 206.883 li
551.376 206.379 li
552.6 206.019 li
553.608 206.019 li
554.616 206.522 li
555.625 207.026 li
556.344 207.747 li
556.993 208.61 li
557.712 209.114 li
558.216 209.618 li
558.577 210.986 li
.7647 0 .9412 0 cmyk
ef
558.577 210.986 mo
558.577 211.851 li
558.577 212.642 li
558.36 213.723 li
558.216 214.515 li
557.856 215.595 li
557.352 216.458 li
556.705 217.106 li
555.625 217.61 li
553.968 217.826 li
552.096 217.971 li
550.008 217.971 li
547.993 217.826 li
545.904 217.467 li
544.032 217.106 li
542.52 216.747 li
541.152 216.242 li
541.8 214.875 li
542.88 213.362 li
544.032 211.851 li
545.616 210.267 li
547.128 208.898 li
548.64 207.747 li
550.008 206.883 li
551.376 206.379 li
552.6 206.019 li
553.608 206.019 li
554.616 206.522 li
555.625 207.026 li
556.344 207.747 li
556.993 208.61 li
557.712 209.114 li
558.216 209.618 li
558.577 210.986 li
cp
0 0 0 1 cmyk
s
560.232 208.755 mo
560.232 208.034 li
560.232 207.242 li
560.232 206.379 li
560.448 205.299 li
560.808 204.507 li
561.457 203.786 li
562.464 203.282 li
563.833 203.138 li
565.201 202.634 li
566.928 202.418 li
568.656 202.418 li
570.528 202.634 li
572.4 202.923 li
574.056 203.282 li
575.64 203.642 li
576.792 204.003 li
576.144 205.299 li
575.28 206.666 li
574.056 208.251 li
572.76 209.763 li
571.392 211.131 li
570.024 212.354 li
568.44 213.219 li
567.072 213.723 li
565.92 214.011 li
564.84 214.011 li
563.833 213.723 li
562.968 213.219 li
562.32 212.498 li
561.457 211.851 li
560.953 211.131 li
560.232 210.482 li
560.232 208.755 li
.7647 0 .9412 0 cmyk
ef
560.232 208.755 mo
560.232 208.034 li
560.232 207.242 li
560.232 206.379 li
560.448 205.299 li
560.808 204.507 li
561.457 203.786 li
562.464 203.282 li
563.833 203.138 li
565.201 202.634 li
566.928 202.418 li
568.656 202.418 li
570.528 202.634 li
572.4 202.923 li
574.056 203.282 li
575.64 203.642 li
576.792 204.003 li
576.144 205.299 li
575.28 206.666 li
574.056 208.251 li
572.76 209.763 li
571.392 211.131 li
570.024 212.354 li
568.44 213.219 li
567.072 213.723 li
565.92 214.011 li
564.84 214.011 li
563.833 213.723 li
562.968 213.219 li
562.32 212.498 li
561.457 211.851 li
560.953 211.131 li
560.232 210.482 li
560.232 208.755 li
cp
0 0 0 1 cmyk
s
565.056 219.339 mo
565.056 218.618 li
565.201 217.826 li
565.56 216.747 li
565.92 215.883 li
566.568 215.091 li
567.289 214.37 li
568.296 213.866 li
569.448 213.723 li
571.032 213.866 li
572.76 214.226 li
574.632 214.515 li
576.504 215.234 li
578.376 215.883 li
580.032 216.747 li
581.4 217.61 li
582.625 218.475 li
581.616 219.482 li
580.249 220.49 li
578.665 221.715 li
577.008 222.938 li
575.28 223.946 li
573.552 224.811 li
572.041 225.458 li
570.672 225.818 li
569.448 225.675 li
568.296 225.314 li
567.289 224.811 li
566.568 224.091 li
565.92 223.442 li
565.417 222.578 li
565.201 221.715 li
565.056 221.067 li
565.056 219.339 li
.7647 0 .9412 0 cmyk
ef
565.056 219.339 mo
565.056 218.618 li
565.201 217.826 li
565.56 216.747 li
565.92 215.883 li
566.568 215.091 li
567.289 214.37 li
568.296 213.866 li
569.448 213.723 li
571.032 213.866 li
572.76 214.226 li
574.632 214.515 li
576.504 215.234 li
578.376 215.883 li
580.032 216.747 li
581.4 217.61 li
582.625 218.475 li
581.616 219.482 li
580.249 220.49 li
578.665 221.715 li
577.008 222.938 li
575.28 223.946 li
573.552 224.811 li
572.041 225.458 li
570.672 225.818 li
569.448 225.675 li
568.296 225.314 li
567.289 224.811 li
566.568 224.091 li
565.92 223.442 li
565.417 222.578 li
565.201 221.715 li
565.056 221.067 li
565.056 219.339 li
cp
0 0 0 1 cmyk
s
562.825 221.067 mo
562.464 221.858 li
562.176 222.723 li
561.816 223.587 li
561.457 224.595 li
560.953 225.314 li
560.232 225.963 li
559.44 226.467 li
558.216 226.683 li
556.488 226.467 li
554.616 226.179 li
552.6 225.818 li
550.728 225.099 li
548.856 224.45 li
546.984 223.587 li
545.4 222.723 li
544.032 221.858 li
545.4 220.706 li
546.984 219.339 li
548.64 218.33 li
550.512 217.106 li
552.384 216.242 li
554.112 215.379 li
555.625 214.875 li
556.993 214.37 li
558.216 214.515 li
559.081 214.875 li
560.088 215.595 li
560.808 216.242 li
561.457 216.963 li
561.96 217.826 li
562.464 218.618 li
562.825 219.339 li
562.825 221.067 li
.7647 0 .9412 0 cmyk
ef
562.825 221.067 mo
562.464 221.858 li
562.176 222.723 li
561.816 223.587 li
561.457 224.595 li
560.953 225.314 li
560.232 225.963 li
559.44 226.467 li
558.216 226.683 li
556.488 226.467 li
554.616 226.179 li
552.6 225.818 li
550.728 225.099 li
548.856 224.45 li
546.984 223.587 li
545.4 222.723 li
544.032 221.858 li
545.4 220.706 li
546.984 219.339 li
548.64 218.33 li
550.512 217.106 li
552.384 216.242 li
554.112 215.379 li
555.625 214.875 li
556.993 214.37 li
558.216 214.515 li
559.081 214.875 li
560.088 215.595 li
560.808 216.242 li
561.457 216.963 li
561.96 217.826 li
562.464 218.618 li
562.825 219.339 li
562.825 221.067 li
cp
0 0 0 1 cmyk
s
162.288 601.946 mo
149.976 583.154 li
116.568 580.778 li
142.488 571.419 li
131.904 554.354 li
157.68 565.803 li
184.464 556.083 li
175.896 573.795 li
203.256 586.395 li
170.28 584.234 li
162.288 601.946 li
(16 ) 0 2 Adobe_AGM_Gradient/Gd get exec
<<
/Start 0 
/End 1 
/Mid .5 
/NumSamples 76 
/CSA /1 
/Interpolation false
/NumComponents 4 /Ramp [
<
191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E4041
42434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465
>
<
353636373838393A3A3B3C3C3D3D3E3F3F4041414243434445454647474849494A4B4B4C4D4D4E4E
4F5050515252535454555656575858595A5A5B5C5C5D5E5E5F5F60616162636364656566
>
<
B2B2B2B3B3B3B4B4B4B4B5B5B5B5B6B6B6B6B7B7B7B7B8B8B8B8B9B9B9B9BABABABABBBBBBBBBCBC
BCBCBDBDBDBDBEBEBEBEBFBFBFBFC0C0C0C0C1C1C1C1C2C2C2C2C3C3C3C3C4C4C4C4C5C5
>
<
03040505060708090A0A0B0C0D0E0E0F1011121213141516171718191A1B1B1C1D1E1F1F20212223
24242526272828292A2B2C2C2D2E2F303131323334353536373839393A3B3C3D3E3E3F40
>
] 
/RenderCMYK null
/SpotColor false
>>
GD
Adobe_AGM_Gradient/Gb get exec
false 3 (16 ) 0 0 0 616.716 [-273 -553 93.3958 -46.1068 226.927 831.544 ] Gg
[-32767 0 0 1 0 0 ] Gc
[1 0 0 1 0 0 ] Gr
[32767 0 0 1 1 0 ] Gc
GB
378.144 75.2666 mo
366.552 57.0508 li
333.648 53.9541 li
358.56 44.8828 li
348.12 28.0342 li
373.536 39.2666 li
400.536 29.4023 li
392.329 47.1143 li
419.112 59.9302 li
387.216 57.5547 li
378.144 75.2666 li
Adobe_AGM_Gradient/Gb get exec
false 3 (16 ) 0 0 0 616.716 [-273 -553 92.2689 -45.5504 610.526 642.173 ] Gg
[-32767 0 0 1 0 0 ] Gc
[1 0 0 1 0 0 ] Gr
[32767 0 0 1 1 0 ] Gc
GB
623.088 48.1221 mo
610.776 29.4023 li
576.792 26.1626 li
602.784 17.5947 li
592.488 .674805 li
618.264 11.9785 li
644.76 1.89844 li
636.552 19.9707 li
664.056 32.6421 li
630.936 30.1943 li
623.088 48.1221 li
Adobe_AGM_Gradient/Gb get exec
false 3 (16 ) 0 0 0 616.716 [-273 -553 93.8013 -46.307 816.799 540.341 ] Gg
[-32767 0 0 1 0 0 ] Gc
[1 0 0 1 0 0 ] Gr
[32767 0 0 1 1 0 ] Gc
GB
833.833 104.282 mo
821.736 85.7061 li
788.76 82.9707 li
814.032 74.1143 li
802.8 57.5547 li
829.584 68.4268 li
855.72 59.5703 li
848.016 76.4902 li
875.304 89.0908 li
842.688 87.4341 li
833.833 104.282 li
Adobe_AGM_Gradient/Gb get exec
false 3 (16 ) 0 0 0 616.716 [-273 -553 92.9369 -45.8802 964.939 467.209 ] Gg
[-32767 0 0 1 0 0 ] Gc
[1 0 0 1 0 0 ] Gr
[32767 0 0 1 1 0 ] Gc
GB
954.36 228.555 mo
942.048 209.618 li
908.784 207.242 li
934.2 197.45 li
923.76 180.963 li
949.752 192.339 li
976.032 183.339 li
967.968 199.683 li
995.112 212.858 li
962.352 210.986 li
954.36 228.555 li
Adobe_AGM_Gradient/Gb get exec
false 3 (16 ) 0 0 0 616.716 [-273 -553 93.1064 -45.9639 1012.12 443.919 ] Gg
[-32767 0 0 1 0 0 ] Gc
[1 0 0 1 0 0 ] Gr
[32767 0 0 1 1 0 ] Gc
GB
954.36 384.219 mo
942.048 365.282 li
908.784 361.971 li
934.2 352.971 li
922.896 336.555 li
948.672 347.858 li
975.168 338.427 li
966.96 355.851 li
995.112 368.522 li
962.352 366.074 li
954.36 384.219 li
Adobe_AGM_Gradient/Gb get exec
false 3 (16 ) 0 0 0 616.716 [-273 -553 93.1351 -45.9781 950.327 474.422 ] Gg
[-32767 0 0 1 0 0 ] Gc
[1 0 0 1 0 0 ] Gr
[32767 0 0 1 1 0 ] Gc
GB
832.104 528.579 mo
819.648 510.146 li
786.24 508.131 li
811.8 498.051 li
801.432 481.131 li
827.352 493.227 li
852.768 483.003 li
845.64 500.787 li
872.928 513.747 li
840.024 511.658 li
832.104 528.579 li
Adobe_AGM_Gradient/Gb get exec
false 3 (16 ) 0 0 0 616.716 [-273 -553 93.3392 -46.0788 794.495 551.352 ] Gg
[-32767 0 0 1 0 0 ] Gc
[1 0 0 1 0 0 ] Gr
[32767 0 0 1 1 0 ] Gc
GB
617.472 631.683 mo
605.161 613.395 li
571.68 611.019 li
597.096 600.938 li
586.873 584.234 li
612.648 595.322 li
638.568 586.395 li
630.936 603.53 li
658.369 616.635 li
625.32 614.763 li
617.472 631.683 li
Adobe_AGM_Gradient/Gb get exec
false 3 (16 ) 0 0 0 616.716 [-273 -553 93.3392 -46.0788 581.054 656.721 ] Gg
[-32767 0 0 1 0 0 ] Gc
[1 0 0 1 0 0 ] Gr
[32767 0 0 1 1 0 ] Gc
GB
375.913 653.354 mo
364.176 635.066 li
330.192 632.331 li
356.184 622.755 li
345.6 605.69 li
371.161 616.995 li
397.944 607.778 li
389.952 624.986 li
416.88 637.946 li
384.84 636.435 li
375.913 653.354 li
Adobe_AGM_Gradient/Gb get exec
false 3 (16 ) 0 0 0 616.716 [-273 -553 93.4249 -46.1211 378.284 756.823 ] Gg
[-32767 0 0 1 0 0 ] Gc
[1 0 0 1 0 0 ] Gr
[32767 0 0 1 1 0 ] Gc
GB
45.5044 478.755 mo
33.0483 459.963 li
0 457.946 li
25.7041 448.371 li
15.3364 431.091 li
41.1123 443.043 li
66.8882 433.035 li
59.1841 450.891 li
86.688 462.698 li
53.5684 461.331 li
45.5044 478.755 li
Adobe_AGM_Gradient/Gb get exec
false 3 (16 ) 0 0 0 616.716 [-273 -553 93.4245 -46.1209 182.1 853.675 ] Gg
[-32767 0 0 1 0 0 ] Gc
[1 0 0 1 0 0 ] Gr
[32767 0 0 1 1 0 ] Gc
GB
45.5044 324.458 mo
33.0483 305.163 li
0 302.931 li
25.7041 293.571 li
15.3364 276.507 li
41.1123 287.954 li
66.8882 278.738 li
59.1841 296.81 li
86.688 308.618 li
53.5684 306.53 li
45.5044 324.458 li
Adobe_AGM_Gradient/Gb get exec
false 3 (16 ) 0 0 0 616.716 [-273 -553 93.5384 -46.1772 243.345 823.438 ] Gg
[-32767 0 0 1 0 0 ] Gc
[1 0 0 1 0 0 ] Gr
[32767 0 0 1 1 0 ] Gc
GB
167.04 180.963 mo
155.304 161.955 li
122.328 159.795 li
146.88 149.859 li
136.872 133.299 li
162.288 144.747 li
189.216 134.883 li
181.224 152.595 li
208.008 165.41 li
175.896 164.042 li
167.04 180.963 li
Adobe_AGM_Gradient/Gb get exec
false 3 (16 ) 0 0 0 616.716 [-273 -553 92.6141 -45.7209 398.66 746.764 ] Gg
[-32767 0 0 1 0 0 ] Gc
[1 0 0 1 0 0 ] Gr
[32767 0 0 1 1 0 ] Gc
GB
485.497 327.698 mo
487.368 329.57 li
489.6 332.163 li
491.976 335.547 li
494.712 339.65 li
497.665 344.259 li
500.544 349.371 li
503.64 354.843 li
506.88 360.459 li
509.904 366.579 li
513 372.555 li
516.096 378.747 li
518.76 384.867 li
521.352 390.698 li
523.728 396.459 li
525.816 401.787 li
527.472 406.755 li
521.497 408.411 li
515.736 410.499 li
509.76 412.515 li
503.784 414.891 li
497.808 417.267 li
491.688 419.858 li
485.712 422.451 li
479.52 424.827 li
473.401 427.203 li
467.28 429.435 li
461.088 431.451 li
454.968 433.322 li
448.848 434.906 li
442.512 436.274 li
436.392 437.066 li
430.056 437.427 li
427.968 432.314 li
425.592 427.347 li
423.216 422.234 li
420.84 417.267 li
418.249 412.371 li
415.728 407.259 li
413.136 402.291 li
410.616 397.179 li
408.168 392.211 li
405.648 387.099 li
403.272 382.131 li
401.04 377.019 li
398.952 371.906 li
396.936 366.795 li
395.208 361.467 li
393.696 356.354 li
395.424 354.482 li
396.936 352.971 li
398.304 351.747 li
399.817 350.883 li
401.401 350.091 li
403.272 349.515 li
405.144 349.011 li
407.375 348.507 li
409.896 348.146 li
412.776 347.643 li
416.088 346.995 li
419.833 346.274 li
424.224 345.267 li
429.192 344.114 li
435.024 342.747 li
441.288 340.875 li
447.768 338.787 li
453.456 336.771 li
458.208 334.898 li
462.456 333.026 li
466.056 331.442 li
469.153 329.931 li
471.672 328.563 li
473.905 327.555 li
475.776 326.69 li
477.288 326.187 li
478.872 325.683 li
480.024 325.467 li
481.392 325.683 li
482.616 325.971 li
483.985 326.834 li
485.497 327.698 li
.0941 .102 .2745 .00779998 cmyk
ef
485.497 327.698 mo
487.368 329.57 li
489.6 332.163 li
491.976 335.547 li
494.712 339.65 li
497.665 344.259 li
500.544 349.371 li
503.64 354.843 li
506.88 360.459 li
509.904 366.579 li
513 372.555 li
516.096 378.747 li
518.76 384.867 li
521.352 390.698 li
523.728 396.459 li
525.816 401.787 li
527.472 406.755 li
521.497 408.411 li
515.736 410.499 li
509.76 412.515 li
503.784 414.891 li
497.808 417.267 li
491.688 419.858 li
485.712 422.451 li
479.52 424.827 li
473.401 427.203 li
467.28 429.435 li
461.088 431.451 li
454.968 433.322 li
448.848 434.906 li
442.512 436.274 li
436.392 437.066 li
430.056 437.427 li
427.968 432.314 li
425.592 427.347 li
423.216 422.234 li
420.84 417.267 li
418.249 412.371 li
415.728 407.259 li
413.136 402.291 li
410.616 397.179 li
408.168 392.211 li
405.648 387.099 li
403.272 382.131 li
401.04 377.019 li
398.952 371.906 li
396.936 366.795 li
395.208 361.467 li
393.696 356.354 li
395.424 354.482 li
396.936 352.971 li
398.304 351.747 li
399.817 350.883 li
401.401 350.091 li
403.272 349.515 li
405.144 349.011 li
407.375 348.507 li
409.896 348.146 li
412.776 347.643 li
416.088 346.995 li
419.833 346.274 li
424.224 345.267 li
429.192 344.114 li
435.024 342.747 li
441.288 340.875 li
447.768 338.787 li
453.456 336.771 li
458.208 334.898 li
462.456 333.026 li
466.056 331.442 li
469.153 329.931 li
471.672 328.563 li
473.905 327.555 li
475.776 326.69 li
477.288 326.187 li
478.872 325.683 li
480.024 325.467 li
481.392 325.683 li
482.616 325.971 li
483.985 326.834 li
485.497 327.698 li
cp
.2 .1765 .3569 .0353 cmyk
s
546.768 433.035 mo
546.121 432.314 li
545.256 431.091 li
544.032 429.435 li
542.52 427.563 li
541.008 425.331 li
539.28 422.738 li
537.552 420.219 li
535.68 417.627 li
533.808 415.251 li
532.081 412.658 li
530.424 410.499 li
528.696 408.627 li
527.329 406.898 li
525.96 405.675 li
524.953 405.026 li
524.232 404.811 li
482.256 326.33 li
484.344 327.555 li
486.504 329.066 li
488.952 330.795 li
491.329 333.026 li
493.848 335.906 li
496.944 339.65 li
500.184 344.402 li
503.784 350.234 li
505.8 353.619 li
508.032 357.579 li
510.408 361.827 li
512.856 366.435 li
515.376 371.187 li
518.112 376.371 li
520.848 381.771 li
523.728 387.243 li
526.464 392.931 li
529.56 398.69 li
532.44 404.522 li
535.32 410.282 li
538.272 416.114 li
541.152 421.875 li
544.032 427.563 li
546.768 433.035 li
.3216 .2588 .4314 .098 cmyk
ef
.216 lw
546.768 433.035 mo
546.121 432.314 li
545.256 431.091 li
544.032 429.435 li
542.52 427.563 li
541.008 425.331 li
539.28 422.738 li
537.552 420.219 li
535.68 417.627 li
533.808 415.251 li
532.081 412.658 li
530.424 410.499 li
528.696 408.627 li
527.329 406.898 li
525.96 405.675 li
524.953 405.026 li
524.232 404.811 li
482.256 326.33 li
484.344 327.555 li
486.504 329.066 li
488.952 330.795 li
491.329 333.026 li
493.848 335.906 li
496.944 339.65 li
500.184 344.402 li
503.784 350.234 li
505.8 353.619 li
508.032 357.579 li
510.408 361.827 li
512.856 366.435 li
515.376 371.187 li
518.112 376.371 li
520.848 381.771 li
523.728 387.243 li
526.464 392.931 li
529.56 398.69 li
532.44 404.522 li
535.32 410.282 li
538.272 416.114 li
541.152 421.875 li
544.032 427.563 li
546.768 433.035 li
cp
.1059 .00779998 .8941 0 cmyk
s
434.808 437.787 mo
406.153 486.603 li
365.04 402.435 li
393.696 354.843 li
434.808 437.787 li
.3216 .2588 .4314 .098 cmyk
ef
547.272 435.411 mo
543.024 436.923 li
538.776 438.65 li
534.312 440.163 li
530.064 441.675 li
525.6 443.402 li
521.352 444.915 li
516.888 446.499 li
512.497 448.227 li
508.249 449.738 li
503.784 451.467 li
499.32 452.979 li
494.928 454.707 li
490.464 456.219 li
486 457.73 li
481.392 459.459 li
477 460.971 li
472.536 462.698 li
468.073 464.211 li
463.68 465.938 li
459.216 467.451 li
454.825 469.179 li
450.36 470.69 li
445.752 472.274 li
441.288 473.931 li
436.896 475.515 li
432.432 477.026 li
428.184 478.755 li
423.72 480.267 li
419.329 481.778 li
414.864 483.507 li
410.616 485.091 li
406.153 486.603 li
406.657 484.227 li
407.52 481.49 li
408.528 478.539 li
409.752 475.299 li
411.12 472.059 li
412.489 468.53 li
414.144 465.074 li
415.872 461.475 li
417.6 458.091 li
419.472 454.707 li
421.344 451.61 li
423.216 448.515 li
424.944 445.995 li
426.817 443.619 li
428.544 441.675 li
430.056 440.163 li
432.288 438.435 li
434.161 436.923 li
436.032 435.698 li
437.905 434.906 li
439.632 434.043 li
441.504 433.322 li
443.52 432.818 li
445.752 432.171 li
448.344 431.451 li
451.368 430.803 li
454.825 429.938 li
458.569 428.931 li
463.176 427.563 li
468.288 425.979 li
474.264 424.106 li
480.888 421.73 li
487.584 419.211 li
493.2 416.763 li
498.312 414.603 li
502.56 412.515 li
506.161 410.643 li
509.256 409.131 li
511.776 407.547 li
513.864 406.395 li
515.736 405.387 li
517.104 404.522 li
518.256 403.803 li
519.336 403.442 li
520.128 403.154 li
520.993 403.154 li
521.856 403.154 li
522.72 403.442 li
524.448 404.163 li
526.104 405.171 li
527.688 406.395 li
529.201 407.763 li
530.568 409.419 li
532.081 411.146 li
533.448 413.019 li
535.032 415.251 li
536.4 417.482 li
537.768 419.715 li
539.28 422.234 li
540.792 424.827 li
542.376 427.347 li
543.888 429.938 li
545.616 432.675 li
547.272 435.411 li
.2 .1765 .3569 .0353 cmyk
ef
2.0001 lw
547.272 435.411 mo
543.024 436.923 li
538.776 438.65 li
534.312 440.163 li
530.064 441.675 li
525.6 443.402 li
521.352 444.915 li
516.888 446.499 li
512.497 448.227 li
508.249 449.738 li
503.784 451.467 li
499.32 452.979 li
494.928 454.707 li
490.464 456.219 li
486 457.73 li
481.392 459.459 li
477 460.971 li
472.536 462.698 li
468.073 464.211 li
463.68 465.938 li
459.216 467.451 li
454.825 469.179 li
450.36 470.69 li
445.752 472.274 li
441.288 473.931 li
436.896 475.515 li
432.432 477.026 li
428.184 478.755 li
423.72 480.267 li
419.329 481.778 li
414.864 483.507 li
410.616 485.091 li
406.153 486.603 li
406.657 484.227 li
407.52 481.49 li
408.528 478.539 li
409.752 475.299 li
411.12 472.059 li
412.489 468.53 li
414.144 465.074 li
415.872 461.475 li
417.6 458.091 li
419.472 454.707 li
421.344 451.61 li
423.216 448.515 li
424.944 445.995 li
426.817 443.619 li
428.544 441.675 li
430.056 440.163 li
432.288 438.435 li
434.161 436.923 li
436.032 435.698 li
437.905 434.906 li
439.632 434.043 li
441.504 433.322 li
443.52 432.818 li
445.752 432.171 li
448.344 431.451 li
451.368 430.803 li
454.825 429.938 li
458.569 428.931 li
463.176 427.563 li
468.288 425.979 li
474.264 424.106 li
480.888 421.73 li
487.584 419.211 li
493.2 416.763 li
498.312 414.603 li
502.56 412.515 li
506.161 410.643 li
509.256 409.131 li
511.776 407.547 li
513.864 406.395 li
515.736 405.387 li
517.104 404.522 li
518.256 403.803 li
519.336 403.442 li
520.128 403.154 li
520.993 403.154 li
521.856 403.154 li
522.72 403.442 li
524.448 404.163 li
526.104 405.171 li
527.688 406.395 li
529.201 407.763 li
530.568 409.419 li
532.081 411.146 li
533.448 413.019 li
535.032 415.251 li
536.4 417.482 li
537.768 419.715 li
539.28 422.234 li
540.792 424.827 li
542.376 427.347 li
543.888 429.938 li
545.616 432.675 li
547.272 435.411 li
cp
.3059 .251 .4196 .0863 cmyk
s
333.497 382.698 mo
335.368 384.57 li
337.6 387.163 li
339.976 390.547 li
342.712 394.65 li
345.665 399.259 li
348.544 404.371 li
351.64 409.843 li
354.88 415.459 li
357.904 421.579 li
361 427.555 li
364.096 433.747 li
366.76 439.867 li
369.352 445.698 li
371.728 451.459 li
373.816 456.787 li
375.472 461.755 li
369.497 463.411 li
363.736 465.499 li
357.76 467.515 li
351.784 469.891 li
345.808 472.267 li
339.688 474.858 li
333.712 477.451 li
327.52 479.827 li
321.401 482.203 li
315.28 484.435 li
309.088 486.451 li
302.968 488.322 li
296.848 489.906 li
290.512 491.274 li
284.392 492.066 li
278.056 492.427 li
275.968 487.314 li
273.592 482.347 li
271.216 477.234 li
268.84 472.267 li
266.249 467.371 li
263.728 462.259 li
261.136 457.291 li
258.616 452.179 li
256.168 447.211 li
253.648 442.099 li
251.272 437.131 li
249.04 432.019 li
246.952 426.906 li
244.936 421.795 li
243.208 416.467 li
241.696 411.354 li
243.424 409.482 li
244.936 407.971 li
246.304 406.747 li
247.817 405.883 li
249.401 405.091 li
251.272 404.515 li
253.144 404.011 li
255.375 403.507 li
257.896 403.146 li
260.776 402.643 li
264.088 401.995 li
267.833 401.274 li
272.224 400.267 li
277.192 399.114 li
283.024 397.747 li
289.288 395.875 li
295.768 393.787 li
301.456 391.771 li
306.208 389.898 li
310.456 388.026 li
314.056 386.442 li
317.153 384.931 li
319.672 383.563 li
321.905 382.555 li
323.776 381.69 li
325.288 381.187 li
326.872 380.683 li
328.024 380.467 li
329.392 380.683 li
330.616 380.971 li
331.985 381.834 li
333.497 382.698 li
.0941 .102 .2745 .00779998 cmyk
ef
333.497 382.698 mo
335.368 384.57 li
337.6 387.163 li
339.976 390.547 li
342.712 394.65 li
345.665 399.259 li
348.544 404.371 li
351.64 409.843 li
354.88 415.459 li
357.904 421.579 li
361 427.555 li
364.096 433.747 li
366.76 439.867 li
369.352 445.698 li
371.728 451.459 li
373.816 456.787 li
375.472 461.755 li
369.497 463.411 li
363.736 465.499 li
357.76 467.515 li
351.784 469.891 li
345.808 472.267 li
339.688 474.858 li
333.712 477.451 li
327.52 479.827 li
321.401 482.203 li
315.28 484.435 li
309.088 486.451 li
302.968 488.322 li
296.848 489.906 li
290.512 491.274 li
284.392 492.066 li
278.056 492.427 li
275.968 487.314 li
273.592 482.347 li
271.216 477.234 li
268.84 472.267 li
266.249 467.371 li
263.728 462.259 li
261.136 457.291 li
258.616 452.179 li
256.168 447.211 li
253.648 442.099 li
251.272 437.131 li
249.04 432.019 li
246.952 426.906 li
244.936 421.795 li
243.208 416.467 li
241.696 411.354 li
243.424 409.482 li
244.936 407.971 li
246.304 406.747 li
247.817 405.883 li
249.401 405.091 li
251.272 404.515 li
253.144 404.011 li
255.375 403.507 li
257.896 403.146 li
260.776 402.643 li
264.088 401.995 li
267.833 401.274 li
272.224 400.267 li
277.192 399.114 li
283.024 397.747 li
289.288 395.875 li
295.768 393.787 li
301.456 391.771 li
306.208 389.898 li
310.456 388.026 li
314.056 386.442 li
317.153 384.931 li
319.672 383.563 li
321.905 382.555 li
323.776 381.69 li
325.288 381.187 li
326.872 380.683 li
328.024 380.467 li
329.392 380.683 li
330.616 380.971 li
331.985 381.834 li
333.497 382.698 li
cp
.2 .1765 .3569 .0353 cmyk
s
394.768 488.035 mo
394.121 487.314 li
393.256 486.091 li
392.032 484.435 li
390.52 482.563 li
389.008 480.331 li
387.28 477.738 li
385.552 475.219 li
383.68 472.627 li
381.808 470.251 li
380.081 467.658 li
378.424 465.499 li
376.696 463.627 li
375.329 461.898 li
373.96 460.675 li
372.953 460.026 li
372.232 459.811 li
330.256 381.33 li
332.344 382.555 li
334.504 384.066 li
336.952 385.795 li
339.329 388.026 li
341.848 390.906 li
344.944 394.65 li
348.184 399.402 li
351.784 405.234 li
353.8 408.619 li
356.032 412.579 li
358.408 416.827 li
360.856 421.435 li
363.376 426.187 li
366.112 431.371 li
368.848 436.771 li
371.728 442.243 li
374.464 447.931 li
377.56 453.69 li
380.44 459.522 li
383.32 465.282 li
386.272 471.114 li
389.152 476.875 li
392.032 482.563 li
394.768 488.035 li
.3216 .2588 .4314 .098 cmyk
ef
.216 lw
394.768 488.035 mo
394.121 487.314 li
393.256 486.091 li
392.032 484.435 li
390.52 482.563 li
389.008 480.331 li
387.28 477.738 li
385.552 475.219 li
383.68 472.627 li
381.808 470.251 li
380.081 467.658 li
378.424 465.499 li
376.696 463.627 li
375.329 461.898 li
373.96 460.675 li
372.953 460.026 li
372.232 459.811 li
330.256 381.33 li
332.344 382.555 li
334.504 384.066 li
336.952 385.795 li
339.329 388.026 li
341.848 390.906 li
344.944 394.65 li
348.184 399.402 li
351.784 405.234 li
353.8 408.619 li
356.032 412.579 li
358.408 416.827 li
360.856 421.435 li
363.376 426.187 li
366.112 431.371 li
368.848 436.771 li
371.728 442.243 li
374.464 447.931 li
377.56 453.69 li
380.44 459.522 li
383.32 465.282 li
386.272 471.114 li
389.152 476.875 li
392.032 482.563 li
394.768 488.035 li
cp
.1059 .00779998 .8941 0 cmyk
s
282.808 492.787 mo
254.153 541.603 li
213.04 457.435 li
241.696 409.843 li
282.808 492.787 li
.3216 .2588 .4314 .098 cmyk
ef
395.272 490.411 mo
391.024 491.923 li
386.776 493.65 li
382.312 495.163 li
378.064 496.675 li
373.6 498.402 li
369.352 499.915 li
364.888 501.499 li
360.497 503.227 li
356.249 504.738 li
351.784 506.467 li
347.32 507.979 li
342.928 509.707 li
338.464 511.219 li
334 512.73 li
329.392 514.459 li
325 515.971 li
320.536 517.698 li
316.073 519.211 li
311.68 520.938 li
307.216 522.451 li
302.825 524.179 li
298.36 525.69 li
293.752 527.274 li
289.288 528.931 li
284.896 530.515 li
280.432 532.026 li
276.184 533.755 li
271.72 535.267 li
267.329 536.778 li
262.864 538.507 li
258.616 540.091 li
254.153 541.603 li
254.657 539.227 li
255.52 536.49 li
256.528 533.539 li
257.752 530.299 li
259.12 527.059 li
260.489 523.53 li
262.144 520.074 li
263.872 516.475 li
265.6 513.091 li
267.472 509.707 li
269.344 506.61 li
271.216 503.515 li
272.944 500.995 li
274.817 498.619 li
276.544 496.675 li
278.056 495.163 li
280.288 493.435 li
282.161 491.923 li
284.032 490.698 li
285.905 489.906 li
287.632 489.043 li
289.504 488.322 li
291.52 487.818 li
293.752 487.171 li
296.344 486.451 li
299.368 485.803 li
302.825 484.938 li
306.569 483.931 li
311.176 482.563 li
316.288 480.979 li
322.264 479.106 li
328.888 476.73 li
335.584 474.211 li
341.2 471.763 li
346.312 469.603 li
350.56 467.515 li
354.161 465.643 li
357.256 464.131 li
359.776 462.547 li
361.864 461.395 li
363.736 460.387 li
365.104 459.522 li
366.256 458.803 li
367.336 458.442 li
368.128 458.154 li
368.993 458.154 li
369.856 458.154 li
370.72 458.442 li
372.448 459.163 li
374.104 460.171 li
375.688 461.395 li
377.201 462.763 li
378.568 464.419 li
380.081 466.146 li
381.448 468.019 li
383.032 470.251 li
384.4 472.482 li
385.768 474.715 li
387.28 477.234 li
388.792 479.827 li
390.376 482.347 li
391.888 484.938 li
393.616 487.675 li
395.272 490.411 li
.2 .1765 .3569 .0353 cmyk
ef
2.0001 lw
395.272 490.411 mo
391.024 491.923 li
386.776 493.65 li
382.312 495.163 li
378.064 496.675 li
373.6 498.402 li
369.352 499.915 li
364.888 501.499 li
360.497 503.227 li
356.249 504.738 li
351.784 506.467 li
347.32 507.979 li
342.928 509.707 li
338.464 511.219 li
334 512.73 li
329.392 514.459 li
325 515.971 li
320.536 517.698 li
316.073 519.211 li
311.68 520.938 li
307.216 522.451 li
302.825 524.179 li
298.36 525.69 li
293.752 527.274 li
289.288 528.931 li
284.896 530.515 li
280.432 532.026 li
276.184 533.755 li
271.72 535.267 li
267.329 536.778 li
262.864 538.507 li
258.616 540.091 li
254.153 541.603 li
254.657 539.227 li
255.52 536.49 li
256.528 533.539 li
257.752 530.299 li
259.12 527.059 li
260.489 523.53 li
262.144 520.074 li
263.872 516.475 li
265.6 513.091 li
267.472 509.707 li
269.344 506.61 li
271.216 503.515 li
272.944 500.995 li
274.817 498.619 li
276.544 496.675 li
278.056 495.163 li
280.288 493.435 li
282.161 491.923 li
284.032 490.698 li
285.905 489.906 li
287.632 489.043 li
289.504 488.322 li
291.52 487.818 li
293.752 487.171 li
296.344 486.451 li
299.368 485.803 li
302.825 484.938 li
306.569 483.931 li
311.176 482.563 li
316.288 480.979 li
322.264 479.106 li
328.888 476.73 li
335.584 474.211 li
341.2 471.763 li
346.312 469.603 li
350.56 467.515 li
354.161 465.643 li
357.256 464.131 li
359.776 462.547 li
361.864 461.395 li
363.736 460.387 li
365.104 459.522 li
366.256 458.803 li
367.336 458.442 li
368.128 458.154 li
368.993 458.154 li
369.856 458.154 li
370.72 458.442 li
372.448 459.163 li
374.104 460.171 li
375.688 461.395 li
377.201 462.763 li
378.568 464.419 li
380.081 466.146 li
381.448 468.019 li
383.032 470.251 li
384.4 472.482 li
385.768 474.715 li
387.28 477.234 li
388.792 479.827 li
390.376 482.347 li
391.888 484.938 li
393.616 487.675 li
395.272 490.411 li
cp
.3059 .251 .4196 .0863 cmyk
s
635.497 273.698 mo
637.368 275.57 li
639.6 278.163 li
641.976 281.547 li
644.712 285.65 li
647.665 290.259 li
650.544 295.371 li
653.64 300.843 li
656.88 306.459 li
659.904 312.579 li
663 318.555 li
666.096 324.747 li
668.76 330.867 li
671.352 336.698 li
673.728 342.459 li
675.816 347.787 li
677.472 352.755 li
671.497 354.411 li
665.736 356.499 li
659.76 358.515 li
653.784 360.891 li
647.808 363.267 li
641.688 365.858 li
635.712 368.451 li
629.52 370.827 li
623.401 373.203 li
617.28 375.435 li
611.088 377.451 li
604.968 379.322 li
598.848 380.906 li
592.512 382.274 li
586.392 383.066 li
580.056 383.427 li
577.968 378.314 li
575.592 373.347 li
573.216 368.234 li
570.84 363.267 li
568.249 358.371 li
565.728 353.259 li
563.136 348.291 li
560.616 343.179 li
558.168 338.211 li
555.648 333.099 li
553.272 328.131 li
551.04 323.019 li
548.952 317.906 li
546.936 312.795 li
545.208 307.467 li
543.696 302.354 li
545.424 300.482 li
546.936 298.971 li
548.304 297.747 li
549.817 296.883 li
551.401 296.091 li
553.272 295.515 li
555.144 295.011 li
557.375 294.507 li
559.896 294.146 li
562.776 293.643 li
566.088 292.995 li
569.833 292.274 li
574.224 291.267 li
579.192 290.114 li
585.024 288.747 li
591.288 286.875 li
597.768 284.787 li
603.456 282.771 li
608.208 280.898 li
612.456 279.026 li
616.056 277.442 li
619.153 275.931 li
621.672 274.563 li
623.905 273.555 li
625.776 272.69 li
627.288 272.187 li
628.872 271.683 li
630.024 271.467 li
631.392 271.683 li
632.616 271.971 li
633.985 272.834 li
635.497 273.698 li
.0941 .102 .2745 .00779998 cmyk
ef
635.497 273.698 mo
637.368 275.57 li
639.6 278.163 li
641.976 281.547 li
644.712 285.65 li
647.665 290.259 li
650.544 295.371 li
653.64 300.843 li
656.88 306.459 li
659.904 312.579 li
663 318.555 li
666.096 324.747 li
668.76 330.867 li
671.352 336.698 li
673.728 342.459 li
675.816 347.787 li
677.472 352.755 li
671.497 354.411 li
665.736 356.499 li
659.76 358.515 li
653.784 360.891 li
647.808 363.267 li
641.688 365.858 li
635.712 368.451 li
629.52 370.827 li
623.401 373.203 li
617.28 375.435 li
611.088 377.451 li
604.968 379.322 li
598.848 380.906 li
592.512 382.274 li
586.392 383.066 li
580.056 383.427 li
577.968 378.314 li
575.592 373.347 li
573.216 368.234 li
570.84 363.267 li
568.249 358.371 li
565.728 353.259 li
563.136 348.291 li
560.616 343.179 li
558.168 338.211 li
555.648 333.099 li
553.272 328.131 li
551.04 323.019 li
548.952 317.906 li
546.936 312.795 li
545.208 307.467 li
543.696 302.354 li
545.424 300.482 li
546.936 298.971 li
548.304 297.747 li
549.817 296.883 li
551.401 296.091 li
553.272 295.515 li
555.144 295.011 li
557.375 294.507 li
559.896 294.146 li
562.776 293.643 li
566.088 292.995 li
569.833 292.274 li
574.224 291.267 li
579.192 290.114 li
585.024 288.747 li
591.288 286.875 li
597.768 284.787 li
603.456 282.771 li
608.208 280.898 li
612.456 279.026 li
616.056 277.442 li
619.153 275.931 li
621.672 274.563 li
623.905 273.555 li
625.776 272.69 li
627.288 272.187 li
628.872 271.683 li
630.024 271.467 li
631.392 271.683 li
632.616 271.971 li
633.985 272.834 li
635.497 273.698 li
cp
.2 .1765 .3569 .0353 cmyk
s
696.768 379.035 mo
696.121 378.314 li
695.256 377.091 li
694.032 375.435 li
692.52 373.563 li
691.008 371.331 li
689.28 368.738 li
687.552 366.219 li
685.68 363.627 li
683.808 361.251 li
682.081 358.658 li
680.424 356.499 li
678.696 354.627 li
677.329 352.898 li
675.96 351.675 li
674.953 351.026 li
674.232 350.811 li
632.256 272.33 li
634.344 273.555 li
636.504 275.066 li
638.952 276.795 li
641.329 279.026 li
643.848 281.906 li
646.944 285.65 li
650.184 290.402 li
653.784 296.234 li
655.8 299.619 li
658.032 303.579 li
660.408 307.827 li
662.856 312.435 li
665.376 317.187 li
668.112 322.371 li
670.848 327.771 li
673.728 333.243 li
676.464 338.931 li
679.56 344.69 li
682.44 350.522 li
685.32 356.282 li
688.272 362.114 li
691.152 367.875 li
694.032 373.563 li
696.768 379.035 li
.3216 .2588 .4314 .098 cmyk
ef
.216 lw
696.768 379.035 mo
696.121 378.314 li
695.256 377.091 li
694.032 375.435 li
692.52 373.563 li
691.008 371.331 li
689.28 368.738 li
687.552 366.219 li
685.68 363.627 li
683.808 361.251 li
682.081 358.658 li
680.424 356.499 li
678.696 354.627 li
677.329 352.898 li
675.96 351.675 li
674.953 351.026 li
674.232 350.811 li
632.256 272.33 li
634.344 273.555 li
636.504 275.066 li
638.952 276.795 li
641.329 279.026 li
643.848 281.906 li
646.944 285.65 li
650.184 290.402 li
653.784 296.234 li
655.8 299.619 li
658.032 303.579 li
660.408 307.827 li
662.856 312.435 li
665.376 317.187 li
668.112 322.371 li
670.848 327.771 li
673.728 333.243 li
676.464 338.931 li
679.56 344.69 li
682.44 350.522 li
685.32 356.282 li
688.272 362.114 li
691.152 367.875 li
694.032 373.563 li
696.768 379.035 li
cp
.1059 .00779998 .8941 0 cmyk
s
584.808 383.787 mo
556.153 432.603 li
515.04 348.435 li
543.696 300.843 li
584.808 383.787 li
.3216 .2588 .4314 .098 cmyk
ef
697.272 381.411 mo
693.024 382.923 li
688.776 384.65 li
684.312 386.163 li
680.064 387.675 li
675.6 389.402 li
671.352 390.915 li
666.888 392.499 li
662.497 394.227 li
658.249 395.738 li
653.784 397.467 li
649.32 398.979 li
644.928 400.707 li
640.464 402.219 li
636 403.73 li
631.392 405.459 li
627 406.971 li
622.536 408.698 li
618.073 410.211 li
613.68 411.938 li
609.216 413.451 li
604.825 415.179 li
600.36 416.69 li
595.752 418.274 li
591.288 419.931 li
586.896 421.515 li
582.432 423.026 li
578.184 424.755 li
573.72 426.267 li
569.329 427.778 li
564.864 429.507 li
560.616 431.091 li
556.153 432.603 li
556.657 430.227 li
557.52 427.49 li
558.528 424.539 li
559.752 421.299 li
561.12 418.059 li
562.489 414.53 li
564.144 411.074 li
565.872 407.475 li
567.6 404.091 li
569.472 400.707 li
571.344 397.61 li
573.216 394.515 li
574.944 391.995 li
576.817 389.619 li
578.544 387.675 li
580.056 386.163 li
582.288 384.435 li
584.161 382.923 li
586.032 381.698 li
587.905 380.906 li
589.632 380.043 li
591.504 379.322 li
593.52 378.818 li
595.752 378.171 li
598.344 377.451 li
601.368 376.803 li
604.825 375.938 li
608.569 374.931 li
613.176 373.563 li
618.288 371.979 li
624.264 370.106 li
630.888 367.73 li
637.584 365.211 li
643.2 362.763 li
648.312 360.603 li
652.56 358.515 li
656.161 356.643 li
659.256 355.131 li
661.776 353.547 li
663.864 352.395 li
665.736 351.387 li
667.104 350.522 li
668.256 349.803 li
669.336 349.442 li
670.128 349.154 li
670.993 349.154 li
671.856 349.154 li
672.72 349.442 li
674.448 350.163 li
676.104 351.171 li
677.688 352.395 li
679.201 353.763 li
680.568 355.419 li
682.081 357.146 li
683.448 359.019 li
685.032 361.251 li
686.4 363.482 li
687.768 365.715 li
689.28 368.234 li
690.792 370.827 li
692.376 373.347 li
693.888 375.938 li
695.616 378.675 li
697.272 381.411 li
.2 .1765 .3569 .0353 cmyk
ef
2.0001 lw
697.272 381.411 mo
693.024 382.923 li
688.776 384.65 li
684.312 386.163 li
680.064 387.675 li
675.6 389.402 li
671.352 390.915 li
666.888 392.499 li
662.497 394.227 li
658.249 395.738 li
653.784 397.467 li
649.32 398.979 li
644.928 400.707 li
640.464 402.219 li
636 403.73 li
631.392 405.459 li
627 406.971 li
622.536 408.698 li
618.073 410.211 li
613.68 411.938 li
609.216 413.451 li
604.825 415.179 li
600.36 416.69 li
595.752 418.274 li
591.288 419.931 li
586.896 421.515 li
582.432 423.026 li
578.184 424.755 li
573.72 426.267 li
569.329 427.778 li
564.864 429.507 li
560.616 431.091 li
556.153 432.603 li
556.657 430.227 li
557.52 427.49 li
558.528 424.539 li
559.752 421.299 li
561.12 418.059 li
562.489 414.53 li
564.144 411.074 li
565.872 407.475 li
567.6 404.091 li
569.472 400.707 li
571.344 397.61 li
573.216 394.515 li
574.944 391.995 li
576.817 389.619 li
578.544 387.675 li
580.056 386.163 li
582.288 384.435 li
584.161 382.923 li
586.032 381.698 li
587.905 380.906 li
589.632 380.043 li
591.504 379.322 li
593.52 378.818 li
595.752 378.171 li
598.344 377.451 li
601.368 376.803 li
604.825 375.938 li
608.569 374.931 li
613.176 373.563 li
618.288 371.979 li
624.264 370.106 li
630.888 367.73 li
637.584 365.211 li
643.2 362.763 li
648.312 360.603 li
652.56 358.515 li
656.161 356.643 li
659.256 355.131 li
661.776 353.547 li
663.864 352.395 li
665.736 351.387 li
667.104 350.522 li
668.256 349.803 li
669.336 349.442 li
670.128 349.154 li
670.993 349.154 li
671.856 349.154 li
672.72 349.442 li
674.448 350.163 li
676.104 351.171 li
677.688 352.395 li
679.201 353.763 li
680.568 355.419 li
682.081 357.146 li
683.448 359.019 li
685.032 361.251 li
686.4 363.482 li
687.768 365.715 li
689.28 368.234 li
690.792 370.827 li
692.376 373.347 li
693.888 375.938 li
695.616 378.675 li
697.272 381.411 li
cp
.3059 .251 .4196 .0863 cmyk
s
785.497 219.698 mo
787.368 221.57 li
789.6 224.163 li
791.976 227.547 li
794.712 231.65 li
797.665 236.259 li
800.544 241.371 li
803.64 246.843 li
806.88 252.459 li
809.904 258.579 li
813 264.555 li
816.096 270.747 li
818.76 276.867 li
821.352 282.698 li
823.728 288.459 li
825.816 293.787 li
827.472 298.755 li
821.497 300.411 li
815.736 302.499 li
809.76 304.515 li
803.784 306.891 li
797.808 309.267 li
791.688 311.858 li
785.712 314.451 li
779.52 316.827 li
773.401 319.203 li
767.28 321.435 li
761.088 323.451 li
754.968 325.322 li
748.848 326.906 li
742.512 328.274 li
736.392 329.066 li
730.056 329.427 li
727.968 324.314 li
725.592 319.347 li
723.216 314.234 li
720.84 309.267 li
718.249 304.371 li
715.728 299.259 li
713.136 294.291 li
710.616 289.179 li
708.168 284.211 li
705.648 279.099 li
703.272 274.131 li
701.04 269.019 li
698.952 263.906 li
696.936 258.795 li
695.208 253.467 li
693.696 248.354 li
695.424 246.482 li
696.936 244.971 li
698.304 243.747 li
699.817 242.883 li
701.401 242.091 li
703.272 241.515 li
705.144 241.011 li
707.375 240.507 li
709.896 240.146 li
712.776 239.643 li
716.088 238.995 li
719.833 238.274 li
724.224 237.267 li
729.192 236.114 li
735.024 234.747 li
741.288 232.875 li
747.768 230.787 li
753.456 228.771 li
758.208 226.898 li
762.456 225.026 li
766.056 223.442 li
769.153 221.931 li
771.672 220.563 li
773.905 219.555 li
775.776 218.69 li
777.288 218.187 li
778.872 217.683 li
780.024 217.467 li
781.392 217.683 li
782.616 217.971 li
783.985 218.834 li
785.497 219.698 li
.0941 .102 .2745 .00779998 cmyk
ef
785.497 219.698 mo
787.368 221.57 li
789.6 224.163 li
791.976 227.547 li
794.712 231.65 li
797.665 236.259 li
800.544 241.371 li
803.64 246.843 li
806.88 252.459 li
809.904 258.579 li
813 264.555 li
816.096 270.747 li
818.76 276.867 li
821.352 282.698 li
823.728 288.459 li
825.816 293.787 li
827.472 298.755 li
821.497 300.411 li
815.736 302.499 li
809.76 304.515 li
803.784 306.891 li
797.808 309.267 li
791.688 311.858 li
785.712 314.451 li
779.52 316.827 li
773.401 319.203 li
767.28 321.435 li
761.088 323.451 li
754.968 325.322 li
748.848 326.906 li
742.512 328.274 li
736.392 329.066 li
730.056 329.427 li
727.968 324.314 li
725.592 319.347 li
723.216 314.234 li
720.84 309.267 li
718.249 304.371 li
715.728 299.259 li
713.136 294.291 li
710.616 289.179 li
708.168 284.211 li
705.648 279.099 li
703.272 274.131 li
701.04 269.019 li
698.952 263.906 li
696.936 258.795 li
695.208 253.467 li
693.696 248.354 li
695.424 246.482 li
696.936 244.971 li
698.304 243.747 li
699.817 242.883 li
701.401 242.091 li
703.272 241.515 li
705.144 241.011 li
707.375 240.507 li
709.896 240.146 li
712.776 239.643 li
716.088 238.995 li
719.833 238.274 li
724.224 237.267 li
729.192 236.114 li
735.024 234.747 li
741.288 232.875 li
747.768 230.787 li
753.456 228.771 li
758.208 226.898 li
762.456 225.026 li
766.056 223.442 li
769.153 221.931 li
771.672 220.563 li
773.905 219.555 li
775.776 218.69 li
777.288 218.187 li
778.872 217.683 li
780.024 217.467 li
781.392 217.683 li
782.616 217.971 li
783.985 218.834 li
785.497 219.698 li
cp
.2 .1765 .3569 .0353 cmyk
s
846.768 325.035 mo
846.121 324.314 li
845.256 323.091 li
844.032 321.435 li
842.52 319.563 li
841.008 317.331 li
839.28 314.738 li
837.552 312.219 li
835.68 309.627 li
833.808 307.251 li
832.081 304.658 li
830.424 302.499 li
828.696 300.627 li
827.329 298.898 li
825.96 297.675 li
824.953 297.026 li
824.232 296.811 li
782.256 218.33 li
784.344 219.555 li
786.504 221.066 li
788.952 222.795 li
791.329 225.026 li
793.848 227.906 li
796.944 231.65 li
800.184 236.402 li
803.784 242.234 li
805.8 245.619 li
808.032 249.579 li
810.408 253.827 li
812.856 258.435 li
815.376 263.187 li
818.112 268.371 li
820.848 273.771 li
823.728 279.243 li
826.464 284.931 li
829.56 290.69 li
832.44 296.522 li
835.32 302.282 li
838.272 308.114 li
841.152 313.875 li
844.032 319.563 li
846.768 325.035 li
.3216 .2588 .4314 .098 cmyk
ef
.216 lw
846.768 325.035 mo
846.121 324.314 li
845.256 323.091 li
844.032 321.435 li
842.52 319.563 li
841.008 317.331 li
839.28 314.738 li
837.552 312.219 li
835.68 309.627 li
833.808 307.251 li
832.081 304.658 li
830.424 302.499 li
828.696 300.627 li
827.329 298.898 li
825.96 297.675 li
824.953 297.026 li
824.232 296.811 li
782.256 218.33 li
784.344 219.555 li
786.504 221.066 li
788.952 222.795 li
791.329 225.026 li
793.848 227.906 li
796.944 231.65 li
800.184 236.402 li
803.784 242.234 li
805.8 245.619 li
808.032 249.579 li
810.408 253.827 li
812.856 258.435 li
815.376 263.187 li
818.112 268.371 li
820.848 273.771 li
823.728 279.243 li
826.464 284.931 li
829.56 290.69 li
832.44 296.522 li
835.32 302.282 li
838.272 308.114 li
841.152 313.875 li
844.032 319.563 li
846.768 325.035 li
cp
.1059 .00779998 .8941 0 cmyk
s
734.808 329.787 mo
706.153 378.603 li
665.04 294.435 li
693.696 246.843 li
734.808 329.787 li
.3216 .2588 .4314 .098 cmyk
ef
847.272 327.411 mo
843.024 328.923 li
838.776 330.65 li
834.312 332.163 li
830.064 333.675 li
825.6 335.402 li
821.352 336.915 li
816.888 338.499 li
812.497 340.227 li
808.249 341.738 li
803.784 343.467 li
799.32 344.979 li
794.928 346.707 li
790.464 348.219 li
786 349.73 li
781.392 351.459 li
777 352.971 li
772.536 354.698 li
768.073 356.211 li
763.68 357.938 li
759.216 359.451 li
754.825 361.179 li
750.36 362.69 li
745.752 364.274 li
741.288 365.931 li
736.896 367.515 li
732.432 369.026 li
728.184 370.755 li
723.72 372.267 li
719.329 373.778 li
714.864 375.507 li
710.616 377.091 li
706.153 378.603 li
706.657 376.227 li
707.52 373.49 li
708.528 370.539 li
709.752 367.299 li
711.12 364.059 li
712.489 360.53 li
714.144 357.074 li
715.872 353.475 li
717.6 350.091 li
719.472 346.707 li
721.344 343.61 li
723.216 340.515 li
724.944 337.995 li
726.817 335.619 li
728.544 333.675 li
730.056 332.163 li
732.288 330.435 li
734.161 328.923 li
736.032 327.698 li
737.905 326.906 li
739.632 326.043 li
741.504 325.322 li
743.52 324.818 li
745.752 324.171 li
748.344 323.451 li
751.368 322.803 li
754.825 321.938 li
758.569 320.931 li
763.176 319.563 li
768.288 317.979 li
774.264 316.106 li
780.888 313.73 li
787.584 311.211 li
793.2 308.763 li
798.312 306.603 li
802.56 304.515 li
806.161 302.643 li
809.256 301.131 li
811.776 299.547 li
813.864 298.395 li
815.736 297.387 li
817.104 296.522 li
818.256 295.803 li
819.336 295.442 li
820.128 295.154 li
820.993 295.154 li
821.856 295.154 li
822.72 295.442 li
824.448 296.163 li
826.104 297.171 li
827.688 298.395 li
829.201 299.763 li
830.568 301.419 li
832.081 303.146 li
833.448 305.019 li
835.032 307.251 li
836.4 309.482 li
837.768 311.715 li
839.28 314.234 li
840.792 316.827 li
842.376 319.347 li
843.888 321.938 li
845.616 324.675 li
847.272 327.411 li
.2 .1765 .3569 .0353 cmyk
ef
2.0001 lw
847.272 327.411 mo
843.024 328.923 li
838.776 330.65 li
834.312 332.163 li
830.064 333.675 li
825.6 335.402 li
821.352 336.915 li
816.888 338.499 li
812.497 340.227 li
808.249 341.738 li
803.784 343.467 li
799.32 344.979 li
794.928 346.707 li
790.464 348.219 li
786 349.73 li
781.392 351.459 li
777 352.971 li
772.536 354.698 li
768.073 356.211 li
763.68 357.938 li
759.216 359.451 li
754.825 361.179 li
750.36 362.69 li
745.752 364.274 li
741.288 365.931 li
736.896 367.515 li
732.432 369.026 li
728.184 370.755 li
723.72 372.267 li
719.329 373.778 li
714.864 375.507 li
710.616 377.091 li
706.153 378.603 li
706.657 376.227 li
707.52 373.49 li
708.528 370.539 li
709.752 367.299 li
711.12 364.059 li
712.489 360.53 li
714.144 357.074 li
715.872 353.475 li
717.6 350.091 li
719.472 346.707 li
721.344 343.61 li
723.216 340.515 li
724.944 337.995 li
726.817 335.619 li
728.544 333.675 li
730.056 332.163 li
732.288 330.435 li
734.161 328.923 li
736.032 327.698 li
737.905 326.906 li
739.632 326.043 li
741.504 325.322 li
743.52 324.818 li
745.752 324.171 li
748.344 323.451 li
751.368 322.803 li
754.825 321.938 li
758.569 320.931 li
763.176 319.563 li
768.288 317.979 li
774.264 316.106 li
780.888 313.73 li
787.584 311.211 li
793.2 308.763 li
798.312 306.603 li
802.56 304.515 li
806.161 302.643 li
809.256 301.131 li
811.776 299.547 li
813.864 298.395 li
815.736 297.387 li
817.104 296.522 li
818.256 295.803 li
819.336 295.442 li
820.128 295.154 li
820.993 295.154 li
821.856 295.154 li
822.72 295.442 li
824.448 296.163 li
826.104 297.171 li
827.688 298.395 li
829.201 299.763 li
830.568 301.419 li
832.081 303.146 li
833.448 305.019 li
835.032 307.251 li
836.4 309.482 li
837.768 311.715 li
839.28 314.234 li
840.792 316.827 li
842.376 319.347 li
843.888 321.938 li
845.616 324.675 li
847.272 327.411 li
cp
.3059 .251 .4196 .0863 cmyk
s
0 0 0 1 cmyk
%ADOBeginSubsetFont: ArialMT Initial
11 dict begin
/FontName /ArialMT def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1296 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/zero 
<10bf317047276c49b351d9623648ba231144bc53a0ca0f7137dd26acafd7
a97e034bcb411e070b28033a95585d14cc3049211cd8d6dbdc740e7e557b
8b0bae35a0f458c915f0c42d4639db9a6f5be8ea13662c7ddbf896c5212e
82bb811e04cfd3e7e4c6b33f992c4b804c27926604f71ad62c4caff5ad28
f37dca9db86e540c19061066e9956293f0fe2d5a7761fabb37f03c88ecf7
f39a88f359b0b2fcad10a34d95> ND 
/two 
<10bf31705ac903dc9a7655fb1cbe16b0c7e0879796676cfad704f90dc700
a86b567dfb510d73e1eda2d25481e3e3d20a511167bf4f5111151f12fb5e
5148b97bc9e8b92f2397a19c4772d4ba061304f4dbf35b8f856430b2bb0f
08d2f25a6aab8461d96e2c6ffa85eccdebf2e249af74bf434f3c62413f00
2a31d30ba682cae0ea90b106d10c83845aabfb8f0d6840476b9cba1b1b33
8d> ND 
/six 
<10bf3170435d0d4425184fc061c7faa8dc6add2447c73d0495af3ae4cbe6
71b2a7700f040b5d9fec272a0180dbc9357b9de2d4d226b00cab96cfa6ff
d4525fd5fdbe5aade510cfc7cacabe52b0525986d0147839af70fe53fbd7
f15198bbfd1bae2061f4f49fd71dc08e9970f70083123f8d66b634fb7315
bebd4054f7add22d02ae4b05edbd93dd36100ec8d8de9338fa3376fac047
09884a6568cb1a4a1bc019a4541fd5336bbf3178a330d69e79b2faeff373
c4a7266727a8881d997fda33f08bb656e21f4f69dff5317fad9fb438e4a6
11e7fbf82c> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ArialMT findfont /Encoding get
dup 48 /zero put
dup 50 /two put
dup 54 /six put
pop
%ADOEndSubsetFont
/ArialMT*1 
[
48{/.notdef}repeat /zero /.notdef /two 3{/.notdef}repeat /six 201{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*1 findfont [97.5755 -38.7758 -38.7758 -97.5755 0 0 ]mfnt sfnt
296.261 481.761 mov
(2) sh
/ArialMT*1 findfont [96.6359 -41.0517 -41.0517 -96.6359 0 0 ]mfnt sfnt
449.631 427.235 mov
(0) sh
/ArialMT*1 findfont [96.4149 -41.566 -41.566 -96.4149 0 0 ]mfnt sfnt
597.752 374.832 mov
(0) sh
/ArialMT*1 findfont [97.139 -39.855 -39.855 -97.139 0 0 ]mfnt sfnt
749.752 318.832 mov
(6) sh
%ADOBeginClientInjection: EndPageContent "AI10"
%ADOEndClientInjection: EndPageContent "AI10"
% page clip
grestore
grestore % PSGState
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI10"
%ADOEndClientInjection: PageTrailer Start "AI10"
Adobe_AGM_Gradient/page_trailer get exec
Adobe_AGM_Image/page_trailer get exec
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
currentdict Adobe_AGM_Utils eq {end} if
%ADOBeginClientInjection: PageTrailer End "AI10"
%ADOEndClientInjection: PageTrailer End "AI10"
%%Trailer
%ADOBeginClientInjection: DocumentTrailer Start "AI10"
%ADOEndClientInjection: DocumentTrailer Start "AI10"
Adobe_AGM_Gradient/doc_trailer get exec
Adobe_AGM_Image/doc_trailer get exec
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%ADOBeginClientInjection: DocumentTrailer End "AI10"
%ADOEndClientInjection: DocumentTrailer End "AI10"
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 10.0
%%For: (Prologin) (Epita)
%%Title: (logo_prologin2006.eps)
%%CreationDate: 8/31/2001 6:56 PM
%AI9_DataStream
%Gb!!kH#I9GOXKqu#iKoO^q^&OV]U31Fr/b<J4qQNC0R!3g!d)Y$3E$T8`H+12T_2bDU`m&pr/*W4AneW]'XNL=ih*/Hd<HTp>oAj
%H?o,MqT["PG;!n6qWls$DfrPOh(k8O;V%$BIeBcAI.@*Oh=3koFK'D[-Vp)*<I-d"VQqcFc>m*tQLNl]2m;+E*NnkG]"NB;\@_Y5
%k47[.mao(3Ilb@$I<#6,rT8M%c\K]eRici-0@+#*-,0!(c1O4_qr7>/r:5b1`8>t@md8cPMo2"h:V?J8IIl.2jl*P8gT0rCh0_7<
%Y^F=js7)+=UquT-^d#S_IJN<Ui@>iDnE0<mqY_H7B).2]nb(l?SlSNpn7k/dih(]6=$g<joAQ<kJ,&Hkmf)qXro3):?Tu?U00Z$*
%\6g?7T(cU=p\HrndP#g:*54RcGBr'n[.C3Za8:p@pr*3Cqsl<]GPp%)S*7'T^]$`X?O`ZXp'LcfO$3CI5Nc>*eNV8[?[[M\EdqJg
%G.#`$Zb2A@%"LPang(K"IlL]H]fa%o0P]Zc3GlBs-i.cV=WaL#knpe01rlui.\YU[Mu;Edk4$:-iQ#<orq#+Hc/D\5pVlOuf,+IX
%%WU1mDGF?M^OLHQ\GbI\"gF]<[_DEAgq5XP.Z@a7m.).Z)7P7u.o6*%r:[b?4^n64jZDi,YBT<.^\cj!X5BNKFLW'-^`[!u4^A$G
%k5XCsmcRhuBj/"%F?7b>Z:h/jF;r@TpQJ6a\'EsfoXjl(5+s'*E$Sd&qL*X9n_M1WYB?a(;O)173e)LdrVb^JrNGIEf:$oCG&Yme
%IR,KWQP9H'Sc@1+`>ck[ND=ZGdlh!Ss#0hJ/<I=+rr-jg(Z<d.2]pp^iHT<9IeAkCrgGIXjir#?>Q4s.N^eEj<XtDr^VA^5I/WL,
%Q9Ol*DELX,GCTMXYe*!\^J@$QP:O?DrqqPh[rff;f/NH9s'ag(`=M_Bb^N0$pZCK.rU.qB\%>^dP(&7CIs6?af\'?`*530_++AN_
%TM+3n0@'$)0E/Q[1Msrb9cK3N`g$7ZIgM1N\9gs9TMs/o5X.8Nn@k.^mB9mS?G*tL00&/A>m1YFgUEFEBD=\P`i%FlDa8Af\]qbX
%gY;=lG\MPN>MK+;h:X7E$pD4Lql[.!?[(B?0mS-;<k`O`41i/852>&^/oT%m#k2SQG'3Do&b,J]N6^N%qXWI]jdV=G5JP22s)0RI
%gq5[qoD.M04/R-Z\).1:IlP3VgE$:iqYT+%2m4k%05k1qFFWKSRatDEj)]\'9Dn_^(Hfpk+/]plfL.7UNaBWS^&ET>^t)a3Y.qUK
%IeVf>4pq=cp[F6$lU&[>\N><47c/UA[/Y1A.F+B3<;>dK[m0Cc$kF*mMdEs(^-CEPE.08-k=mqRIXc@18\Ddl&NTFNrG^$]`f0A;
%\n?s8p^omn2aW=A5!+]p([C\hlgG@&Llf>7m/E9Ap`HkI!7U+\]QcejnZTQ_D\&1YLBjT(brbFik_Hno?CuW7YIdjPf7G<0gq)CU
%!5c[0c@5B,6P**cK$jU*++ATaNoNZPG&u>BiA/`k7+=#DQ4YnsR08#gfVQgi@p(1R@[1hZ8V#FDGo,;d1st2bgSIs?)dKR/c+?Fb
%/hd1l1@rQU@kDiTJ2G2Fg=1;J2#\O.f!_[P_3MN)-)S3>k$%R^Q%iHJK^!A19kE051-:s!P1O!5%kfb<9H8Q2YB&Lpa0^H]d>b@%
%_2W)pkkju,Ft4#e+\pG+WR$X&7WT\Y?26.A2uT!*5qna$lg3C"g,>$HlLj8`h*H4LjtKRM[P^hg0-Xm01Mt1$pi"BH3#I)qN@%L9
%05@*TBJdCl"'8Z.?2NM?&c+62ds*._rN2;q.oqIhr7ugRr=qFYpCe]PU?t[CB9;<[nVr3MX8QrS#!ZSXe.U#ZL6<jrp=5.<r`?qc
%D_E^r+5gFRJ9Q*Mlb[m*e,2f4mF.g*&/HNO58kfpJ`M^Ykl?MsB3IKb8pcR%<dLRgJ^h!P4taK6FKB&m^(D2P\WPB?q1FZuXp^>P
%OH.?A^Pea9rO>QQ+3fK\,>=\q[3#T]<5SBB_6DTH/G1(uh1LF$8r56<jUGI6mY(En$DC^1kRoR!-UNJUB6Pdhd[Q'rqR-E##tOhh
%iiM:R#.1@i2D(R2/K_amho9QX\;Kp@[`I@&rsD!M<tjs,SL6%2c#ZCEbSu<(`EgfsOPFbA,(.E_8t#0tbC%X@<ih@BN6[%+7l(C%
%PtiiKBBTdCY(2#nej9kYlp&jj?eY$7",#`G%&tR/cQ._DVM.jEi"U^YX@ij+BQ??@RW(O!BoTThd%o'hERodloN/#?#rHogm2>5b
%(DBQP?^:kc0%1CgJ_[7=aL)[P3qGK_,jnh`>J)hYp56R]#nQMch@f[I/mj5B947[gbLQt2d2Y3f7[0Rmh5DI$r@Q$$_NdHc;AZF@
%s,D.RR=>@Re="Sma5#:7BN>jPck9,+dHQmlhrHQ_;i)::YWF,l[(>t?kh`KNcYcLn!Z^aaaU*N3)O\U56!*9%c*Qb)i?*&&4)WKM
%Ep:(?W^0RWV)KTMPs3j]=q].qNJV><#aoD7+?_O*7SijQ&UgJXUNqL+dcUsc/ls#=/nb3R0?V:!@PW2(d.K"ckj-)rZI/s<<W;E>
%!'fHeK%2,S"fW?7B69k8KRdA['9gnikURYe!4W1QH.IGp#t6auH^U;[!XHPnPjj9Cij)8KGMc^*E<Rl[;q/4hIc=Wncjtb*_,AW5
%#S)>jAuN)Hbd=OqrtC7A"CaD(4N]u,,`=%`;g*CbhP!+01J#psqLHc;11/Vm\*+\)@=9`nCJ7GfV&su^@=%RE^,4S;RuC>gIBDr4
%@=HJp9gqA*2u;(H#P8[$p+3P4]I+U7ZjLXL"[*T#.b;H"pS*6;)-#_a^V.7i5MXZT0+UH,cb@";Fc1EW$GUh.IWmdKQ;m+,lOJ@7
%Wl#=5QPXT//k?R:HZT2BGDBDuMgg0LqVmgJphqerIm##Vp&=iXGB`6%DpH(GI=?NaIJ+\\'`@@A_mfAQ?[bVWf(uiVT^VEsV#,Uj
%DaX)jqN(WV=76E@In!X^IeWfoiJRZH-Z.sa7ah.&_q"SM?g)!D7t^N%D[pDuDXK.gGBXjVfA"tC^UZ>ZdY^W*\>)3>##W^XRelk.
%qT"!WlLs?nL[/%)\)9R<R6H*)).1+'qrZYNe\sBd$=0KU7[ihclgmbId*BB*l0\5#la'eR'%)VUcE>H"@p6?IhgJ-I#/0j#md0qn
%S%EmOBbr_;BD:<@*Y.nIo@NI!%qeu4+F'D2lj^<qrn?\U)nL4UoVJ$mItK(iFaj)]h'LB\?1H,<p?qjEhSG91T3m'%`t7/L39o0)
%7K[>SIDcr\1gfnRI:91+JH_RWq"3o_RDRXTr;,*Er%_7(nG9'VhWOj:che9GLM&f[B0O$/rp4hk+FWCqrkb$#KeL=O?hQL.C%#?@
%]=bn'Hhl.DQZne3M*L9Wrn(TW@sIg1p=;J&?iK$]Rp3aq_sJ1Im&S=AZh$BM\ZY*X]RAXl5.?TCo6-WGc<fg[*;\uVrq1oY9V4Au
%HPcX[MuM3p(uiE(3RDqSpAo4/j#9#sS++:S4C[cm\bP+bJA)oiqQ')]8FM</]X)g2lG('rc1jlH-Qi9Fdr)L,s5f_7gqC<\r-J*!
%6DS;R;,[,Rh)B(d1$d&UcP0ugQu7]V_uG(XoZ9Y_+)]sVrkOD.g:b-7;]-,9T5LpmYQ0+Ha6W'_X2CF_G6/t;rmAgmO+MRP'jn[`
%deA6B';cT1AbnB7P!2U4jXHD5P"VsgjdAN'Q$DPOr%`bl5KTP[cU`LX`;0fIA;uuN;V&.=(Zf6(\9q1<X]%rUB1\",l%!<tV62)O
%^SigOa7YYmC&O!48l?U!X/rG2\LhZ8>C4b([ZB/jmF1d^4O%TcF!:@lSUBpVo*fo?5#rc-O,"<]bjnp4%-,bXN8$kjA,"CJpjE@6
%".^FXUX,a^V9c$bVpD<fWR$Ia,r=k.j4VhP=_ILbo:NmLWr-T%B9kc?r)r.--@]@C+8rs8?[b[UV#S1,7/hQ`Im31J5+^h2P!<+K
%'_t\h%o$DD30gIPaV2dAdlM?p$i9IX54Zhf.K0&n9du2I6m<Re,Uig@A!57c\7+%Kp]45Ji.tl7`"U0*a-D0,34h6A%+FWGhn8=2
%GWI.e0^Yad9)i*2;A,kUggDI`?q*`u4o$tkJoBNCi6+30D;&CC,tSSrc2<V/WWk['^\46(n[4^UaRu>*WL#8EaDZk?Hps:gSse:#
%hYP^k2uEQ#hq@kp@-,0'kn:^tZeo$Fr-6KdgARIXp7K<<nh2*PcIf)m+6f2s0<X/<*pfS7pEfgfs83$bra,VqG/(kSlHf7S:\`Ok
%TqD<KK)N3[].\>Wrg.?nk(J3XH^mmcrJ=(bfiR>ne(m6ZI'>]-$/c&[/Zg_Np&0gJlC9+8:i$R>eZ1mLA,[^sm1.<&!e3W?p/`nq
%./Vro2YOWPc!`CMY,=MTD`l)5S$+I%0r;U0p\+4EDf9;C2Q#oVJihrbqFfP"qsS_^Dr9B!^\bpnc/hI-nH&GcrsX@%Hf*^@4hl7=
%d<c)&LE@IcIec5$E=u_8_oFr(rlRG)n;X?)e)u3PipE9Gd/W?;rp@Z8$@KuD5<^H_STs/Kmk8!32ZH9rDaXKI]2'<1YjCNG.Vq%2
%5J@'TE-_'Ki,F=1jL+lgkI5AZq;^*M;Lh</fmWheir7lZ\@Hnn?hNjQn'BkmN$ggt:Hn$1J%BrKF*VbLjej%?p@D3Hp"AI&D-/.b
%;ucRcJ*roMeQ'BJ-g16e+P^T:!6)i?8WP2:EIReK!<2W0Dh!!&k0X/$iW&mH*[ePPeaVCMJ%[&^jNV+os$0oe#fQ@:h`UnR&*K;J
%oSIF/p,NREr#S$-q)&J&E)\tYNN9tqq&<MRs,'sTJ+G5Z^A[TZGlj<KY7Gi,k;iI(5P=l"dLf$XeYeFi-Tk"slh9<Q.0Febn3>#V
%O0%R2Rs2?F%ictf&%oEIRK)pYR;.Q$g$]I7QTm^jr9nS?R/UUYn^mN=b!UFQ&_H^-a4J:JbP/2WgY1o'k40%n1g._+bPV8=9@E^h
%2n++EUi#p_>b<Y.Ym%kQ\\GniqX*7rq]=P`rhU5>GY*M,5M-krY2_a\s/k<Orn!@m+3ndXc<jj$E:**gJU`+qrtlFF#NeSWL3*@e
%h)TR`8;$pPBDlc3[Wq0GZi0Cn\A%k&ot*;sA,l0W:]J%j!*RI>g_[a%oaai'-N]2)YucdYr!hlE_ja9.r&`c+pMLu+MtB:28):Ya
%R)`%ao&fUP%W@rCd-I1eTA,EVpI4?krq<kl*4k[$J"Q_RUkShkb6[eE&P*KhfD"mUkM,G&pAWUeq<a[-CCY5X]3E1:pHJH0mD7rX
%hM5J6H+&Z&[%Db)LH3$Ad5ZpU55a[h'7KZ2&^oWhqqL`.]=6tZa8Fc\`LG]>`IHJm9e,nsagVQOVVb^n]4=jE4B&+K2#oc3jh#km
%!WW-=53@e'hNJ7.Q<gE@L6oV6gjT4Z="oY.4&*>*HVc]Hka(,\s)<42:HS+3r:9d^ocjh]hRRoUcOT4:_dDl)pupNsSF:[jH2@3q
%`EV&3a@1U7_:=!UrOu@ihB)(p[m(jU2a8:"hnnl+pN%-;Z&fGocZ7FNI.R'koQ[2'bDQV#?_-*Q7?>aDm^M@t!XX;Fq<l56q\qVZ
%KDgZKIslD8k4%Mq$1?)fGB6"J5"5C[^@;s+0!9JdDXQ.jWaC8FJ`,TK1-Qo-`'aF@&]!'-ma9D"MIkh8*(6i'h4sVs=!o);aA;8\
%HiNeCB^Pb.*8lmMImT(Z:Ob`-s&2-J,]_8854XPZ"/!^Dr9$j?Sp^%q"?5A[m;mY<qn2%>2/TB?0HlhL5unXc_@3AtU!*6-UVQ[$
%ouXh0m\B'=[cqn'-iT#fg0Ia9Vc6;NS_'_*B)84'.u3RO)S@X2Tki+kD0a,Kle5)I@Q<OK:R>;i=ASP"+A-N8D;2^F?ob=pm$c+D
%Rat&\q%Q]UF4j=S1<\G:Zm"p`Y1)Vj9t:?RR8HZ]jG;R%Co;&$1nfepjjJ]1/Y$umY2qKY!aADY"C_Jaes&475$bT+_pm.=X$#'1
%CI&pr!OpeC1@%h6-e\k.[aR"6I?mMiSMrsV'$tf38[Pi[O2-%9:"\Uuom&^F"oB&?RceQn)5]7>!uk$b3M"=@-bkpFqDV-Jc)9;Q
%eIHD;Y&-Wrip"&*p#ntN7@mZfk)L-s.l=(oSkQ&-_-o0(>0?u;:@h03!?dBN2h'RXbD,6=7^!pHLk4k@@n3;X6?o0=&</[$NGqQd
%I%e)j7.<ZQh@u7e6!;gg7dkHOHofS"nZq=X&W?--D)_ju/HYAD\C*s/S*iPqMlGF_;_B(LQH]Y)U]Y,S<qLMQF?p$cU"blE.r@-U
%04iZ9!cOuX@c2Qia:@%I3\:?[@],'TC`.t(_Vd?$Y*;,DQ;bOr!$[:7DeDE07\jiqosDta%'B']Bes0YiZoC"difooG#"t$/1939
%6cdem1JM?%I6qe9@2^5@]Y8NqD"qk1;l$mIgKMMEf8a\>rA;ouBJa1$'nM3*,t,/he<VRg7+3YC49KYm%BF3,nKa[O,&as)8AO@j
%Xsn5)ZttSM/^<>C)1e1P<^u"6.n1*In4gKk'k-HKE4X@+B=Yh3R5SA^Xu.Yf?oggk,48$P'%_B&_eKos:;0:acO8Rl<^A%nS%qoE
%!e?#nK[3jHFD^Y;6]aM7f1ndS?%KBDIctlj)R:.[>W4rM\oW6P)W.2O9tHgQf8VGPcs$SBm;)@6e?T)=e<[Nu:p2=aqAKJ8ds@q/
%7o>cld*KX?qZbdnrCJ2YX,q,o,Z-T#U5ceqF6'q<`8&qOkR*/ZbTgG,&1Z&b[.sp&<@AX=UT)C:VF;mK!TuT<*D3]jLaSeY4%Npk
%=HeZ8_3p0C=Sq"VEo[T1$P@7f'=u,<]MW(nOK:gb]Z`-U((s;+]7'mQQ;ilp8U0:rUr,Vr_uQ;c@6XjUGTZ_>!*b+J%_u57j8a#-
%ap=fTZlVG&S7J1P840::$_)Gb1->s>m7AU5a^!D7&CMGPXQBWgW=TF5SM"+]E^o)uI[5*E$'pZ[[HNl.`"2`FafA:6Z9]`Zl(Sb]
%<B=AC&s=0]HO-SE]PO.o"#`r_.;V@(%"R*fZ'Z*'e,*02CkR;#O@5<X0lU@XVG0uR[8rHsMhrkHLA\5ABXl.n,%.C[]`^0(1I:^`
%pgu6(Lnq>jD%OLGYXAO:m=DL2E)`V8K?Z#Qprc'TOFoHO6<gG`_WO9GQD^J#fiBd2ieV^,2?e7j8k5a;#[7GUCc1OsI4L.rMP+"+
%#^=-Z^JkP-,*+iW+"9i[=Q+W9)GMO%Z:lHUd:@B[!)?a&OA89\[82Q[77A]K4;HngKpW4<'B(6V^+Dp-3CBMci*&4M0#WsbS46Rl
%RZkT*.07mDP!%?XX#JLUX2r[t@-a<n5Wpg47Ai[]!_d/:i^"bX%)>V+7i4/J!D$63JWn0F&P,<Uk'lqk,0,ZKp^rTuU2i@-r.,;T
%FP$r)"NX/&NYKr]g<><s+Ya[eU`(&V0GQp!@G^Xrp\>Ao=(0"Lr(If3H"J5A[L9?.nPoi;:./b!Z&pHKU)M-`bck_Vr2S@qOtA&=
%YA=`bc9";]drGT7-F++H?d9o97'rNQ8^du#EL;TkWuUH3,hfEq%R@a;fM!TW=JVV:@epL`>u.-Ra[nEdpW/C#71g.F"=(P);a4Il
%$RUJgV"2Q`f[$EW[u65C-m9]raB;1^aif<*AWe26j=6lL1n::9dconjb>-6l,mAJ>3!rVQn7g-)dZKu2Tc"!6=b06'9)tkmZlWZY
%]L.gL5dG!%BE/[iI_^+,>\=iB+tta$Coip0R3n*QV:-Y3l_"7CXqqiQj"-%IgDXol&")C`JDZq4W'Ms=#U3OH>M^/a'!79c8FA8:
%/VprpYB$BW.FPf#!^.(2=!KS-:TY2*FPJ&d?A7-3nKl97/"o@n]2,Kn!o;T.Z;fY(;W!FW&0#)*5U3+!AZA)/"EYs:[L&oc=Yp<G
%A3(lQGuBG(\='Eb[&Yj8@-]@SRF)a_1]VMIda=6bJiD2DprNXa#8</NVqf8%@@@M8P%V-]-%qN&\Z^#3;sP&C[YVG<+)%\16:"^d
%As<ARL?.s7P,LAKPoq^3KoHfSV=;PtlmOhNAP!a@%&7&ehb:tV\S8tlPZ?sM]G.,<!&?JZSnU)*!2gRTK_[tlf"B6o-\u!,H5W<U
%-Dggrmgq39h.-MPd^mT$bS]pc[;RcL"^o)JY2NfS/2K+r*E=@L(=Sq]#/UW'[^;IER8IG78e%^>866u1JVC+CJc17R<9.[`fK="r
%ePdiL4gF?c,b(_sgQ8.g#c-,d2D0lmi&qW))WA"o9/$p!TpN]Q/?"YB2R(!(?p'^aB%PFdVlF0]p.'!b+h;VcHDsh6_XV1PZ&69@
%@KWk:ZQ>@dj=#g_g<,6dG6JR`;=%AoQ<g"+XuPOGitYa:Qg5:nN-bAZ+;aF'MPqe-MH2rY/n32QG'k[1)RTo$&0%PjJBEQQ82).*
%!3DoQ`n(Lt]!;fo9?[V`EXPOH1f*(R`+6LI%5:-e!d5>MX&ND.J:2KG\Ih2\FgX=XQNp^YlKPNmK[22Z!3"N[Rb`)qBUWB\"0`0r
%nM!N.mKAN"7T.s7#>>3E,ZKekK,d@'M?NM^UgX7''S:J+YIkaf!jLQ]@%Q44&kY5S+eXZsFMF4Z'>gU"D+fD%M'#(>,aT/;9?,SV
%e6n=C2NQJ4Fq^0R<Ug@IbopY@bmieH=:&2_.9WT-$n"]_^1)NnY@Cck@&>RgOELLfd=GS7>)j:t=CA]_"WaZ^(3N8Ud"t;jW_>F1
%fi9$r"%*;dm:?,#fQV!/.U!@uiY%RgPe4nW"R9!<F]9Yr!m8['e?MGfOBN"bT/GB5)6eU.WK);^f'`_bSWUR-;VR;fhXI2*,+G"1
%$b-tE:9ZVk2X_.bTF`@6Zlg1k!FuNIoL`7-XPMk;6^QaR]DtY*$##\uCp;)00Q&>o?]&fI=L*f6Vcccr9kHb5ICFgr[eU2B`k2=a
%>i.^O'=h!M!d7:bEPb<]OtE<N"6!/`/h(K:>;'2^b1/h=Q-1o1(+_e.Cl]cHX[UI$_(nA%$/=LUOOTeU_sR16Ai?JQb:3cg@[ENA
%m2Us=R?G$Y)()I\^MVSZ](f,r/1(k&BbcSeS;T5sDL.>]P2qb>)3HB^D<eE)A5`"E7]"1e?p[AkM$?,Q32u=F)8'=cc);IQ!]!J[
%-j2?RJe#1A*)aG:DuJCRi1U:3DB[+K@!fjd;W*77?C8$^5ZiJ;efeFlp#9#WLCoW$LT9^OWs^1T_R;/fnHbV<H:M*)1_gKoV8unr
%,n+Oo#?tq2c="OADbVrnM@8/mh^I/Q7CTn?,\M-2D4'&.$I#<mKnc^`8X/l[3gaWIlTIhH1Os*.R'PAbVUZR31n>\E">5>(A=Mf"
%DID!_9:aZa8g6f47&4Eo,f<.(KdgZ$)0uRp[NN\'Gd(:5K5F&Q#F+Pj27,*hgA-_8=!AN&NSKUf_S>k#MVDYs4L/e#0<dq<S!i5u
%j]s,?>3Aj!fMOX_ktIGWo+6/l"@FtDniS>GJ;H8Qe-A7ISk"YRJ?/.@!SuHA@-/^-@H`FqTs=ETKLC%FB]?ik!FTP+&81R@kdnD$
%#A9Bb$>`p<m'W=2h9aN9f>.Zj$X^6qCCi3d5!L*_oBJ9S0s]3-JM>6cc>+)Wc8(kg#H[.?)ba@Eq$`ORKf,<g&urSnKjM)qF;?lX
%/Og;&Vqn@>"0)k:MOs%kZZ/'3#W>9bl7gH$R4IV,D;)-0Ag&L.O?EO'QCQ,oihn);i.aN'nGLB[]B()k#.&597OW=L=X<gF"N@=^
%!@(<-:)tUX98Zq2c..Xa!F8]0`=oa]F#CdqcqfIJ`97ZO!?7$d^T%_3:[tE8-</AZZ8dpGe>ie:g2GLACdJI7B\K'jj8lcr`Hd!m
%H;@&W):]gZWg!t..Q34d3/][V!*'.i[Yu-T@CYS-1]k:RYr*==LgkH>(L`_Xh>loF>1en:a>bH0G#p7(&'^>'3Sq_cPU]]r_GJ-9
%clg'NgZl3h'8M2nU1W@RgLaO8)"?IVE+!^pkJ1ojFo1=Z[EubK[?sN&n%^0chD8QsStro=Q&J(@5U90\D@oU$%`([ZX?e[%(lFTt
%D"(f)N#^2#ojcXmYla6phM<upaTGA9gb]>ZK:uA.+#$/`^_Br",Z67FM?7LTQi^BCeVKM<OjF,6&\]\Z-7,l0PG[*8c-[T:,Qse:
%?iX_H!9:=Vr<^JcW,=:1bCKab6kp5MG.%C&3l+Fi,hQPIA/B_5(J@NS7fb9ND%h$qB&WkP<.Jd_KUJ5&MQN#[6F^&R&.1[gg+3'o
%VE4,a6;rPUJj5nV(SZM'3Dbu+`%'.b-&dc'R?asr<u;3CfVV[U)>%m6dV3aXSBO>&R8JKrY3s`;-aX]>H3?pDL'r7N`9$eGUh(^,
%#T4^<Q)tA4*b`@=-q%=G/(qF;_JKkt1+`o4UWffM`hh-ea\`$efa=B!k/.2!_TV!6c!D,m\U,(mdiG$41i:]A"5&i3:kB^Bh5OiY
%Lr3YrAJ!qiBVQ9/pp,NOVV0H.gd`]A0GQL\URa=KEt;q(.hSbL[NT_mHBMUr9t[0MV6qB``*=E/`*A9tgVb$L9ik$Sg$n)]0'7Om
%<4fq=fsV^@CCiV>k-CDY@2#8I@s;(rdB/5m$u_QhNidDC4UCr/fNF3&m:J([LBPXmh(G%2<Ah:$<1$hX>$)qFaci%FER.XT9smYU
%?]?eGh89QkbtB$R!^[Y.E2&I+-D^KUb+b@JoLSZ2`"<k8J-ZODOp@A0TlX2O8a:k>M1_`ADLtb$aQ@mN<=M\Wi54P[_+e]k!&N&h
%iT&0*/fp%:Z33[Ji[CCr,(Tj_XV+#t7=l+$M$J@+!UQ%s!1&XNj6M@."a(F_@-oLd*50HDbA,ms"IXr=;4K`Rn=`/n!>Q=_e7^In
%)qU+6i_$aih^eSq(oFT^C5BZp';(^3fb2>+K($[RKMc.9ZB#c4QJcV8.1D$*(9@X;fZ"(=(Sg5oM->r_1)5`]d>bm-m-KgBBFdpM
%P@M[%D,(?Di3L;*?n!=<&qe8V>e6MPl6NFIIO75a!'=pRGQ"CABJr0k%B0ZT#%`fa']CD>2e+ZEZ2cXU/d9IudoF=,)B/oiKoZN`
%L?^K(^tD\=!(>UAgW".EO&;O.%1_us:`>rPnP@ub#NF7>JDZsrLNgZ>"Q@tc,Vmc>&X@*HL\H=-:uo3^c1)*"2,^8=Z;%YF%k1Ck
%0-CFPW'Q3<SAUA\em[n"0b=hjP/,h91#pK(h)rPn[Ftm:i^!Z_6?G4qKaD3.Jg8(NRD<FYpMcTaaDd:]#9?ZP34;=E3a,T@O20-O
%Kc:u=/=iZgK`bqkS]\1:(n)#K/gn\8<4hq-lAc\@V1c8snB1:c10Ij1?7(W]ioXY+,UTt$7W!]UHm'79f2b0<nYA2uaV]GbV&6ND
%`iaoTb._IBXE/3gNZlt:7*MZ>@@=\,MO5W^IZ(-^Q(s)G]"WtR5$fjbn2;m^DJD=+HY`rHJ79ZO*%"MWW[gN47C'lK@A)oK0d2`/
%MB:$j]cEb8\g]>C5U?Wf;Y0Re.Q;J;[tsVY'N5l/_7F:gj_7rk3EE%&Xg[Bo:N4s&EeB@0aL][4D0dKI`R%Tf_&jABn^WnZV5Y6j
%\qt9::mMmeb]*&GQ*_'aMJI6VV4K6m!@L<dc9G5`$Qk.c6f(VXA1eu,ZY@K^_Ysr]@DA$M<#S2-W?PX^QH!s/h$^r),U03I7+[3b
%pP9O6?#N:O+(WqLTh&s[NC%`\KgN](6BgEe6B,:#]+,]Me-C0"cR<SAg$FNMZTJ_bfl4nLO'o:_lm\pgo`7s&c-`2\NA0:B^uSKV
%.DFR;X\J.c69?o:BsZ5i2Q:]Sj"/@)g^Vb879bI0_b#nFK,,RG5,i-&j1Ff%0eZQckO[ZRAVUhsVG=rSFs;$2FcQe\im\5M(.77+
%EU[4lg\$anGRuJ^gq(@]p+Vk.',Q\<G8%1o0Nte$dIo8R!OXmJ9.9<O5r'0"e&H.<_B,R/.-jb)h<.AL.E1X;!3S#oi'-F_mk\);
%3_FYoN*n0%NW"S6\3Rcg'(;F;DVCb/#:U$G&S)]QoDuIip?TNVmTp=/+lsu43WRp#4&&sPY2_X6a6ib]M"'\4A<rEk(2B)e@6ZN)
%Aj`L/MLsY8Zp5C6P^N77/D2rl;<^2$Lpb/@luCL:V\AmU*YIq@[([kKF&H@QHj2)X@9H^Mg74Y3eDd"m=HIe`khD<.qo!Iq;.G\(
%Ob3j"#9K`_7P/UbB!@oQPtf%+H"<Vt>@b'Jfu2h][8(M8NH@27bYh`SQ0i!oAQU^Wqjt/L#iO@uD&!b9j']%6=Ui%Rk%A5.Q@R!I
%AXq,;b]H:XAOGnjp*hC*b#I:5(Of,`]WO'6d-CV-ALpY'U9JM/^:>bD%r3tu(M*A*Z9[QtK%8@6WF!)foBmP9<08_TT:kYg5mJP7
%``*Bj7HhV*lB?P0=uYY3T+c>`mb4rT(9L#*\ST9/Ysh',_SNQd1XTUN:6V*&Od^h]en+)n<^iFp=`qp'B2)K'B&!P->JT'Y)2j]'
%gV@D9eak&@96T6M%jZAR!N1FGZ_Y[@E!`Q!MURCtB"]+,PhA]3R;OP3A;S>/4*CiTRk[2!iJ.D$+oq^"LM%:F$YE3-N(V(l@&6CR
%[b1Kt<$d&L^<)K<>DHoD9GL&'7^^Uq[7;]4<lgIM,se4T%+8OH-;KXgb2@.ak)85@,Ml_`+bFjmN<@6i&uf/H"qHIU#_a.D)"NaA
%QT0'i>Emo?gh&^bfk:TLh:Zh24;gGeER>7+%2t/IDSL+j.,*>p\gfa,Wp#g\OB"HGqPfYU;lX;Gc:?"YA,@@XUMZ0o-gXXri[V'p
%NI$]rd`-G.2I'k47PWoOR43'+]9IRuimiosK8OH&ZOAFL:NeOU/jg5Hrh7A'8#:*/%iT\XFI9#HE./,7=^YW+bu0H];@TU2rDj(X
%W747Fl6@t''($%&9l6Vmj'!72,=^ZlfB&[ZXqMq<JINjHPkmfrEO$&],]YjXCTLO"h3+Q7K52qd!jfJ0fhBaX<n^O<#chu;,-6Td
%'u*8O!0&/]YR!d%g+^-KcMD(u[jV47O!c$b8hklan)4nHcno9r@,riZ&4"a&c;_o-PPq#`4GX9G4Kef3-4@Wn&R6g)!grI5,(E9g
%6/jA?7j2,1$0N@u2Rj+RJQ-juYX"F>4HN#d!Q^uWJ9kYt\>55B3-%QX1BE>ri0tj;?,bWPgHlh?<$\/AH]XB0UF5)+!+rGm!&`bL
%&%Vm0D$7^\s58%ZmpP)SMT2nkk2V>*<k&]-p\3UtgrtJ&C8KX:ihAdKJBKG%2=>+LAlpA8rOg2uW@G2D>k>l9:$-cYYFJLH^+7I@
%T_k!F%'DW87nrh_OYMfT4il`LGeH893iG7ClE/sI+M\E@N6LZj`9H5;R`C$\R,Jqb:m:,:^rHbk!8D#*$=b@`0Qjtq;-[K2HEgU?
%Uae]'2Uum"Ph8%j6jXVO-$$/)3t^C;U;7=Z@((+gW*UtSqp%L8<^_&&LT#lW4:<--9'C#Dcnl4"")s!5)nB^l9$h99[`Ls]>C&\4
%!Xcr%"&<PCnWCn`9g5hV[rtcre1*`:m8c6H;37(R(oE+W3L$'ITO"H(mRr/3_A)p7%-?38&GO\-5Z"t\=Ym-+[P;k.IRMSFTZ">Q
%HVg27I0ht/SW,aoTW9J$_$N`\9sc>c6MH?0d.JQDZ#Y46g+O!S:u=e,K!R^j"q^Umogk:#T-hBV19LX1C=_SSC1ml[$fBl^(N<KX
%-3hMHh:=m3#LDV&Vq^Ti?D7l3`>+gaX+(D:'nI8[^864Q?\$#cf7Ss=<(ga15s-i,H<p_5\5%S4&afrUPln83l@X]hgn<Zd%m]mn
%E-Xq2,._k-:-ajVp7-\]/W3N`DOLhXb<>FOq3V^H/CnNshJP%Rc4*V'N[HEJHQ,pb'X"6p39Y(saP^4S,?bj4o3b`ep'>/Xd(/iU
%2.n0BB$WX"e>K;#4]Q[YQW:C_%`_>=N%Uh?7_8q&)]1CS%?Qt'1.2WQfOhD2f]@7KbGP>X)=rgJ"6p&YUOgkGcBVDOO6^BXG'2Ht
%5d8C+HXOl+[1rMc&Lf(`54@IC>k/_uK'hn_&A%fibSbU4RN0sfQZ7Z-^W.4rhAsh=AjJ^0WmT)j*-*U\WGb6@A7O?,=CM&t)5\S>
%HTI]8iXg^p,iV@S0:[`r=0hMlEGhc.('ul"kmN[&`!3b"Z8k4h5j]/k_3M`m"&'+4!t9Qec,VM-PQ<,NJiN2J`T@FmFMubfgboI&
%lG40GF"`B%:fBg%6+*1*&:BmG*(2L<<!N6j6b2ek5d<!0;(ngd"GoT8c%Yf$/7%%_5&(iULlIA=Um7BF$#-PPPXf=n\t+KY]bE;B
%K`hr=me_8F!hMMrE=]%#knV6:#U(q>aS@j5KO>gRr"uhD:s5#ITRaX(3tGG2,W%Il9HqKq;.CMpPoHnNY!g[hLi'eKn-VJ\`!o]M
%ggk'QAKuHE,,j;g&V(r$'nFQ./R/d2lB,8M?\X,4-hWBQaiUVH!4K;Dd0d!r5NnY!O*j/9kComYin";(2`:j4<QUWn4<VK3g7"Te
%CC&<\"b%j6]S(j%I]!Etoo/);[VWDR';l0_%q,KHd@FBp+Hemn2BY(KdoUC*%n2DYqFESCNQYi5"B16Sb/DojaVBC$[1,;]#T__*
%*eG$un6aM^o6bKbT*7@.8.d&n.I]+eg#,aUE(6_6c%FOQRQ@3/ZA%!M)9U_OBj6ML=M[F/XfPiF@#n+qk"/+fYQY%gi?(VH1,0-@
%,b5oV00$aD[LaZIe"h0jUG,UtbiVq#/eV-;oIUe531'm9(Vg@gCPO)lC$q$#I78t9MuYFp25"`G&0&'f*'oc:fAd[E:<CN'&-n%2
%`Hc$pQZ+nq#j<sJ":h\gN;+2\k%8UX_l4>>FV.I_iRE!GPY=t\*!17A"Urk6R)t:"ddjJkqM[fBFH=E>=.'WGp9Q;TaA*MeoGIKG
%Na-R#'"#eQ'Mm`@,C5!a1e1&KSM/lEC_#j2M-PRS[TP`Q@uoi9Y!Np8RbK'+VAhoqTSn>Dc+6l\l0^POLQ;neK%O-Basn&+YC4_:
%\cgR%TcegWpp7$sA/WNK[kPh*8+W`e`Iae+iTl]eH?EfgjdM*I:5YoG)4ZD$NTZ>S&*AJ[$-Z6&F#ZuRpgg#*WGDKPU&#'?5)%NN
%o:e"AEt)YsRmN$(=Cr._$7DKmd?$7sLkd5VFu?#6MqnZW-8O`i#'#7GNd.dX]-`;Xa"H>P@Cb.J[kYGo#eC;nO+Knh$9W[E7d)1h
%#._o,#3SQ@M8?u&:q3-q3]N!Q@aA1nM5!h$+N5<K:,fM3T[pq@6-r'u96%duG(jFnm_"Ai3Y/a8W.=@%6"2Xne:Ha;`hd538;mjf
%'^Igr"UGTWj#moMiHrM`F\sN>L$oU\f6Lu"/Z3<Dn3"/*$lVl-FNZdhW(,D*&bO[DL&hX&h(lI70;,ToWuo5mW1h(ON+$>"9Zha2
%(!>(H'e9A*^%=aYSREmS>N]MV)?NKU9('W>OQ=1hAC%.2P#U-W6WVjR_3SL8S`Z5[>KEIV+jqQmd&Z;GLA%0+OG'$(ZH0<PGld9K
%6?#-mb>#Y%%P31N44HVRr3J-EKV<5I66S(E]n#e`;\oe'RJ"uD#$')FJBmJBaKudoSbpAI<'iAH6,caR9OP`9.l-@:M^ZXM7TYN#
%0L9*K;4;2S)S>ig's-<!HC2Te7?f>3JM?YaXVn(h<EKNa`lBTB))er%4#*h</S*H+S--VKfJ$YFhjh$a:tNR3+,G6hKW6)\fN!I6
%Tc+QeN3FPg@m:0r5rZ95cm#Q@KW<M](n1$fi*#-q6!@H5U^!mPq-iAbjib,NopW$W3FlaH%If599#ueRN*C(NURNM5>[^4-G,9RU
%d@:\Hd<RDV<:s4,.EK"QAAJ>gFf3`lk@4/9_A)@a`Ou_2Z?\"@;Xq]:IPY4t>m.=4M]]Oe_-W5U5.>])'G,<tdq7[&[c[aP+^Lb1
%"]CAC:T<eLo_\4\ZY[\$,ZTsa'WIUpDO?E6I7uROY2k-GF\r7;c"qUW?,FN5B]:@ANMI<j-aPoSTM985_\]i\mZG16Z/K8ba7q=?
%4;+.7icH9tT4^L&')0G1D>3!Z]0H6qeBqlF%^h(+Oq?b*3mZ(ZboIS.;BG/-MMj9a`&@269%n]5Oq?6%kWa<Kfq-(VD,OFM5RZM*
%Ta:1Ad4:`KUVs-*_4M(l$TR:[)L$n,d/t(#mj6[/<<>2P/EB)_bNLee6=rB2P%N_<-ick'O6[V_8fl4Ckl[HjKET4i2ZZk:oFl1F
%+Yl%*Ss>L&7KDbR"bRVpba0(o;SuoeOuBRI2;;YV#e!I-85rA`5^C>?ZG!hbH=!sdK[p#$5"Z!:a`me^[jQoWSJP<5\A1EZMSu50
%f-"O"8H\9+/In5n=D"N?8=R(>"ZRE/TH#l"D*=jQP[^:]%[gN<JlB.?oO`r*1rCA#$]D.j&'\*A`b,fEd_cPLG1a$:jVfhY8/u<!
%70@MgT_o?BnIWm9"akG*mb.I+RcQtQn#C$e$F(2Fj"\b[U>0BtI8<%I2b$7f0\r8_OigqK!l6t7c]kJ0)iV%=\S*7.><N'1`ViX3
%.7?nmb^N\)W`.M9L9%S7S7F-g0J*o-2L?ltBKp<mk$%)>A-?LuBG0)f]r7E2a]8&aG#:-!P5L#;dotQT+\@4E\2d>ld.$QMH1XK@
%M<0KV=L1E++@$is5gq2o8$R$P=&+"pH8M>WgEJG?"27+!%CEPbBZDuuV=$U34p'-@Qf0\giJHO7&0\sG&]+r4$6AhYRO]pV>3(&7
%Ud'^KOeL5XIL!JnDGpD&b@GB?Ju/hX_.K,rT4lo4BOIL0jL8`Bq*2[PB>B86nL+p"2SK"X,VR[sZ^*7n#ioF"'JG(o,NoNsQh/?e
%<T4En_9%h5Zu8F05/.P"N(/7PeRHs3]Mq:7Op`/M"(?\+=ccGiUM>A!:]i.Jc!q4Uh/SH[0-o%]b,&f<Moi.Dls`Y-3V,].m4&d$
%ThOZm7ee3,p:4;=&[839$nuIf@Esprh,0,I*&K%p4%g(d<:!HHT2F<^iYq<[66K7.?8aL=%t'KWE@:m,#`WRB2XN8H0gS0Tj<S]Q
%/P:Y0NKm\C,YBK@jBGqR@`34-27+n>TkQM`g`_(dX5fWf:t`52LgGm>E>n&hCYaX^J[d"S5>ctu-nP^!B9C^pG!(f":Bg=N+\mm;
%doLE'U/:WC"O`8i$SDo%0:DTM,jn[i?Cl=^.cX)Ik@O?UF##'ipc'?^SHPfT+e6rZc+nC$-$:9AR%^p]e-BHp%1*Rgaq:1;^iCYc
%Le?,'5N!]R'5$!O\h9KQjsaqrV\2H@F7-Qh(?cj^(</!D$(?nMh>g.c,-O$"pt7cUZk-@XX$[=aRqBlSc<Tb*oD.!'L73d5_U>D^
%ijsP*Q6%Ffh`XNWl7k':<4R,;AD#4^.hUiVV+"5m&&muK+f_4F\5C,\X3kgY9]0ehTnk=VUp("t<$Z8oHD4;0>aUKaJeq&t"YGfQ
%hT`+qPc<iC_qJ\lT+<XN=hn)dUZ)C-2nJN%rJB[TD0]*e3I*#kZU-H`Bi6IrN!DB%%b+iE*^D.WB;O]dmA$"/+;It'ZO%q;F7Vf,
%7O87<Cl$X,>^Zlp-6?4g*`WrH%"*3gO:>H;2UDh@%_P)"pEKiDV"U=ScO1SLM`&p0VK%Fs6$NVY")cufFk2?kF%X[p^ndHS[nul<
%^@W6IHSU]6%eg)ricE0eLFN;T[8*(s'ZDE`?o3[]e*OWs<Zu:B#"XjI7%AAh(br)N=U2132Gq\>TZ;iJP<I_CAj!m@!*Na5RrdJD
%*T!RTa2QVkM&s=IH'0Xj_gOrWNh5#90BC[p#k]o3XYC*<n;KI\BWs'DTod$MHGc8t*QoV!?3;^(0rofQLkHnE![nZQ+_q8s+;/dg
%OBpn^Qs/soib9`#:5DG6>X"/Ydc/p[lOj(MZ(A!TViEEf7R7:Kr*A2=j?#ng0)L8t1IKQL@F?<3J/&gc"7-:nT)f%g(LcNrr.!7P
%l'6[K`b3cZOC'0bW-QX%[S[R*1ckpc^LE#hAV\t?!-X'EcjgNK"U+nmfp3c^%&<Q;&b%Je]dPd7:ET1._O@9pT&&S&$2W0].H,aO
%6L%aGV"5J"&X2rdD4HOXGa\bCP#:(&_EnmO,E@D(!m[#@\`_<MjY5J[%j28:1&F'5>G/k</2$Yk2a-EQV\CoJ0_q;@"=oG^!2$'o
%GNFqUD:SUKAZ)8Ak@A@T8>/A`M4bcJ5U!9BG`8oR!kp]mMk]HM=.OtenLQ),!&BrZJWdT.!Z.i0'=pTBR5&A!_$&pF!CYSsRO*am
%-t7u?"6E#D?d2UV^Sd>"Oid^0HEPf1Lc'J\ckWnVqIZE^2@^(69K(#LJ.-naj_0[*H27j[H<%<jaW_p-BV's\lkPCipVGd0HEF0n
%4O$<gk*Od1G/J>3EE1&>BTR/DPTG-_"^hXhX!ADUE1*[dkjUcpp[uCNf[Dg9AkN`T22Zoe[X8Y<ZIFDaG]etFc[Z&D9r\VhXu?"+
%AH]ed<#C;:,g?RGHHdLfDPp#@:]t10>SXX;!48bui>g[LAd],=!)1'B@rLd"$jYaNnK<ebWfEd,Slu%2kPU1mE74Q,+]6ne]&Ynd
%_8:l"b$7auLncXbG!ed`LLujn.&8mXoN22,L7VLO40=d3%gSo;Z/\<Vf((Ch!p$4p,4_5ZIC1,<!B8S$eHkWHO;8/uNWi]%=&nVu
%>"(63i91?I,B-]@_Opo%q\36!iL1%[MdpO6q9[RP+g+!:#\9RhKXCc=BPIb$S3d4&eb;%#`?P)'ebm'2=u&8QE+D%N<HG`$-K<b)
%"\ija6N-HNfEiRhAaaRn4=TJ+2*uC8@2DP30^C3+R<YFUE^$Fs>O!40j2/8LA_=LsWZX2d-1Wh$NmR3mpZO#3o8l.\g`M=s`)'8U
%1u?%_X\-?jbB9--2.$&"MseR-K=)HK_p_(U]BTp8O24NQ4!&\Xf[7XHm0l?(JoKG-H*ROLHV+0d<Gjc)#(R=+RW^---QaJrZ[fi5
%itPDgs(^I@IMC(S8g)=-],'$b0%NeHMa%0rjQ2tX=-c)r,&iek]&@KfTX[Ke[(NArSU!>U<@\9nj#(irMI$*B.7%T7/S6V;mbRd@
%l_`so$P8rk1mQ(7CQni:Ak&G4Nr_.1:!JiQW1p]a6h,%Q,I-iN[?G!hAonP6a[<Y2(0*6cN:8P`1M+m'F;"aL>0Kl-H\jWc0(*I3
%SrHoJk-;@5HE(X4:AO:"=LdK(Yk;-a6?ed5"1i7N5bp1#JrfnOpO\0@Hfik>fAFNt\4RER,P@EMd;jUibBAUm6rpX3fFYR%j0G.R
%l&!\27&3@`LqpO1o[C7/9F?Ahb9K+.L=FXpf'<WCR<Fg3p$L,$$"J1q,fh+j]T5<,dl4r+3_!(GRPk0>N,2Q%Jllm4eY)Pj[m'ME
%K#F.f\dcXAIp"V"h,<<'<::.[MFZmL&bNq*)!BiV1G\Y(9qMS74;Xl1L#T6rGFkY&NSS4.fW^F(.^_jcP0p,/opp`_`-CuPRM!4E
%]6._je=#f:W7Qi[O6i7RFt'ggp)OqbMa\UEl"pLnMAg]_bJ08q9f;eO[uMEWJg#gU>Jog3/;=FJS:o*>-kkr1X19FO,4Rsm-4tdA
%P]Lpq3RHNgLY$s64q;4bDt]u+$OjJ3.EcT;"t[)\<At5R8Z`,Zn0HDl*a/U1imt\,c1cV7J-e0J@4StEC]LI9Fo\OFFnfR48ohaK
%oDi$d!K3o5c&5[%_7mTM&4P'ZW'T:rRaso5XU_qggl7e[$`7jc@%):M$e`T%k[sTt&2$`7CbpY\hNe71VP:Y-M8:#\:#'5B(FNB;
%8*+:/9r'O`G,\a.P/.d6E_/+?S"s#OkbWA(N.^H^YoN/2\\#4>%7+!B"C#DsUU=j%ae2L5Hqs/?R]o$+QsHOP1[r2U+r/4Sb-S,.
%6p%_l>_HsX'L<RdWQ.E#e;9`ad]kcjPL^!ZOnHg=_K3+'(g4Q;S(<S36VrtaH*CJA2#u,pD6Eq[!RPCu.98_UquN1HA.KpZduK-)
%D3D`FNMG_A5D*qp7jE\5FtU%;;Xu7JAS3$7-lXs`RdAW4m4lSd`(;n8fYLi&+st3DQAcZJ6l]g((q)Csog&aoGMkP+ArJgNjM%#t
%)i>QpI.NF0C;-hp%dOrfjqnfCX5TN%jW,e>lRg1=k?;M\M]8+?#M2s+0mfa"5G#sarAoYB3`Ulg=[#+%B*!SNMHq.A0k,J8U2.a_
%9JGDu3R]m*\@"o<8-lX[+rK*3rnp%IFI&%b35'AsU%Yl2$(8:.;q_ElY3E,WTl&?I@\ep]mR*O_Fo=h>UKV!!Ze&ZX,NhpPD&c#%
%Y$mXqal&,^YfFgl28hJ#I+5MdYjnP=Gm[!SD2f.b4He,+8plPKUCJWl*dS[A,h&??-]toiDAMg`o_pDn-Xq$,k8W,HW&qkQBY5)#
%W;8&QYVq*+^]GFl63*40'kS0^0oD)24dZJD<Sd<j^bmOd#2EJ;p9=]KjFY]^O/LUZ-',\LZ-Og(#/pm[f%f[E2IZZW0o1Z((!4[T
%AG^q@7s8%"]8*+nTMbZ86R\*foYs478P4^J+?nUX%ihcF6+9[:e@CVVSAWF]=CG`3-;ni5AO0!I']I,<pp'n[@P&doF(Vmn'lf4R
%S[%9ie'LNW%nB?!,>e:MK@7\$bgJ7kJBa;o#?RDL^u*[q)&8JCW;6qTX-8'bII+!8/(7nk'MS7W4hhUq570XdCCS'E%;_\^b:Rc<
%@?o*mEH:ZG%nX*!U8!S[i/jA"?C=8H2E"Z:[gU??>)>L!XlkhX:a;T1HdDb^4F#X;<4$p<jG'+<0s##R55,."7,j>`aEphh9nWf2
%%[_RG@N"bV5UeQ!_(\=l>U"?IEGZ8[Cth9aK,J8jTLE`&db&VI@Za6g@Lm]4Y/&2fe^eS"n,_"!E:k)&%h"3dNu_7accBLf2Pe/U
%ilNri6-!PUTD"70+WdI]`l4'JCAcq/Tf,P;p16Th<9uL)9L-)_.N]-@+k.;`^t)'a^k[(GC476HX?MRH8/^NMA"1[[B5',69]Ru*
%)u%G;Y6XO-o#`DKm_%qG_okt?W=:E)`3sdq16rO&a@-p0?P(nIqLD$^/<L"oP>riUK'&e9!Fr!r\7PqWB%S3*U7,)0i7H#Zq@$K8
%W(V5S17IX8+?p\sY")3\;31;R(D#\e=]VC]BMR?U=?]>^*[=!GD1-sLbh<_I+CU][(3m?OhZ-#p@?,Pj0=P)CW?F/-k&]c0'6Ijm
%m9S?98TLfkFW4CqSV2Ub;2t$a,H[#'6l)7;16V8jW^V@rDbH?'ZBT@'E1PL4&PL:D7REYDP8,j#36!SbX\9t*_Gt[V5V"E61J3QD
%p+sdT`_3&IGDrKHJ-!p6lX5_GY"h.d^bUQo):1CEZ?g3aM`Pbj"1^^p:/b%\@okkOO!,Nd<N<\95sq!!$6o;5H\</`c4d]XAi_+s
%gDWILn^@uC)u1inCF`P%UU12pLT$Rm`1e`=)<On\MG)RJ"`0>Pfp[kT&h[ASh2!aW^b!Kd\pb81&imK3Gn&o/*r2[FCa,ufbs0KI
%k7C6=%\MC>aQZWNP#F,DLPQqlN\,F-d[7eC-'YtV0mP.AH=,Ye*TmL]I=SWL!ko!N7eNf`-_^?9jMqI`gPfsXc>:?URtq@dY1,Ii
%hDGiUUGOhr6#%LIaLSF^=X7=pEpJ*;[([Z7fQ1+<"Yja1ohE^V8njrHLl5mtBdiD_MP_$L?5G<t5pXh`\>lCk,DMk4$-Q_`7s9mU
%RjK,C]a(5mCo[n'b"0//Z;GddKWu+g2tAj"Z/HQtC2BCHL/V*CXNb"_Qu/&T?aHBX`/hEoTUJCKQt[TDe^K-[m7Am"*0^(;Di-%I
%Gr>MX#^hT1cN4;M\*ff=l5[>!9gaoB%Ga,/.^>G9V7lE1fP30]k&ogPPSO8["U&F56+.Wgd*U2]g*+5e*6n">A>aG$@f3$e!/Q9.
%\3J3cJsYJC(<\]G.jmC5];136>*Hl4KLVp!_'u>/nk$&3=$Y:%J:>d5YuO'OJg7<6*4maA;u'E*%"3"fE(-gF%I/%!),YI;"rm_A
%W]lB/D6,g($'fB4c<YRUO`Oaih8"=?gTVQu\f4h!K@'q&qCEb.>m![ZUK8fa>V[:Qf1H=c^cX'j$&j@'.Q'0aRnmP?aY$O^3ajTj
%j'bK?aM@P@3dG^(Vq&\K7>6<faWqd6*#t*$CmBn,eF&r6rb3<CF^00nd\&98&;&k#E[5c%[3oI2@/FR&.Ef\\3!#&?g;tO]QFN.8
%eMHa7eS70R:srKlG!49JE[!5'_C!<'#-+Ac_>)sB"#YieC-9lt[aj&eUeOZ.VOnd41iA$8D+C^TZI)[iab[]%M#%N^,jF$?30Np\
%`n5!Ok^i(W4k1[d.8<U_[n(3o=phB<lD;u%fXfaLHCBIGV_gP#Bgb*bMD:hH#I;^"oL);`4RFsg[!jnH:2K33iN1gr1n+p26OpY8
%cT2t2d$iY#RhgO2@Y,b$ZNn[/L<Ue'M&\n+K[;F#JOsS:BkZ4:l3i+`N2JsgBTq8BJG3e>_in8_B)lZ\ft`K)ObYGp@=(@m*u,6N
%@/e[:Q]RIQB^k.j=@^UbfI2dMoi]($fCc1G_e"bdCRq"U;ld5\=j8A\-&ct9$\C4Z%Ko5;r8Lj_KHZdYBuE<57ZYtLIm&#E`A!7,
%i59qA"<[,0"`#[:U/hhkc=e3l]h6&lfZ"o=bdt1!rPtG2bLJ",Jo?eR'0EK=>t8$c9l)PqSm$r<'L"D0J)t?RaWobm!8@5SPAD[i
%;:Dk-cO&3?>e`t%<*Kg.3J:We)36R41-Q7:`N6R<Ne<J0)DEB*0t'7R#^"\1Y2Rr5-Z1.1d--8)ntI.V$BM3U[o1,Gf$sFj[)Iml
%&/m-lT30%L.J3,jUZ'denV+E>lM.Uar?6bsUZ#]^\9_F"[s)h)GE8([$2"jSd"MrD>??TW34<<s&^M1YrH=+IP)+4ED_3T_pRlCV
%0<,Kr0tfD]d^L7!a%PN=]n2bA4M0a6`<R^92La">>m[I+0[,u;8QsVpEEY3"0QVnJDp)I=`1se=a#2sg@-C'%JSonCDf.jX<?MWM
%Rt?!GXj7%Mh(<qXlCD:)hUM-F;;9h^:Lt&J$@UU6"S`K`eN!//9mYX*Bq^kflXV0BmR%\p!+9Db<VlfIDNYRCb>>e\)1&^Z;AA6G
%&i?7CU*I4U:;"=I7P@u\Whr*_.<1%;fd;Z]RVT/2R_QrB$OK&*GOugUnQQplqMd2L_#,O=^P>.#gu`NJ7mN!XO)b,-3>p80lt#)a
%eK0<qMC8o*ML.uQ;@':U1mZg0&^A-1U&n+9A!TE>!cGhUbmrWnLoM"D:toJJI24N(g)Dt`cC:9VHU\1mmKS/-=(>(EpUE]M5\%IN
%@N\m;Fr5cd\M@&L$dqPE?R+2qUV_YL7t]Ai7`<jJJtg*t/u;H,/]dG=Ui^M!Ts&8&'+0V3Pd(PP;+-Mu-Lbn#ilV<HmkuX:,oIf&
%K[^:P=c6Nkfb_dm>KDq)nH#T!&J8]XG6$n/%FTopd1"J\9S`b:TkA*`2o9[H=E%4-5nK(c&_$S1*?@RNkOno<o^Wi)T*5A3)\nYO
%TOO#ATM,>;bL\&6/NC@93"+p^Me6-\O--&311[CD8=GHubQ7L;W2[<ng^H!"IS9al3MVo*@HS3Hc>$eC,W1#]Qc5cr>_>/@(7"5\
%3Om^&Y!D(2#[HimcV$Z7*0ua4O)L4Q_ul@L>,a?a\LO&d!1Y@EH2u(l+#2&i3iE7sQj':DR6aen,k,t7(:c6BDsF&<9?%l(dPlNd
%KG"`KJmm+Qd&H=cZ9AZkl6O8^>I%sc=.sM8eER&#eIu1.7G5&>jV@*QH%@j)E:Y7skKk*Ja9nm3_F,Snm?C$`$_n:ZF6"=i/_=)[
%Jm1:ALF:ce\b4RV)A3,L\u+XK'U3+I'J0Q'?+PqC/o]XXZP,E/GsM^uiJd2t*To#R"j`/HGZ'dlWd0j(jHRi$@`6on>A(,Y`)4um
%0")sA:^du_dLC8cMj^kk4aC$JR/$R6h8GA6'H<1&k&:a"cO:?0lIuT:oJ1^6X8-`U1q)qAq9Vdt"ZmrZ>^pW>M!);1``:($Ya7k)
%qIC.64:*N;)[@Uu!Sq&c@$g)=-)P5q[?N+j<]+npNZDk1U[fg++Ml>CaoG1c*OH75Ye(I2<]Mk7)Dl5p\`$,^>8iV(cFr<F>I7kt
%E";*UdDp6N;W_p50b2l[J?!W1$M7g?/tN[4Y'7bJ(kM3nUTl:-F/6@/15#K?+W8i:HCgpc!4oqu`[.T((TG;W<*JcPe%S?9W2^)5
%],<.A?DoU,&I:g!Q6UNk9N[9_#Fl)nIt1hN!YTf'(:AqALa2c]`9U+605hT9?oVT(:@M$5RUUf@@Ub9LZusAZ!R.OOH&U1m*/_%]
%JU`!R`j_GW"aNK=8;F8obS!nnMQB=Q;lP)%8HRSN1@]PS&=PTl-+4=k2%)'jfmu=^Q%Mpso$:[(S]f]jhU@Ag<0d8iG5@nBS!N)<
%/6s_NTiu<\iQ80$`oB"#gZ.5`VNo6>1njr"+3%,H+@;Z#L8h!\\1NhEZ,=-qr3/\QfR"T2kcsPOL,u%=CuN)2TToM+J?R9#!o^2i
%&dO(CP0Y+W1bsilX[ApdN_JBX(6:g;=tq-/%&,msUkBBGRg.8cHl@g(7B@c:PDs8'FL6*]dUF2ddCqS5-'AkrfkuD7a*97F6/VO@
%1*!Hd"KEYk6E=m*H/0$ZiPj],;`;;V??<:U)nb=#AWN_uhKa'lT(rp[[Dk!li$L1FnTCnm)n`pF1nc[5T$#$lZF<g8fgC!%J3?X5
%%=Rlqjsp#EibuJ7E26A->ca`:YXh8![eS[,J>pirU<I?b/d*n9')t=%dTFkC''T\dWENCYD8MQJ4`DgbXBTa4SD^eUC%[os<b3$-
%rj=d/C#2as-koKG.:WX&6fliB_WOaj20XE(m*0]M=HEi,j4lgmLu1V<6WIP0:pbs"$HdX6bb\[(#(o9(WmfTC4AD8?0D,AcOq907
%?](W\BH2;$`<?B7V=(N&C';n@T5&ZN&_KJi)1Yo2G514R$Z*bto-B(136dDboXma7r;-]bK-RuqX"WTd*^0i0@W;R5XqUL2E<=".
%d&F(<;"O#5:KfBj!40R^T\&OWLonu)6IIb(6NT<O:-pI]&1hA_'gartRhj8l$urPt<!aCq&^u!;@(-LCPES^B;'Sm_PjrTj4JQWo
%+dLg-G`2s)$(4VgiGHGfLTNi/jAV,%[a=;ais5Fjc5OV78E$SJdNPoVRg;HkYh!-]4+tpg0!.a'L0[AN#7"#Ad/dH5OqUQ=gT8p1
%JchCf6n4(uqRddMZNcl=:Hg7>:/Xk)D6G5("$d/T%&Db-b$+q8"ubrb#?jp7bRR#!8?n5pLoJ]%7]APF\dE589:E(#fs,]0W8+mX
%:4qqr*7=C7][(>NBIACo+ngf`84Zh<guP2c6LZ#gfWt!8";,a_$sS[H!RC-DTqRPYKL>VP]-%\>]k*0*>KfVKH)G<;KQqa*=GH]d
%*?:fY!=k`>4`Otal^f0>AQ'[.hc3#nJgR[1iX!KRP]!P+lGLd)7ppC:LJ'A!b(hFjl:d!P3aAFCU>ljW!&hqUkL_i2/s`Jn+e6sQ
%#h4E&"4[L$I23A"01rffZs7_[YUcMH2,Y/R-9FSFPQ]K4hT'ri`2YsIIj42]FUmed'XE]RgU4M2oUmDainaB'aH!S`.67)rJ?_2\
%1"F4S-A:0>N$=1f%)'k?#G,bTW5)N5N0%;+;2JYds,:ii(^r&ZWm[ghq`qo6e'YpQaambC:T4T.HU==5MAR$=4d[YlEdS3E=[BuK
%e]AIJJJFV-Bc>\NoddoA36WWGrE[`BpV']P*Qfg3eFX1l#As8B8Y6"cMCZ4G-uQ%XW+'4^l(G_jjtcQY#n9R%Q8ISCcqK;6!"8K#
%Ip"?.ES8A*QH`'qRl!"T/[B>UG\N7b>*"$6Qu+2d0h3QL:G\61EIf9t%0NgN?k8+Ppa4n%!EM&CHF<B3T6nY,2PX;(rbb[i(?r,Z
%C9c6EBkX3JQlkB'%PirU)@Nsje^oucZhMm'XH'^,*9^r=g_MVd\$<kcDd`jCeOFVDM]l]*C<,!'$lChM+u+jIl4:.3)M$BJc8n.7
%c!pac<I8B]A\cq&b$GT!J.Pl%;0H7qg,5$ilJ2%@,'%;p1)2=h-?KDNRBIW')k4c53GU%T1:0"-dYdjN=]6EEp-/OOLE1oFKSE8t
%9@k.;8#+S2R"f19Wr/M,[O\D`oi=]Eq?b-rTr3*]qHu4[ZKG(r6^TW!m7*'GU!GjGTomMB(B+?EMD&B2oN^k212)er4OGA22@hGG
%O4.YZgX$q[2:Je(#MAl(+OIfZlW.eK1V-Z8oS6$&#6oV.e8ff+jT7mtfJHN@SiH0/VH(Zh#6&kR*S\q$[!ki(cb'CUN<(t:3:1QZ
%/lbutL'0QoZH][ZRm<$6PdQ6a&BE;hAh/X2>NI-b,;:;"<k4(uP;DHW8`qE$A;`D<7_:Vcqqrc#co<Zkirl*UoJ*Q/;[(EG%[8o/
%k)4s2D'an\0\VP#b^M[jPYriJ@3U.s_L04ac,Fhm=Z&$"ZDMfM_k+9q.o+<SDAaA(oCZZ*(o3/_6KS#uW;8%fE*`2I2XJrj>%-QP
%Q_D(+D];=HW?XYIG_'7Ln'E<i9=4%d.C`pYhhN]U!;=K%Y&C-=foptrQR%q5a<omnWt\r#USSuV."[IJZLItg@#]%J/q_]_;#:te
%-p`Gkh9\/Y/V1/T4[QZ(Y"#rIEmQ>JqP=OQ[K2U>O^;og!55OR!.%9B#DPRV51%([N<)M?W`M5&B'eJik\aJuLnb@6N30Og`7dTu
%14jb;q$8lol218L+tP`FH[/WOo`uNLp0#1en]EYjL3jfKM\;J0j@^0AOcV(G74r9>*/K4&i^c9"a[!u>U4$&X$OH8?"_0JpQThVt
%)juTEh6%M03n3#\V$A1q_&[.$73fq+hN3^c;!n:l8sg^-D94.-YfHbdhF#O5#^g4D#7J?$YLJ(OoTn"YTtefc*%.2_V(q)I(!@eF
%4YkQ^;.Pe5U<iKP4+7Si<R$Y'W\umE/em-K!L?`]NBh@%3WP.U#%>GFClhJROnDjB_Y18B4]K#9>s>ZeCi$2a$+'4U/a05B'BL@'
%<__T\FhIhBJ[\M+2.36+.)4'ioMD\0@roo+Tjo\UXgqnWq7$dV2D/o"@D0JW%]sra%35tlTkpOMF?mLYRYDb-%@^6,DNl&n)X`%t
%j!U+ca/6ZO@,s4s0A3oKcX2^RIGP,(UNU*58(;`&M^"dY2%JGb%5B*n[[+P1q/?qf@Gq&`!hG&nS$nE95eVN<k7,_!NFF.%(g!=5
%*0<;h1Ib(_#:!Ue",afeT2`IhdQ2KC'1rS+;q>YVOQ671QN:rjJSZ4K$Q_@@(QmpT!D/UoK7pG1=U4t7D3DUI`;ZcnI4taPUI1VA
%(ZpA?a:.HT^Suhp=1OOMn4A8O#oR]*%Uu'#^!p9Ke@Mc@.\K6b@+Rt=cO(B:3uj^C>R/huX,JI-7b7\$CK6T.jk-\XoDm+0'+_8o
%EJFdQgaV=:_7LfNE/BVFoiXOHG[%h(7(DMDdbPe7,F%Y&BJlY6m+?g0G<Rj:b+,?N"?K)S%eOWl!/anF/J0Q+A>#*.elFRU=PB6f
%Za+HmIN"pS##7MuMcLXZQ!]efO>&`[$p@DaY*Ra&))ogeC$nN3TJo@AONkGUKT,UnSjB";S`sesVWZ[kW75\eWRqj;;df#V?6Zg3
%2cL&g0EUtY9f\3b2Qq>mj<JCL2/@F4#ddeIR#_"fL-G<SZ/X^$UPKpQ*ocLlJ.^b*k?UMMMJAru>m;GW^!"!XY'R/'8/KK9C5<]E
%PQM`rEVf!P^\I(]S;^0+7d)h.9C@q1ga6YZ;+&2)UDg.)G7l!>N2ERS-lQ8X`mP^3J\e9\DGWG8=9kI:(De9>;b(ffN>Al?M6qsK
%7uMu-Fs$FKJ>03$@tWRb)rCfjVeIn_`*"?/Z6C%f;2DE^>RpKj-:N4K[AM6an\OGqZ'AZ*ZEBd.]GAPtqCEa4]7j4B@!`Vi*K:@r
%05#jbgQ8tD3srF)OeJ>3"%*]rH1#1VU(8<ETuD7DeksPT$NNGDNl70j]UM_bNjWe<aB8'D$-f[Op4Xc-&1Qj8jUJVf`Xu#tT/[&c
%\[g!?MMj:5^-g4#Hr72m4Y7=H1\^fAmmDg9okPJTR&^`;BaO(m*NVk&2aZsVlpf=c$9b%eAdePSI5APY,B14AGfL%@?m:'*-&HMq
%>i&42E[qO"LsnIUf4VmLm"Utc[P8nE=HC-:U_]_XO]*/QLoQ]5lYsn(C]of\`"<F3Y>_1Tp-B-^(q<2%H;l,3di=8o05<73PRK-Z
%,8*\0q&(/d().D#7<SNg^f<CE*.2n@XG+[J-`mQ)74&J>:jo6oUoA7uiI'/64fH-T:`YWg?0JQ>QL.M].I-gQJ/Vu]W8=JAg5^/L
%),dj5,1Sj.,>;0F)HndX`78K$6[Xj?bc?p<#+u=")U/hW]RB%</;4:!J<II`>%*!Aq%l264#bEH%V5krYTmcZ>6mbN4()JV0mV2#
%>0,-6XpZ2*Kr_7Xkin;6`5"(.Aipaa6ADF3U]XGMCFEcPP$4ftiGrDg(!_:Q;\EprFB%n38!QH<LsS62!cMOF!/jI,FUF)oK]3(9
%hfbZUS`/s)U5))b"K+\N;46nh2(4[e6H+Y6f_R.,8,(;2FRatN_JQrYJd"OBBRVp0@rLlSDL_/ifQ6$Bq^@TJ-p7m\cO!CoHS'q&
%Zn:tcZ@TeC@R^cl4?+1)f>jP*CO#0\WKn`!(qir_!#$9*>G01Pbkf[*=gu?'BIL9qgdj1X0GcfbKL=duA%,--F,MH*,2g/%:.,q1
%56Gdopu+KpPcI2,d@qoHK0A0;<X5l\TQ-3j<E6ni['Pa4X5sa2U&'SEcN<ff-(\eA]B48O-6I9a*Tfd>/:9AlamhXE:_L\!Bhj6L
%.^B]6d&dQL,*1JP;4]>L%InRAT"l#4P]N^=aD6qG!tcqLCNs%uekcpqV9q7Ie"-hY+d,HL6\,9I@NhF2?&'j-_A[&XPn2o.9fE)3
%1)5d=N\tl_n0Hkg1NIg-<Gu-E*n[GAb67G?.LCqOJ<!&s#l$=%%"(Zgg#@riJ;V"lDFNX*N^QpThuT]=!sUm>W+BPE=!o/U3D'\a
%$mh/?0Pm4WK.*p:,]qQ4/13LBD3d:)H+(`a&#,5Li)"n/FKjNqUN3B6$mT^l"Yma*MI6P4PNq6Xe\_=(3$h9QN<R6O'm3>tXZf&+
%&(FSA(pHgpap4Z#2f"]?mmgO('):F,SiouXX,WeSL$.QQ\fK'J,)J'm&^"!2[hsXA*!:mn2Al`TAL5q>XKKT-:f?8bEC#V@5pgu0
%ZHiTlg&Pi0'f?'cC)MUlEek'Dl%mFVc?UQV$bHS)1UYaY">@.Er&bZ_o"#4H#q]KEc(?ijn3Utu-mQ#:9j!;'7$(-m.:8T,_S)5I
%0:nZ_Y=@S3gmUm'OBEm2X@=U0A,/m)U.sd)U\q\><5g-rcK*N0r4[j,86EIQA'L^[KHtZ[@Zi?`%93CMO(2`%4,m?F^lE7K8.R]0
%96*u;Q!Z,M3L#=/a;($/=?)'k/B@P^/0KcHk-]%$X&kG/L.YGGG5E-I6g\?`D'>-oniIhKg"IHq]I6,qfj_6q/D4Lf/JOWFXIS6@
%A[a)lSO^554CU*Aa-%!G'FiTr>`"B>1d*ecLWLf]kPWF^fJ2`^iK-_[nZ#W]\eN+4=58GlA/Z-;@HY-MBgd6hU^F"VNshXU4DVjX
%Z^,N'_sp?5ZoB3Rk#47s<D/\`b39c+,h>gKm*Gi^I2;>&aWF<eh1m*>rq'Pn5'V:7Ft_^DI#rM9mcs4uPC4p.n(Ne4:%Pd\;+-pN
%B&7N-.5;q2;%#!.1b#T&.ff]u'[k-k.Vb`X7t$Fb;/<"DN&mQQHtbD_:Cr<A2C;m&hPZ34jiYodB:;bS-E-[+"/=,[eA'n<?KmfW
%e5#jC0Os+44"g.OPl-Z?4VR\_'fP?p5@.]h?QJ"i^:QOXF)e_(hp'V?]0.VodlaL567KC?k$<SA5o>mn36?YWIRbIb&_sgsRocME
%c3I68USY6n74`0a;[*i!h&]]n=Os*`%&KWJ;5&'$=#_WY?'F;M9?HBp7ag:FhI$\l6ptCrr\k>anu9OT6W8K$3t4NJ_k>nYd$e=5
%I.41Tc<f;_Irb)Uro3):r:[&EY8MKlpnur'0AbKs3dgPYoBdKCiTpB5/e?k7;]kE+,<pq_S:#jE',YEFYk6d!!)*VKDdGSFZ:M(m
%b`/A8Rq@M4+Ik6jcDG#Rg#Q$o'&eXIc,duWJs<4/7'L6CHQR"lYP?c27F_q^$:6Qo]2/"P\'jNa]Qb(LK1.m)p593E@,p%j0h*e6
%VOrC$h"?V.-04tt1-is`h`dj+PCd6L3>6WAB##r$F45b#(C13&ApY`\83&&Ts"arVhGIWDF]<J'_2C*sNVqqr)B0'Yf>&&3mU4:K
%F+H"MLJ>]&dt/@>kL+Vd?.a&e>rXW,3""*u_;1I;h1\Lfh@7DAbn!b2FG,mj'^rS<Wa(:4doX,$;AN-(QDplC]--qX[_?<VbU)sj
%4jSZW,%@^R!aUlW&tJE)PVOh4S@$L><j?:i[hEC$l$ZFIA?dkOA4,"iDURX_X)nC(:l&"9BMV;""\ST^@:)3@=SCV0eV3tTbMN=X
%g%Gi.FGANqom4#B)EBp(jq-,sOs,IKnS!Z@:JccRHpXQsB<Ml"C1V4WMSoo-"Ep'TZY-onjFa!r+GFRLL*M^A/2L3'7,M_*@URNQ
%\\r(pZFkA8leEhHPCC$7B*!Jo4b8f=jc7`pV'hraoKgo?L^\,sp;)JS7UL>cRhkqKd;qcB*h'#Zi2pf33.A7N2H.suq^"trA,/.W
%I.+9mT0+[i3oZ,6p(VuKDiL>EU*&&4XC^q)^nFg]j)2lL)0KWF1DYpcF.IUj\*.7gM\[BEmcGB.iCTc-<LTLV6Cu_m&7djU<S`FJ
%2.*5V\qQJLSroc%c-^DgI(5h^!T,,72J>EIk_TMk:IItkH2+VKJ-BX.W-/5;_s2J:cNVTLfVKAE:s9T8XlEJ5H8Vm_AG?&NN<7%T
%IK;T]H.\HZ*k'VulImLIrU5N5"kj)1G7d!]ipF#\578H069PcBbN^?q7Q(WuMru9#Jdec).nkNhXU#+O#`c*o3D#d.dM9iTEd(t:
%2#JoG"rAf%iFc:UIdH$NSd#%'YnJVc1&4MIO$!k9b=9Dgbq0i)5#fTsf8nHq(j?-J+m*^M.5[enpR<Foj&\hGn%%9OV18iO%/=`Z
%p#T+B-/#`A\n3CooXAK$\29!G5q]R0BRo33<?<DrBFH5FgTW2uo.7h7bVi"rER'j^KaG^\3S>=*(ONHDish[fH1'QXi$X:N_/,k^
%I=rEA#mW3#9:$uf!m?T/:5Kc)TSc#Vq/bg*J$>GU^jZSE_%5[<WADp4:Y*iN;0I;_ed@6\_>MZWCh.VOHan#E0(b7#2_.Dg_PBh<
%#pp+Vfe7(&^GP/t-Ou#Di&;I*&b;E@HY#aRBbEHW8Z*q644r)Ui5*p%&?UPQnne<BJndXAaML,O->le.7*J.XlBJZ!6q9<aND_0d
%EaX0Q7Np6#;Xo?J"hnZ]U^74?k>$_(Og)u]9&no-HFTPZ!Ip5@MVIn31Y\,dU#Dr\fd"=7P&PFrBbU:]`-DViOCC!ta6sVr6Lk16
%F#5F;(sUOVnp&*>:E5MAY#+qVUQisZ_-5@CDP@1Qb`AtC:#281:m*;PX"m1OO:mK#9=#InEYg`6njr9tH"AZDC/bBeOYD)WVd_-U
%]af:=1L'4@gWU[P;Y$3!Qn-jt^NgI--@WpeHIbtZk%FooKY3(E=4i:hE,Qs%o?"LDj@Ha#bZh$>["fS*/co%l@HO1jL.Ji"lho\c
%1;g,X@7OSToL`T90B:qCN;E+EU[HO,W_J:O7LBJ8.KAO4\EAZ[+;+Mf)H*ephdV?/)tZu"Q$qfoaH`.Tig?u`LJoL`5iMVd2KQ$*
%Lt.j6CMiH!-NG$u)&31A=ON=f]f'>SAO;s'%YN_Vk)[egMKFoJ/JI>$l]Df][R][Dg\p(he4]AR_O_'^O&h:qG,4fHHLWgSXi1-W
%mPHWCI6s&pg44U'CNE*_29Hl@:PJ`KhO)IL1VQO&BBqa[rOeeT,V44*O/hXhpuPEZhF":#QRh6*Xa^R6mKZbN$S8uMJ7EAK)6=f$
%CLpIC$rUW<#Zm7:;N@joC"s?hin.Ep)sR]3.o8Z,U-#qej<$qg4%Inkc%Y<4=qQ--N;o#o4VRZ5'.5NL#L8uAT;D`7Y&3H7$Mib0
%3c=ZNlrb()L9/H^RM-*>)hP5Yjh[u$eVoltca-SJqZX"rbCdNVlCe$;`9l'tKseZ#U-a64VA]k,m'fB!1:1h]BP=f[d64"Z's?Y#
%JnL,c4=bNEL.I?!I`mHqa*FP'XVRJgm_QmH6Wa(9)KnB1Rj[q[m?uEJoV3Ru6S/+]eFuIn3Xd$m^98U'=I866Ps#fW4tdL>0+Y/S
%37"MelPU?g[>18"":&I@f"Q<WKp#G5*Tn;h?Fm<NhCPlmOp7J.Weg=RIfWX.2sSSaNk.`QUM2/?e2RL$2b2E7q`_:ZS^(UfEX.A*
%hE`S9i[H&5J"bcfIZI"g)kpj;%;3&C(0`<$hiMI"\)kXNY`@5J02</F+eu.#Zurg:IU1S9&D,%+n-N*?\QJ--Q"q&'SQsbW"_F`&
%HGE4.Gft]][@2B%Q8$Zs@J-j^$g\tk@%(8!3^H1n2@(!R@aI4OXj^=toVb:]'Jt,)1bIK^>-1S9GX5Q?n7f#W;cnX5RM+Vm-t";s
%'cFN;!=[ZP)B,eJ,mpYWkh'&tVBGOte*08iK6u>SkG7YP4C=OGJiF<t,OiEcRkLYb#LRs#V+cd1PoL\]9sob:PjAj7&dm:.nGt;;
%29S?g,sDUe)A.#o+K,SjM[Ndlg(\_rmFM_=9%#q"H>sb2,A1pWaSn7lNqPp/is$)mokJ7e=bsf2/nH#l;^S\b")XRg0+5o=Me\Ne
%Jk>5mCM6qP%cg'#=K-lZMRdN&F5h3dC#P=]ZS+^16;JLX/k`H6p7OtJG8q0d3*Z^BjbsSm!Jqq0:"$n=le86>P%;s=;#Rs?[Pi'R
%L[p'O5*RsN/)a&<A/1mJM<uk1WIfT/V!+22""GYkX3Ah4',?jBV#^L!^Ig=Y6;p,4dMh2#3li]a?<6MWJ-S.nKo9)\bLn7qrL$e'
%4Db8#,K'TFO-j7`f<*pT9S&-lX4Q%s26L6n"1uA]$Fol^[Z-b'9H+)9gE^-HT$c\k3Y<MA=#keHP:ifDjc#[ulI9Jr#Cg(5!kKP,
%S:b0,%urp9%]f/3F0B/,=9FasfrPgi[TY7fgj,&@WjUS=$XE1bo\S>K=%M!1^"8f3>c^j6]kCJqdL3<aqoO_D[\ifIA!>T<#gJ5)
%UaQobe#)hVf<4jjg-UGhgc)>Z-;_ntM8NQu99pN[fK->mbZ`5ng;O;ZT\@P0Q,r4[a]3)`,"PR.BU_sNT"KRK1#mN`m*uEu,,1L`
%J92lVCn7Q`F'Ig[7"!^cN"I)n^b`e,+^<:)+&=Fr<tnlaXj*@=(!2AVIYkYAKe5dJBIOl+cg[)PP,Je(X6M@DmQ,'9O[qPmBl+/Q
%E3CjU]#Cuuk.jSI9ZdA+:aq2f&&CKC>bfg!(cVu[@n[?)pfLOf?G-^\c\m*?/OEQ"/Z)SV-P[nnCEeL6=9?iqriW</bWu=dTm+#7
%gjLU1jef^5i4)ha^NFj(\J(Nq[Vb74N5J)8XMJ]W!f3+l?n)As?k>TcDOG"DMcC?h#.lK/`i\oM5oEa<X8k,3:E0rT.VhTJ=")h0
%p,%oCU2ZeDAnYVk15A7Y/Ikn0%S#dE8V&tm"0\Munjd1[[N5muJ&6SMoaS:b8jPTSc2Q.3E]>"2VpT5Z-&9L!p_4BVR][J*OIROL
%;N#42oFI=<FJ#-5H?Gq_V'*:,fGPi;]uV`]+sqUQ<#\l31*1L-<[7Jg4-+Hfn\GI&!@,/SkJV&#ZV)Z$6mP$K8EI`6lhiQ%[cRNU
%-A!qmQ!0tI!<aFdP0l$bn9KBJ.]H^;d0QUO0eG$MQ6DcR/'<H)%!g^77RUH_O4pT[-DcYK>&Chrg=u26@]6Fk.uB44"J](FH!gi`
%G]KOLXhPo4s64QILE=kjelBfkgi42,#hB.q9H!C_XI'-[#<i5gO@nHh>k4[,_aDmc"C+D0,hb<nW<9AX^<'S,XGHJ/D3nC?jJ8:g
%h/ZaWXA^J*Ba].gG8i2(68R7'_SBHgm/dAVaGjhR5n%4(#W=W(#T&d)W3`D36/q:J&&IrGiKduL3:kqdfZ(jl4&Ln4!-0VlNWJ-.
%JVs7Z\=Eq?O52Pk2agVdm/=#[=6WsB\'V;pHjogXR-)t3PDs-84BDo&Mo(DE8g4QI#<'T8(rb\C`s>=o;!G(c2?NP3;T\6J^`h.2
%IIWI9fF:m##)#@YA8iVI&[JRaW[["O%;1ea"+bqp+Jm8n0GFdg^u;Nk)D@^30&`,UBGh%7.RSqUU^+8`E:'>*$!g8c^0E'tb"%>R
%1lI+_;f21m2.iY:*i<5B!Rt'Y_c0/f>-86B/8rk-gEDsu@fGGr9^P:`aJ!d$UcUS),"$I`AaD:4N'c:$_o!Gj^N5np&Nre@^pRh?
%"Q!Xq!;hhU6$RJ<2Uf\>YSiFr\EnMsdn>Kgf'8?/f6QGMB(s;]L!@YA^V5Q[LSRdAU-en`lQ*KeC@9Gh_@VpT<Gac\&f".2QQj6J
%0@n"t"YgZo*='%k5,M4ElBBf;"jlNi8<r*F-?V>0JP7qU:MN%2$uS0Rq^fFH>7pa!>bkDK_fj\@COJ]hS/"V;l#cV[?Ws-4B4:&>
%:qHE37,_1)Z/L(?Q&@7eTIIO=>rC$@L!jI(&#'O\&$*hhbm'hi*TI35>Db7TOS;(&@cbpd*@97Ka.W/7[QNmuLKdb7gsPQ[F_tFe
%U'c<Z_a?Xt`6pnVJsf9Z(m2.@.mbAgL`A"'c)u<#pEi9=(aEK?1-sQ%#8ols0*nt%Yfk^%2H'2#?:SWQ1,Q;lfN]4,!\VC47)PaK
%d'!r!0b@>Bej8Nf!f[jd.)QU]=X&u*M6sL`%XFQggTAn[T!K2dX5ZW'F>S'$^q$RS@>G1=*2*H8:B\EHo$LJMKBC.3F<Ie=:pMLr
%=`eNZ$@s;!M%8bs1\4/(3/V_.`NW>N.pVa8\m.f>-VMt3<*Hb]E*4pkRUd%P8H=`qkt2/_KeelUN3X>k>-j&<HW1JAA/bkfLgINF
%)LuQQ/>A#-DN>/2!KQW0.*d1$73D]1#g*>*kM3`l>[0RYX[%akQB?R$p'CQ6VF)+ta#++eZA7,6p?i;YIo\a?[EIqL5`_^IY^.&<
%p*b%aJcodh=iVT+1_a7MEOF!W;3VL]);JAOruU9":^mP$;p!R]%E7.BC3s*WI]^Jre7I,hq'<4gV8DdEBED6uk@&)!)t#/r$klG\
%G5fbQ,pr=^c>[L/_7;WXJRof;>!*$-;t$Tgi\I,ZZ?QQu[Y'dSE4sdU[g2St\'?;D"'[&,VDFW8dW$*CA6/brQ0tt^Q]Z47+g"D'
%V$(lB7RO+AoTc*Na(+Ta]ljJt;%$SqbNA+;<j])jhUGM5&'.9-pO;@m2V;Tc-C;\V>*iW[e)s'6+N]9c)G83^9Yr2]/2AX.ha5;Q
%<@#*:4pdl;9+oLMIj(0fJl-S>!>F.?5o):X7:C"=gnln_TuZ?G1u2D$.cQu<W+q&Kjs!S*rQj6V3+.Rf6@#J3hoC^\k(/a>e-Qa#
%aI6Qk*)@+Z,5HjXfa2<!]n[U7p,B,U-2+gM.-]M\R7/5;XD]6,Wf4*\,=8gR6eT%#@:)\j+_JX/%@Da9hH'.b7cm"J#b*6Pe#IjM
%FgZ)V<316-AiFB`.W;!Uq6Y1\O('BO,%,NQqA!I]6O4s\P0Jjd6MFle4s1s43O5C+MG\OrKu]Hn?5p4oPqlYJGWseG<P<Kn'4km>
%*(4]s`H0^s:P.FOm0DBU;]>sMFHJhR+Ku$3&ulf&clK'W(\^#2rIL7`k<El7d^_(OL30l09s_-f`B7(:RQ&%`psO"q&/Vp'_OJEY
%+:.?8BmG#?i;eF[NMBE@W5gDoRdbiWfNfU+E^%!013=1bFcD#aKPWY\3u/oFPUD+=\-A\<60$87a*OmHh.ftHfXE@\d[oPGKRU,]
%O"PB$Qgl,Enen[HJU%^JmlLr'^RNj%_NUb7J]jd"_u@j!2+Y`=Y:s"`D67!'&s?q]["c/-ILWok!M(&1X\B:ZGThf!jRKK\%7Rp/
%FI]sn=Zdn"CDk$i#'6pY,*O@3b6^uhpg#S';44K(a=h/a_"KP+U8<_Y0pH`j1E!bEM%ZrW!Xboaaft+*kM0p<HhoLAd4oRL(t55U
%/Rd<mGm&;Ro]7&tcVe-Nc?to!UqBc(*Z6L+,'-AhL^'E\k?qKGY?h"_mVs_hn:r0l6:./!4b&T%791cmW"?g377'6L,3R0^!;I80
%63/jlEENn<&4I\,0&_pHEU(r`"?_5?Oom"B'p=Y%N_%F:dhs=!Adlh5&n42^1\tY9T?1;pm1GG37Ae1#B`"ODd,Y5nHUr[Kjj9,b
%9kY*XQtroC.f0DN"c5O\OoN2)X6[%N.&-0rr#bVYP'L/LmnECJ%rVa]&L`_@=(!;LBEO/5ag/h<8P":nF/mOMW`^;%<>%aoh6cq%
%gcO=t+/dD`:-RkSMM&LUY5K/3=R;pdTk.'hiM!E2+sU>.Hr<X+O3ku&[BGK8B7dUlS#kZfaV_sB_@f,^0:R'\mjrh_)J.OVhG/d?
%EP2QcFNA[Q;]Egb`1u>')L82+<P"b]<Tn0hoLoYBj)i-_";XYeeN=H<?7#et[/:LfC6qTpRQ4%q._:2!<Vo!T!?`SN';jUg1%UEI
%7*K8#5eUeUp\GpBa1#CgrC5WD\-r\1E#XjH@E-ZYONZ7N8[uBqm4NroHLE0bpjfe95!phOAkS4S\WK=q0L?1@-QERF0JT@sZEpSb
%>48t)Vg-^6dQRGOTO=^+a*HDd`oI-sJWXA7d+@Qaf]1<kiPW@6JCWuIH9bH>Xo-$b5FprOT:+E"Dq=(Oa1N2(LYO=:_35Ki2PN]h
%D<=]oZM88;TJG%c3QC*2&p`o%XQ*cW8>V1_o,_iE6We.m]Hus"H5iMZJJg^f5QFe_p8rC1Q":=]Vj@s29Ao]]pO0j0:PX`DW<-c1
%6:_O\T6&[^C`t-[$o#2-&D5%9c6b._)B<h?!]4tK`de+G=Rb)U\<ru$:E0EZ[f^+EFV0m(NEeA/+eDQ[]TC<KF7RFL)0Ti?1?tDH
%EnTfLH='36*?>4oK=NZ#cZ+Uq:jTug@*3b"iX?N4EN<irR!mf&Mp'[Aob41ji3N%*Z/Ce:"G/AXq/M(/pT,Lsb64/Kc'f!l9[p\O
%BE1Uq:`3M+h3m2YbI2$KEQi7WPNWc9O>:h/Q:5S6*b`H#_TJOX$<.k_f$SmG2@`QZ@W,n!ft^l/??T5dd)pngS%*::oV(-[AO?O;
%bR.`'Yli/o:V+&PX`RD,ij&S7'e$bQbD,[48:))<XZSS0<]cXb*F]Q*5CLOk_`>=q"d]ZfjeROL"W2(;&CJHp;4P[[PKO.W7WnhX
%cO8Ng;(u_FZIucRr/KJAFA!XPG*$s'oq,kQONRhdI\%k(6GLdA1LhYtc0!I1E*O&:E,!M\A2]nfD+qXQk5p4g`Y@_E$Ap,.kY'X?
%FT!DO%6K(3F^.IL_dGCe,af)CLJ\7Y87jYJlEc&;02;U",=Y491FqdnPK[X!gN"0RP1a67#*EC?RE[9CYZoVSX_%3_,)<c@6Sf]#
%K9OAm5_#.UK=_h]K2&$l11ua&cq9c>3(a0:B(Kh'-3nWcW]JEMoKdN>;pV?RqZ,C[1)p)"apcQ>ZN6O-IQ!D6L,NiM5U2\6.C.-"
%A@<e@$U>_bb]`bUOkH$7l%A:>A2_ISLn``"4:`;+nN`P67'#k@mZjFYa_\r13(_9_+[g<Te*mkK\5_LuM9NCRNX7aHOP,rLEl!sd
%[\i0k*313gXi]r1$T#k?"oeX,P9(iB'`nCmb(XUQLmg+oK<SNa9t-qsN,*U"fm94iKR[VNKIk],&*mc7SnJ#[l9T%"rIh5r,.!ul
%3Is%$RB<Vb':E\d3`2Zg>EYoMG]U@S7VO'Q[:K*YNF]J-"@=j_[^^jDiF-/bL?Nn+R15IE=dOJ)bd\g);m8PCRn_XVV$kC]2C6[!
%SFR^H)Ba%eZB\rY3tE,"]WS!kD.tjAJA?:=BZ&=&R;L.FhP\I'p"P]M]Sk"bQ]W.n=Tt3&ZUqA14tQ!%CS!C=D^)Lg.AXd1b<K))
%rVcBF6]&:gi5WWOZg]mA\fS^]91m&H2I#&GR<3\aN#^`dj9*DN#.tCPTBu5>GajHp;4Ye*cOjubUF\Qon4#GX&8-^TSTM<N,Slcu
%-t$7gaWnA++I^#[-(PLHa:(OjcA"/@#RiUV"A3QkQfIeU`m2F.l"jc/Z@SHSDf?tR7U._.Wu1[5R62^b%BaE<Dt5aD`:u'@i&Cg?
%Sn8<j>J/Am:8G3VGEWUVkeU\25oa=!L@SgWNr*$qJ/dPipWEE$-dp]1.B2:O=E'E71c6Mn-3*q6'Qe9%i"UUhogaXFdb,g>?kKNA
%/E"VXUV)k6[YVU3b-L_[8i8^tfc]!6PuL("Z82hPqjmV#+e<KDY#Tb;"k><)Co+e+cA%B//.OVuj&cenf]P-Ug#HJAKlf48iGl6G
%8idn@^#Qc+2<\k_LUVYKX6:ICm=a8j/BS.Zl>Nlmbb^0g8/A9bWu_uo(1=hXTZ]91GQgc90K[G>/%NjUV3ou8;eG8'-$?+^Q#2Rm
%-nHl.M8G<4dFf#?PiupCKSXReQ5Zf'R>O!jfB93r+`+\e>Fn$8WK5(ue%6:XCeL?fQ9/P9Qb=V)gQJu#Qt:Zg)AGoAZRr#ki[d,0
%eq_&O=`h(uWNEBs6"`Q]8A!PCB.M>k5?YI^-jt&ij!fYJ4Cm0AZ_;Aa;__Br2K[;YFp?Dd)9n\-a!s,Sca.jhR_K8u%d#[*@auF$
%U9fEXX%0g[cIR>S!3>="M"ZY@_6,kjm4]kJgV(G-)YK8!FLJo\:RUcPNlBC7B<,CFMpBoFaEhbHl?"pS8XATXTCtCU1=-]$"8(qT
%Z\ct._qRn-2NWpD$=cJ:>OrR!&mT);O"_pEC^'La6t\$k!C@a.\6R_.!QYZ4A"16par`>2PC[pISI`<c%mCqdW9BL,#]13KU2>Z&
%D%`SO;_g.uKW#@IF]=cp&@FfV-rQOfW4%[@EK^sa*+`^=?O9T3-\0bn7("mV:.^7VO<gmgV1bd<4Or(V6<*OpE.E.,Cjdg]M^BSQ
%=rrWL98I=SF(l8]!r*U,BIH8kKS7T.78cPj#/s506<#JBTI-['OI3k(P7SHL'F)ZR6<*"S!q/fL<("Ka[b)in[B/Y_KW'D`$/V)'
%W)cOh-6XjhV/\p1;1X_LA!hqJ<[_,u+Y%LG`AT%dC)%q\ptY"005^ju;:4H5,hE['ij4[t.!iEufndcr6p3Xl#uN:2PpRZS'`t7(
%Lh]]<#a8_,p#DO$ii7[1ek5="6<%Ke!q/f,9lJ+d#T++t\"l;G$;l4PoJEB_2(t;X4<bs6rZj7hQ:f3ENeZJ_8Vr=9,'0.'FP_\u
%r!9si"uXo+7((8DG\9pKRPQMeIInhpN)NGC<:#!`G:"Uc"r1j@Pc.^DUJIJGW#1c*2(;C2PrKuWDCb$I8lXHBYmdErKm?SUC/Ue7
%dfB?+_@l4POip@RlLlcfJOt]UY+\J*9hJB$CdB<n-#,N>[a1a;XbUk_Pc-:ZMN1A&<*56E85"dHUH[m3;PO$P"\^k68lQX&_$WXX
%WZREk8C%&kR4$H?P="L.RpANg,\PQ$7)chChS&#r*\d<J_7M$gSG@7#Sr?XC<r:=@7.kE!L<#J:<TD`-6oAUhYa-dc.a5$1]-b*O
%QL&"P8;RZeY"Z8qM$i8hTWLeBMP[E<VMXUL#EkVr(BO0IeOYN(,<N&"-)uUk>a\;Y<1>[$BiLf.[+B&0;PHX]+"h^c;9LC3-7.qc
%>tTql7ps[E:l4JXQH6L3M-;i1P7eUM_k>"@M0b+G#i9!J%s$IpYZhGNRZsaQGYHSTPc.^U,M3QP[r3J%dO$7iI-OfO;PG'0479C$
%-)rPlCt,7KFe"n$,6JLIleWs_NPcf<8?bf\<0S]9_4-[fQlDk09hJC;^$NX2n.+;roFR?%ebm4[0R.1)Q^*#<5J?efJp/P--l`Q0
%4-N.Z"(rofP+of2-[76s=!G\o0):%&T)lT?&uHd&,'__877F;Q/A=]6$:gTX:4d\d(JL#.'s>/d;DsN&Eii-61bJ4"8W/I*-A,0I
%G?[Bl9j1LA8&JpJ+nq;M7["T&$(#](-7p\Ia?c>[(=`ee@a7Q'MJR=[C#j!j+u(fd;/=npUDDD=D)i/A;&u]<6maK8_"!Pa8W/IB
%Z3If><?QKdPUA%4ZH;'"LVaRrf+HpR]N_`'B%!F!L#Z[kU&lJTOasg;ZR7E5K[QU?<Tlb$.UWm?G:"p,m$cN7W?N.\or**%1QrRh
%Dq@T8Bi1#b$G80/;=Q@EhO1aLNc&Y?U^>nOK,29bP8;\QOV5;_Bi2Q%7.AL#7@cTSj`?V$[5L9)Bi,BK:0LW#P]bePi8(i+\I`uj
%)LRJT]Sfa<dH![s>;fj1?,eKSC/JDF7P[CaC>JS1/Sa[a@FCkkF")]b#c.^]RC&oJ<(pIp$jsWd.i#B>I)_sN4f!;OU1-g;db#-[
%4QYECG_]uT$XHrcl7.`r<2Upr==Yu'Gom/Y!Rd]OMMEdF()>g,fZhj=,.SZR3b_G'-k1?j[&D#=42<p.!h(GfW_[;F`pIpeh0=Wu
%8;i?j8[qfuq3FO=2ec,"hH3r\3$CHE-7p^5KJJ')/LgsYaYdg1O(/=]mLQnZ3*]?b<8;lrPUShn(.XQ(p$a9(7E+:(O'Ppg4?.n9
%,sG&^;Nhk2F.ljJ8W.m#Dl#n1,0t#PUAAILGZTL_bl+$<W!2j-d\9e'TLk&F=*BcCeXSYBqqQDW%i@BYGGhLb.mt!hH9Xak[_H)=
%Q)!b;cd?<3p4IWC?i(eWIJi="\c6c,^S;b+*h4XQ3aFoI'7/C"j)+hlO,kC]nr"%I^:JU[q[<6Jq]@M]:YS(TQ[egr?Fq3@$@aZm
%prFCZ_QV5SVr-hc+9&^VhgP%:MsnE0ro\46I/W2/=8DG0?G4"bo(RUSgHYYds7^I2pKrH&A+7[^O.Le7T=eH8I[t\SE;.,!qK$fT
%6so?PQ,!2#J+$0Cs)5W_4SQ+1UNjDc5)\=3]^X<uptsslIe71I`RX'7q^6^\pUgC%Vu'8VcQ5;s`uLV26mAG;NYd_LZ!-ThoK/OM
%@c'<Rp$j6fZLJioGrMODbg%p2jU"%0^#oXm'C>Eg[dU#-^2h^`7.+ocF@BO,mZ7/"[mI4u=kN-RY5-4;dkNH:l2:Rqeai`Y<Hc3V
%+2sE>io?C*r:K.KgUle;IGfb(Dk>ckmV]abEP#TGg$>,GDm+%b^3oV9k0<;Fq`e@L]=WLik1/;Tea)D%^;C651u@`<#9SHhS&^Th
%$XA;L5Q~>
%AI9_PrivateDataEnd
