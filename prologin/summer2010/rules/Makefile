# Makefile.in generated by automake 1.11 from Makefile.am.
# prologin/summer2010/rules/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# -*- Makefile -*-


pkgdatadir = $(datadir)/stechec
pkgincludedir = $(includedir)/stechec
pkglibdir = $(libdir)/stechec
pkglibexecdir = $(libexecdir)/stechec
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
check_PROGRAMS = summer2010$(EXEEXT)
subdir = prologin/summer2010/rules
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/build-aux/libtool.m4 \
	$(top_srcdir)/build-aux/ltoptions.m4 \
	$(top_srcdir)/build-aux/ltsugar.m4 \
	$(top_srcdir)/build-aux/ltversion.m4 \
	$(top_srcdir)/build-aux/lt~obsolete.m4 \
	$(top_srcdir)/build-aux/mysql.m4 \
	$(top_srcdir)/build-aux/paragui.m4 \
	$(top_srcdir)/build-aux/pthreads.m4 \
	$(top_srcdir)/build-aux/qt.m4 \
	$(top_srcdir)/build-aux/readline.m4 \
	$(top_srcdir)/build-aux/sdl.m4 \
	$(top_srcdir)/build-aux/stechec-deps.m4 \
	$(top_srcdir)/build-aux/xerces.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
argent_la_DEPENDENCIES =  \
	$(top_builddir)/prologin/common/libstechec_rules.la
am_argent_la_OBJECTS = argent_la-Api.lo argent_la-Client.lo \
	argent_la-ClientEntry.lo argent_la-ClientDiffer.lo \
	argent_la-GameData.lo argent_la-Server.lo \
	argent_la-ServerResolver.lo argent_la-ServerEntry.lo \
	argent_la-load_rules.lo argent_la-interface.lo
argent_la_OBJECTS = $(am_argent_la_OBJECTS)
argent_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(argent_la_CXXFLAGS) \
	$(CXXFLAGS) $(argent_la_LDFLAGS) $(LDFLAGS) -o $@
am__objects_1 = summer2010-Api.$(OBJEXT) summer2010-Client.$(OBJEXT) \
	summer2010-ClientEntry.$(OBJEXT) \
	summer2010-ClientDiffer.$(OBJEXT) \
	summer2010-GameData.$(OBJEXT) summer2010-Server.$(OBJEXT) \
	summer2010-ServerResolver.$(OBJEXT) \
	summer2010-ServerEntry.$(OBJEXT) \
	summer2010-load_rules.$(OBJEXT) summer2010-interface.$(OBJEXT)
am_summer2010_OBJECTS = summer2010-check.$(OBJEXT) $(am__objects_1)
summer2010_OBJECTS = $(am_summer2010_OBJECTS)
am__DEPENDENCIES_1 =
summer2010_DEPENDENCIES = $(argent_la_LIBADD) \
	$(top_builddir)/stechec/tools/libtools.la \
	$(am__DEPENDENCIES_1)
summer2010_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(summer2010_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(argent_la_SOURCES) $(summer2010_SOURCES)
DIST_SOURCES = $(argent_la_SOURCES) $(summer2010_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/max/stechec-2010/build-aux/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/max/stechec-2010/build-aux/missing --run tar
AR = ar
AS = as
AUTOCONF = ${SHELL} /home/max/stechec-2010/build-aux/missing --run autoconf
AUTOHEADER = ${SHELL} /home/max/stechec-2010/build-aux/missing --run autoheader
AUTOMAKE = ${SHELL} /home/max/stechec-2010/build-aux/missing --run automake-1.11
AWK = gawk
BASH = /bin/bash
BASH_SCRIPTS = NONE/lib/stechec/bash
BUILD_ant = 
BUILD_bb5 = 
BUILD_prolo2005 = 
BUILD_prolo2006 = 
BUILD_prolo2007 = 
BUILD_prolo2008 = 
BUILD_prolo2009 = 
BUILD_prolo2010 = 
BUILD_prologin = prologin
BUILD_summer2010 = summer2010
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -pipe
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -pipe
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
DOXYGEN = doxygen
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
HELP2MAN = help2man
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBDL = -ldl
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_NO_UNDEFINED = -no-undefined
MAKEINFO = ${SHELL} /home/max/stechec-2010/build-aux/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MOC = 
MYSQL_CFLAGS = 
MYSQL_LIBS = 
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = stechec
PACKAGE_BUGREPORT = http://projects.nekeme.net/projects/tbt/newticket
PACKAGE_NAME = stechec
PACKAGE_STRING = stechec 3.2.3
PACKAGE_TARNAME = stechec
PACKAGE_URL = 
PACKAGE_VERSION = 3.2.3
PARAGUI_CFLAGS = 
PARAGUI_CONFIG = 
PARAGUI_LIBS = 
PATH_SEPARATOR = :
PKGCONFIG = 
PKG_CONFIG = /usr/bin/pkg-config
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
QASSISTANTCLIENT_LDADD = 
QEMBED = 
QT_CFLAGS = 
QT_GUILINK = 
QT_LIBS = 
RANLIB = ranlib
READLINE_CFLAGS = 
READLINE_LIBS = 
RUBY = /usr/local/bin/ruby
RUBY_INC = ${exec_prefix}/lib/stechec/ruby
SDL_CFLAGS = -I/usr/include/SDL -D_GNU_SOURCE=1 -D_REENTRANT
SDL_CONFIG = /usr/bin/sdl-config
SDL_LIBS = -L/usr/lib -lSDL -lSDL_image -lSDL_ttf -lSDL_gfx
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
TEXI2DVI = texi2dvi
UIC = 
VERSION = 3.2.3
XERCES_CPPFLAGS = 
XERCES_LDFLAGS =  -lxerces-c
XMKMF = 
abs_builddir = /home/max/stechec-2010/prologin/summer2010/rules
abs_srcdir = /home/max/stechec-2010/prologin/summer2010/rules
abs_top_builddir = /home/max/stechec-2010
abs_top_srcdir = /home/max/stechec-2010
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
acx_pthread_config = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/max/stechec-2010/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
stechec_cv_mysql = no
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
top_build_prefix = ../../../
top_builddir = ../../..
top_srcdir = ../../..
lib_LTLIBRARIES = argent.la
argent_la_SOURCES = \
	Api.cc				\
	Api.hh				\
	Client.cc			\
	Client.hh			\
	ClientEntry.cc			\
	ClientEntry.hh			\
	ClientDiffer.cc			\
	ClientDiffer.hh			\
	Constant.hh			\
	Event.hh			\
	GameData.cc			\
	GameData.hh			\
	Server.hh			\
	Server.cc			\
	ServerResolver.cc		\
	ServerResolver.hh		\
	ServerEntry.cc			\
	ServerEntry.hh			\
	load_rules.cc			\
	interface.cc

argent_la_LDFLAGS = -module
argent_la_LIBADD = \
	$(top_builddir)/prologin/common/libstechec_rules.la

argent_la_CXXFLAGS = \
	-DMODULE_NAME=\"argent\"			\
	-DMODULE_COLOR=C_RED				\
	-DLIB_NAME=\"argent\"				\
	-DPKG_DATA_DIR=\"$(pkgdatadir)/summer2010\"	\
	-DYAML

INCLUDES = \
	-I$(top_srcdir)/stechec/base_rules	\
	-I$(top_srcdir)/prologin/common		\
	-I$(top_srcdir)/stechec/tools

summer2010_SOURCES = check.cc $(argent_la_SOURCES)
summer2010_CXXFLAGS = $(argent_la_AM_CXXFLAGS)
summer2010_LDADD = \
	$(argent_la_LIBADD)				\
	$(top_builddir)/stechec/tools/libtools.la	\
	$(LIBDL)

all: all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign prologin/summer2010/rules/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign prologin/summer2010/rules/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
argent.la: $(argent_la_OBJECTS) $(argent_la_DEPENDENCIES) 
	$(argent_la_LINK) -rpath $(libdir) $(argent_la_OBJECTS) $(argent_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
summer2010$(EXEEXT): $(summer2010_OBJECTS) $(summer2010_DEPENDENCIES) 
	@rm -f summer2010$(EXEEXT)
	$(summer2010_LINK) $(summer2010_OBJECTS) $(summer2010_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/argent_la-Api.Plo
include ./$(DEPDIR)/argent_la-Client.Plo
include ./$(DEPDIR)/argent_la-ClientDiffer.Plo
include ./$(DEPDIR)/argent_la-ClientEntry.Plo
include ./$(DEPDIR)/argent_la-GameData.Plo
include ./$(DEPDIR)/argent_la-Server.Plo
include ./$(DEPDIR)/argent_la-ServerEntry.Plo
include ./$(DEPDIR)/argent_la-ServerResolver.Plo
include ./$(DEPDIR)/argent_la-interface.Plo
include ./$(DEPDIR)/argent_la-load_rules.Plo
include ./$(DEPDIR)/summer2010-Api.Po
include ./$(DEPDIR)/summer2010-Client.Po
include ./$(DEPDIR)/summer2010-ClientDiffer.Po
include ./$(DEPDIR)/summer2010-ClientEntry.Po
include ./$(DEPDIR)/summer2010-GameData.Po
include ./$(DEPDIR)/summer2010-Server.Po
include ./$(DEPDIR)/summer2010-ServerEntry.Po
include ./$(DEPDIR)/summer2010-ServerResolver.Po
include ./$(DEPDIR)/summer2010-check.Po
include ./$(DEPDIR)/summer2010-interface.Po
include ./$(DEPDIR)/summer2010-load_rules.Po

.cc.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

argent_la-Api.lo: Api.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argent_la_CXXFLAGS) $(CXXFLAGS) -MT argent_la-Api.lo -MD -MP -MF $(DEPDIR)/argent_la-Api.Tpo -c -o argent_la-Api.lo `test -f 'Api.cc' || echo '$(srcdir)/'`Api.cc
	$(am__mv) $(DEPDIR)/argent_la-Api.Tpo $(DEPDIR)/argent_la-Api.Plo
#	source='Api.cc' object='argent_la-Api.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argent_la_CXXFLAGS) $(CXXFLAGS) -c -o argent_la-Api.lo `test -f 'Api.cc' || echo '$(srcdir)/'`Api.cc

argent_la-Client.lo: Client.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argent_la_CXXFLAGS) $(CXXFLAGS) -MT argent_la-Client.lo -MD -MP -MF $(DEPDIR)/argent_la-Client.Tpo -c -o argent_la-Client.lo `test -f 'Client.cc' || echo '$(srcdir)/'`Client.cc
	$(am__mv) $(DEPDIR)/argent_la-Client.Tpo $(DEPDIR)/argent_la-Client.Plo
#	source='Client.cc' object='argent_la-Client.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argent_la_CXXFLAGS) $(CXXFLAGS) -c -o argent_la-Client.lo `test -f 'Client.cc' || echo '$(srcdir)/'`Client.cc

argent_la-ClientEntry.lo: ClientEntry.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argent_la_CXXFLAGS) $(CXXFLAGS) -MT argent_la-ClientEntry.lo -MD -MP -MF $(DEPDIR)/argent_la-ClientEntry.Tpo -c -o argent_la-ClientEntry.lo `test -f 'ClientEntry.cc' || echo '$(srcdir)/'`ClientEntry.cc
	$(am__mv) $(DEPDIR)/argent_la-ClientEntry.Tpo $(DEPDIR)/argent_la-ClientEntry.Plo
#	source='ClientEntry.cc' object='argent_la-ClientEntry.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argent_la_CXXFLAGS) $(CXXFLAGS) -c -o argent_la-ClientEntry.lo `test -f 'ClientEntry.cc' || echo '$(srcdir)/'`ClientEntry.cc

argent_la-ClientDiffer.lo: ClientDiffer.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argent_la_CXXFLAGS) $(CXXFLAGS) -MT argent_la-ClientDiffer.lo -MD -MP -MF $(DEPDIR)/argent_la-ClientDiffer.Tpo -c -o argent_la-ClientDiffer.lo `test -f 'ClientDiffer.cc' || echo '$(srcdir)/'`ClientDiffer.cc
	$(am__mv) $(DEPDIR)/argent_la-ClientDiffer.Tpo $(DEPDIR)/argent_la-ClientDiffer.Plo
#	source='ClientDiffer.cc' object='argent_la-ClientDiffer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argent_la_CXXFLAGS) $(CXXFLAGS) -c -o argent_la-ClientDiffer.lo `test -f 'ClientDiffer.cc' || echo '$(srcdir)/'`ClientDiffer.cc

argent_la-GameData.lo: GameData.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argent_la_CXXFLAGS) $(CXXFLAGS) -MT argent_la-GameData.lo -MD -MP -MF $(DEPDIR)/argent_la-GameData.Tpo -c -o argent_la-GameData.lo `test -f 'GameData.cc' || echo '$(srcdir)/'`GameData.cc
	$(am__mv) $(DEPDIR)/argent_la-GameData.Tpo $(DEPDIR)/argent_la-GameData.Plo
#	source='GameData.cc' object='argent_la-GameData.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argent_la_CXXFLAGS) $(CXXFLAGS) -c -o argent_la-GameData.lo `test -f 'GameData.cc' || echo '$(srcdir)/'`GameData.cc

argent_la-Server.lo: Server.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argent_la_CXXFLAGS) $(CXXFLAGS) -MT argent_la-Server.lo -MD -MP -MF $(DEPDIR)/argent_la-Server.Tpo -c -o argent_la-Server.lo `test -f 'Server.cc' || echo '$(srcdir)/'`Server.cc
	$(am__mv) $(DEPDIR)/argent_la-Server.Tpo $(DEPDIR)/argent_la-Server.Plo
#	source='Server.cc' object='argent_la-Server.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argent_la_CXXFLAGS) $(CXXFLAGS) -c -o argent_la-Server.lo `test -f 'Server.cc' || echo '$(srcdir)/'`Server.cc

argent_la-ServerResolver.lo: ServerResolver.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argent_la_CXXFLAGS) $(CXXFLAGS) -MT argent_la-ServerResolver.lo -MD -MP -MF $(DEPDIR)/argent_la-ServerResolver.Tpo -c -o argent_la-ServerResolver.lo `test -f 'ServerResolver.cc' || echo '$(srcdir)/'`ServerResolver.cc
	$(am__mv) $(DEPDIR)/argent_la-ServerResolver.Tpo $(DEPDIR)/argent_la-ServerResolver.Plo
#	source='ServerResolver.cc' object='argent_la-ServerResolver.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argent_la_CXXFLAGS) $(CXXFLAGS) -c -o argent_la-ServerResolver.lo `test -f 'ServerResolver.cc' || echo '$(srcdir)/'`ServerResolver.cc

argent_la-ServerEntry.lo: ServerEntry.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argent_la_CXXFLAGS) $(CXXFLAGS) -MT argent_la-ServerEntry.lo -MD -MP -MF $(DEPDIR)/argent_la-ServerEntry.Tpo -c -o argent_la-ServerEntry.lo `test -f 'ServerEntry.cc' || echo '$(srcdir)/'`ServerEntry.cc
	$(am__mv) $(DEPDIR)/argent_la-ServerEntry.Tpo $(DEPDIR)/argent_la-ServerEntry.Plo
#	source='ServerEntry.cc' object='argent_la-ServerEntry.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argent_la_CXXFLAGS) $(CXXFLAGS) -c -o argent_la-ServerEntry.lo `test -f 'ServerEntry.cc' || echo '$(srcdir)/'`ServerEntry.cc

argent_la-load_rules.lo: load_rules.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argent_la_CXXFLAGS) $(CXXFLAGS) -MT argent_la-load_rules.lo -MD -MP -MF $(DEPDIR)/argent_la-load_rules.Tpo -c -o argent_la-load_rules.lo `test -f 'load_rules.cc' || echo '$(srcdir)/'`load_rules.cc
	$(am__mv) $(DEPDIR)/argent_la-load_rules.Tpo $(DEPDIR)/argent_la-load_rules.Plo
#	source='load_rules.cc' object='argent_la-load_rules.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argent_la_CXXFLAGS) $(CXXFLAGS) -c -o argent_la-load_rules.lo `test -f 'load_rules.cc' || echo '$(srcdir)/'`load_rules.cc

argent_la-interface.lo: interface.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argent_la_CXXFLAGS) $(CXXFLAGS) -MT argent_la-interface.lo -MD -MP -MF $(DEPDIR)/argent_la-interface.Tpo -c -o argent_la-interface.lo `test -f 'interface.cc' || echo '$(srcdir)/'`interface.cc
	$(am__mv) $(DEPDIR)/argent_la-interface.Tpo $(DEPDIR)/argent_la-interface.Plo
#	source='interface.cc' object='argent_la-interface.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(argent_la_CXXFLAGS) $(CXXFLAGS) -c -o argent_la-interface.lo `test -f 'interface.cc' || echo '$(srcdir)/'`interface.cc

summer2010-check.o: check.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -MT summer2010-check.o -MD -MP -MF $(DEPDIR)/summer2010-check.Tpo -c -o summer2010-check.o `test -f 'check.cc' || echo '$(srcdir)/'`check.cc
	$(am__mv) $(DEPDIR)/summer2010-check.Tpo $(DEPDIR)/summer2010-check.Po
#	source='check.cc' object='summer2010-check.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -c -o summer2010-check.o `test -f 'check.cc' || echo '$(srcdir)/'`check.cc

summer2010-check.obj: check.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -MT summer2010-check.obj -MD -MP -MF $(DEPDIR)/summer2010-check.Tpo -c -o summer2010-check.obj `if test -f 'check.cc'; then $(CYGPATH_W) 'check.cc'; else $(CYGPATH_W) '$(srcdir)/check.cc'; fi`
	$(am__mv) $(DEPDIR)/summer2010-check.Tpo $(DEPDIR)/summer2010-check.Po
#	source='check.cc' object='summer2010-check.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -c -o summer2010-check.obj `if test -f 'check.cc'; then $(CYGPATH_W) 'check.cc'; else $(CYGPATH_W) '$(srcdir)/check.cc'; fi`

summer2010-Api.o: Api.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -MT summer2010-Api.o -MD -MP -MF $(DEPDIR)/summer2010-Api.Tpo -c -o summer2010-Api.o `test -f 'Api.cc' || echo '$(srcdir)/'`Api.cc
	$(am__mv) $(DEPDIR)/summer2010-Api.Tpo $(DEPDIR)/summer2010-Api.Po
#	source='Api.cc' object='summer2010-Api.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -c -o summer2010-Api.o `test -f 'Api.cc' || echo '$(srcdir)/'`Api.cc

summer2010-Api.obj: Api.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -MT summer2010-Api.obj -MD -MP -MF $(DEPDIR)/summer2010-Api.Tpo -c -o summer2010-Api.obj `if test -f 'Api.cc'; then $(CYGPATH_W) 'Api.cc'; else $(CYGPATH_W) '$(srcdir)/Api.cc'; fi`
	$(am__mv) $(DEPDIR)/summer2010-Api.Tpo $(DEPDIR)/summer2010-Api.Po
#	source='Api.cc' object='summer2010-Api.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -c -o summer2010-Api.obj `if test -f 'Api.cc'; then $(CYGPATH_W) 'Api.cc'; else $(CYGPATH_W) '$(srcdir)/Api.cc'; fi`

summer2010-Client.o: Client.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -MT summer2010-Client.o -MD -MP -MF $(DEPDIR)/summer2010-Client.Tpo -c -o summer2010-Client.o `test -f 'Client.cc' || echo '$(srcdir)/'`Client.cc
	$(am__mv) $(DEPDIR)/summer2010-Client.Tpo $(DEPDIR)/summer2010-Client.Po
#	source='Client.cc' object='summer2010-Client.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -c -o summer2010-Client.o `test -f 'Client.cc' || echo '$(srcdir)/'`Client.cc

summer2010-Client.obj: Client.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -MT summer2010-Client.obj -MD -MP -MF $(DEPDIR)/summer2010-Client.Tpo -c -o summer2010-Client.obj `if test -f 'Client.cc'; then $(CYGPATH_W) 'Client.cc'; else $(CYGPATH_W) '$(srcdir)/Client.cc'; fi`
	$(am__mv) $(DEPDIR)/summer2010-Client.Tpo $(DEPDIR)/summer2010-Client.Po
#	source='Client.cc' object='summer2010-Client.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -c -o summer2010-Client.obj `if test -f 'Client.cc'; then $(CYGPATH_W) 'Client.cc'; else $(CYGPATH_W) '$(srcdir)/Client.cc'; fi`

summer2010-ClientEntry.o: ClientEntry.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -MT summer2010-ClientEntry.o -MD -MP -MF $(DEPDIR)/summer2010-ClientEntry.Tpo -c -o summer2010-ClientEntry.o `test -f 'ClientEntry.cc' || echo '$(srcdir)/'`ClientEntry.cc
	$(am__mv) $(DEPDIR)/summer2010-ClientEntry.Tpo $(DEPDIR)/summer2010-ClientEntry.Po
#	source='ClientEntry.cc' object='summer2010-ClientEntry.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -c -o summer2010-ClientEntry.o `test -f 'ClientEntry.cc' || echo '$(srcdir)/'`ClientEntry.cc

summer2010-ClientEntry.obj: ClientEntry.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -MT summer2010-ClientEntry.obj -MD -MP -MF $(DEPDIR)/summer2010-ClientEntry.Tpo -c -o summer2010-ClientEntry.obj `if test -f 'ClientEntry.cc'; then $(CYGPATH_W) 'ClientEntry.cc'; else $(CYGPATH_W) '$(srcdir)/ClientEntry.cc'; fi`
	$(am__mv) $(DEPDIR)/summer2010-ClientEntry.Tpo $(DEPDIR)/summer2010-ClientEntry.Po
#	source='ClientEntry.cc' object='summer2010-ClientEntry.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -c -o summer2010-ClientEntry.obj `if test -f 'ClientEntry.cc'; then $(CYGPATH_W) 'ClientEntry.cc'; else $(CYGPATH_W) '$(srcdir)/ClientEntry.cc'; fi`

summer2010-ClientDiffer.o: ClientDiffer.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -MT summer2010-ClientDiffer.o -MD -MP -MF $(DEPDIR)/summer2010-ClientDiffer.Tpo -c -o summer2010-ClientDiffer.o `test -f 'ClientDiffer.cc' || echo '$(srcdir)/'`ClientDiffer.cc
	$(am__mv) $(DEPDIR)/summer2010-ClientDiffer.Tpo $(DEPDIR)/summer2010-ClientDiffer.Po
#	source='ClientDiffer.cc' object='summer2010-ClientDiffer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -c -o summer2010-ClientDiffer.o `test -f 'ClientDiffer.cc' || echo '$(srcdir)/'`ClientDiffer.cc

summer2010-ClientDiffer.obj: ClientDiffer.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -MT summer2010-ClientDiffer.obj -MD -MP -MF $(DEPDIR)/summer2010-ClientDiffer.Tpo -c -o summer2010-ClientDiffer.obj `if test -f 'ClientDiffer.cc'; then $(CYGPATH_W) 'ClientDiffer.cc'; else $(CYGPATH_W) '$(srcdir)/ClientDiffer.cc'; fi`
	$(am__mv) $(DEPDIR)/summer2010-ClientDiffer.Tpo $(DEPDIR)/summer2010-ClientDiffer.Po
#	source='ClientDiffer.cc' object='summer2010-ClientDiffer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -c -o summer2010-ClientDiffer.obj `if test -f 'ClientDiffer.cc'; then $(CYGPATH_W) 'ClientDiffer.cc'; else $(CYGPATH_W) '$(srcdir)/ClientDiffer.cc'; fi`

summer2010-GameData.o: GameData.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -MT summer2010-GameData.o -MD -MP -MF $(DEPDIR)/summer2010-GameData.Tpo -c -o summer2010-GameData.o `test -f 'GameData.cc' || echo '$(srcdir)/'`GameData.cc
	$(am__mv) $(DEPDIR)/summer2010-GameData.Tpo $(DEPDIR)/summer2010-GameData.Po
#	source='GameData.cc' object='summer2010-GameData.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -c -o summer2010-GameData.o `test -f 'GameData.cc' || echo '$(srcdir)/'`GameData.cc

summer2010-GameData.obj: GameData.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -MT summer2010-GameData.obj -MD -MP -MF $(DEPDIR)/summer2010-GameData.Tpo -c -o summer2010-GameData.obj `if test -f 'GameData.cc'; then $(CYGPATH_W) 'GameData.cc'; else $(CYGPATH_W) '$(srcdir)/GameData.cc'; fi`
	$(am__mv) $(DEPDIR)/summer2010-GameData.Tpo $(DEPDIR)/summer2010-GameData.Po
#	source='GameData.cc' object='summer2010-GameData.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -c -o summer2010-GameData.obj `if test -f 'GameData.cc'; then $(CYGPATH_W) 'GameData.cc'; else $(CYGPATH_W) '$(srcdir)/GameData.cc'; fi`

summer2010-Server.o: Server.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -MT summer2010-Server.o -MD -MP -MF $(DEPDIR)/summer2010-Server.Tpo -c -o summer2010-Server.o `test -f 'Server.cc' || echo '$(srcdir)/'`Server.cc
	$(am__mv) $(DEPDIR)/summer2010-Server.Tpo $(DEPDIR)/summer2010-Server.Po
#	source='Server.cc' object='summer2010-Server.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -c -o summer2010-Server.o `test -f 'Server.cc' || echo '$(srcdir)/'`Server.cc

summer2010-Server.obj: Server.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -MT summer2010-Server.obj -MD -MP -MF $(DEPDIR)/summer2010-Server.Tpo -c -o summer2010-Server.obj `if test -f 'Server.cc'; then $(CYGPATH_W) 'Server.cc'; else $(CYGPATH_W) '$(srcdir)/Server.cc'; fi`
	$(am__mv) $(DEPDIR)/summer2010-Server.Tpo $(DEPDIR)/summer2010-Server.Po
#	source='Server.cc' object='summer2010-Server.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -c -o summer2010-Server.obj `if test -f 'Server.cc'; then $(CYGPATH_W) 'Server.cc'; else $(CYGPATH_W) '$(srcdir)/Server.cc'; fi`

summer2010-ServerResolver.o: ServerResolver.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -MT summer2010-ServerResolver.o -MD -MP -MF $(DEPDIR)/summer2010-ServerResolver.Tpo -c -o summer2010-ServerResolver.o `test -f 'ServerResolver.cc' || echo '$(srcdir)/'`ServerResolver.cc
	$(am__mv) $(DEPDIR)/summer2010-ServerResolver.Tpo $(DEPDIR)/summer2010-ServerResolver.Po
#	source='ServerResolver.cc' object='summer2010-ServerResolver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -c -o summer2010-ServerResolver.o `test -f 'ServerResolver.cc' || echo '$(srcdir)/'`ServerResolver.cc

summer2010-ServerResolver.obj: ServerResolver.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -MT summer2010-ServerResolver.obj -MD -MP -MF $(DEPDIR)/summer2010-ServerResolver.Tpo -c -o summer2010-ServerResolver.obj `if test -f 'ServerResolver.cc'; then $(CYGPATH_W) 'ServerResolver.cc'; else $(CYGPATH_W) '$(srcdir)/ServerResolver.cc'; fi`
	$(am__mv) $(DEPDIR)/summer2010-ServerResolver.Tpo $(DEPDIR)/summer2010-ServerResolver.Po
#	source='ServerResolver.cc' object='summer2010-ServerResolver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -c -o summer2010-ServerResolver.obj `if test -f 'ServerResolver.cc'; then $(CYGPATH_W) 'ServerResolver.cc'; else $(CYGPATH_W) '$(srcdir)/ServerResolver.cc'; fi`

summer2010-ServerEntry.o: ServerEntry.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -MT summer2010-ServerEntry.o -MD -MP -MF $(DEPDIR)/summer2010-ServerEntry.Tpo -c -o summer2010-ServerEntry.o `test -f 'ServerEntry.cc' || echo '$(srcdir)/'`ServerEntry.cc
	$(am__mv) $(DEPDIR)/summer2010-ServerEntry.Tpo $(DEPDIR)/summer2010-ServerEntry.Po
#	source='ServerEntry.cc' object='summer2010-ServerEntry.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -c -o summer2010-ServerEntry.o `test -f 'ServerEntry.cc' || echo '$(srcdir)/'`ServerEntry.cc

summer2010-ServerEntry.obj: ServerEntry.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -MT summer2010-ServerEntry.obj -MD -MP -MF $(DEPDIR)/summer2010-ServerEntry.Tpo -c -o summer2010-ServerEntry.obj `if test -f 'ServerEntry.cc'; then $(CYGPATH_W) 'ServerEntry.cc'; else $(CYGPATH_W) '$(srcdir)/ServerEntry.cc'; fi`
	$(am__mv) $(DEPDIR)/summer2010-ServerEntry.Tpo $(DEPDIR)/summer2010-ServerEntry.Po
#	source='ServerEntry.cc' object='summer2010-ServerEntry.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -c -o summer2010-ServerEntry.obj `if test -f 'ServerEntry.cc'; then $(CYGPATH_W) 'ServerEntry.cc'; else $(CYGPATH_W) '$(srcdir)/ServerEntry.cc'; fi`

summer2010-load_rules.o: load_rules.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -MT summer2010-load_rules.o -MD -MP -MF $(DEPDIR)/summer2010-load_rules.Tpo -c -o summer2010-load_rules.o `test -f 'load_rules.cc' || echo '$(srcdir)/'`load_rules.cc
	$(am__mv) $(DEPDIR)/summer2010-load_rules.Tpo $(DEPDIR)/summer2010-load_rules.Po
#	source='load_rules.cc' object='summer2010-load_rules.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -c -o summer2010-load_rules.o `test -f 'load_rules.cc' || echo '$(srcdir)/'`load_rules.cc

summer2010-load_rules.obj: load_rules.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -MT summer2010-load_rules.obj -MD -MP -MF $(DEPDIR)/summer2010-load_rules.Tpo -c -o summer2010-load_rules.obj `if test -f 'load_rules.cc'; then $(CYGPATH_W) 'load_rules.cc'; else $(CYGPATH_W) '$(srcdir)/load_rules.cc'; fi`
	$(am__mv) $(DEPDIR)/summer2010-load_rules.Tpo $(DEPDIR)/summer2010-load_rules.Po
#	source='load_rules.cc' object='summer2010-load_rules.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -c -o summer2010-load_rules.obj `if test -f 'load_rules.cc'; then $(CYGPATH_W) 'load_rules.cc'; else $(CYGPATH_W) '$(srcdir)/load_rules.cc'; fi`

summer2010-interface.o: interface.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -MT summer2010-interface.o -MD -MP -MF $(DEPDIR)/summer2010-interface.Tpo -c -o summer2010-interface.o `test -f 'interface.cc' || echo '$(srcdir)/'`interface.cc
	$(am__mv) $(DEPDIR)/summer2010-interface.Tpo $(DEPDIR)/summer2010-interface.Po
#	source='interface.cc' object='summer2010-interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -c -o summer2010-interface.o `test -f 'interface.cc' || echo '$(srcdir)/'`interface.cc

summer2010-interface.obj: interface.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -MT summer2010-interface.obj -MD -MP -MF $(DEPDIR)/summer2010-interface.Tpo -c -o summer2010-interface.obj `if test -f 'interface.cc'; then $(CYGPATH_W) 'interface.cc'; else $(CYGPATH_W) '$(srcdir)/interface.cc'; fi`
	$(am__mv) $(DEPDIR)/summer2010-interface.Tpo $(DEPDIR)/summer2010-interface.Po
#	source='interface.cc' object='summer2010-interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(summer2010_CXXFLAGS) $(CXXFLAGS) -c -o summer2010-interface.obj `if test -f 'interface.cc'; then $(CYGPATH_W) 'interface.cc'; else $(CYGPATH_W) '$(srcdir)/interface.cc'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
check: check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean \
	clean-checkPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-libLTLIBRARIES


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
