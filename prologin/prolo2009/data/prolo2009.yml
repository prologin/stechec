conf:
  package_name: prolo2009
  client_rule_lib: simcity
  server_rule_lib: simcity
  player_lib: champion
  player_filename: prologin

constant:
  - doc_extra: \subsection{Constantes}
  - doc_extra: \subsubsection{Les codes d'erreur}
  - 
    cst_name: INFINI
    cst_val: 30000
    cst_comment: todo
  - 
    cst_name: HORS_TERRAIN
    cst_val: -1
    cst_comment: todo
  -
    cst_name: PAS_DE_MAISON
    cst_val: -2
    cst_comment: todo
  -
    cst_name: PAS_DE_MONUMENT
    cst_val: -3
    cst_comment: todo
  -
    cst_name: FINANCES_DEPASSEES
    cst_val: -4
    cst_comment: todo
  -
    cst_name: BLOCAGE
    cst_val: -5
    cst_comment: todo
  -
    cst_name: TROP_DE_MAISONS
    cst_val: -6
    cst_comment: todo
  -
    cst_name: JOUEUR_INCORRECT
    cst_val: -7
    cst_comment: todo
  -
    cst_name: NON_CONNEXE
    cst_val: -8
    cst_comment: todo
  -
    cst_name: CASE_OCCUPEE
    cst_val: -9
    cst_comment: todo
  -
    cst_name: ACTION_INTERDITE
    cst_val: -10
    cst_comment: todo
  -
    cst_name: TROP_LOIN
    cst_val: -11
    cst_comment: todo
  -
    cst_name: SUCCES
    cst_val: 0
    cst_comment: todo

  - doc_extra: \subsubsection{Les constantes de possession}
  -
    cst_name: MAIRIE
    cst_val: 3
    cst_comment: todo

  - doc_extra: \subsubsection{Les constantes de terrain}
  -
    cst_name: VIDE
    cst_val: 0
    cst_comment: Case de terrain vide
  -
    cst_name: MAISON
    cst_val: 1
    cst_comment: Case de terrain qui contient une maison
  -
    cst_name: RESERVATION
    cst_val: 2
    cst_comment: Case de terrain réservée
  -
    cst_name: MONUMENT
    cst_val: 3
    cst_comment: Case de terrain qui contient un monument
  -
    cst_name: ROUTE
    cst_val: 4
    cst_comment: Case de terrain qui contient une route

  - doc_extra: \subsubsection{Bornes, tailles}
  -
    cst_name: MAX_MONUMENTS
    cst_val: 14
    cst_comment: todo
  -
    cst_name: TAILLE_CARTE
    cst_val: 100
    cst_comment: todo

function:
  - doc_extra: |
     \subsection{Fonctions d'information}
     Toutes les fonctions peuvent renvoyer les constantes
     \textbf{BAD_ARGUMENT} quand au moins un des
     arguments est incorrect (même si cela n'est pas précisé pour chaque
     fonction). Par exemple, cela se produit si vous appelez
     la fonction \texttt{type_case} avec \texttt{x=13} et \texttt{y=5142}.
  -
    fct_name: type_case
    fct_summary: Renvoie le type de la case
    fct_ret_type: int
    fct_arg:
      - [x, int, todo]
      - [y, int, todo]
  -
    fct_name: valeur_case
    fct_summary: Renvoie la valeur de la case
    fct_ret_type: int
    fct_arg:
      - [x, int, todo]
      - [y, int, todo]
  -
    fct_name: appartenance
    fct_summary: todo
    fct_ret_type: int
    fct_arg:
      - [x, int, todo]
      - [y, int, todo]
  -
    fct_name: type_monument
    fct_summary: todo
    fct_ret_type: int
    fct_arg:
      - [x, int, todo]
      - [y, int, todo]
  -
    fct_name: portee_monument
    fct_summary: todo
    fct_ret_type: int
    fct_arg:
      - [num_monument, int, todo]
  -
    fct_name: prestige_monument
    fct_summary: todo
    fct_ret_type: int
    fct_arg:
      - [num_monument, int, todo]
  -
    fct_name: numero_tour
    fct_summary: Renvoie le numero du tour
    fct_ret_type: int
  -
    fct_name: commence
    fct_summary: Numero du joueur qui commence
    fct_ret_type: int
  -
    fct_name: montant_encheres
    fct_summary: todo
    fct_ret_type: int
    fct_arg:
      - [num_joueur, int, todo]
  -
    fct_name: score
    fct_summary: todo
    fct_ret_type: int
    fct_arg:
      - [num_joueur, int, id du joueur]
  -
    fct_name: finances
    fct_summary: todo
    fct_ret_type: int
    fct_arg:
      - [num_joueur, int, id du joueur]
  -
    fct_name: monument_en_cours
    fct_summary: todo
    fct_ret_type: int
  -
    fct_name: distance
    fct_summary: todo
    fct_ret_type: int
    fct_arg:
      - [x1, int, la colonne du premier point]
      - [y1, int, la ligne du premier point]
      - [x2, int, la colonne du second point]
      - [y2, int, la ligne du second point]
  -
    fct_name: route_possible
    fct_summary: todo
    fct_ret_type: int
    fct_arg:
      - [x, int, la colonne]
      - [y, int, la ligne]
  -
    fct_name: construction_possible
    fct_summary: todo
    fct_ret_type: int
    fct_arg:
      - [x, int, la colonne]
      - [y, int, la ligne]
  -
    fct_name: cout_achat_maison
    fct_summary: todo
    fct_ret_type: int
  -
    fct_name: cout_achat_route
    fct_summary: todo
    fct_ret_type: int
  -
    fct_name: mon_tour
    fct_summary: todo
    fct_ret_type: bool

  - doc_extra: |
     \subsection{Fonctions d'action}
     Toutes les fonctions peuvent renvoyer les constantes
     \textbf{BAD_ARGUMENT} quand au moins un des
     arguments est incorrect (même si cela n'est pas précisé pour chaque
     fonction), ou \textbf{TOO_MUCH_ORDERS} quand vous avez envoyé trop 
     d'ordres à l'un de vos hamsters. TODO
  -
    fct_name: construire_route
    fct_summary: todo
    fct_ret_type: int
    fct_arg:
    - [x, int, la colonne]
    - [y, int, la ligne]
  -
    fct_name: construire_maison
    fct_summary: todo
    fct_ret_type: int
    fct_arg:
    - [x, int, la colonne]
    - [y, int, la ligne]
  -
    fct_name: reserver_case
    fct_summary: todo
    fct_ret_type: int
    fct_arg:
    - [x, int, la colonne]
    - [y, int, la ligne]
  -
    fct_name: detruire_maison
    fct_summary: todo
    fct_ret_type: int
    fct_arg:
    - [x, int, la colonne]
    - [y, int, la ligne]
  -
    fct_name: vendre_maison
    fct_summary: todo
    fct_ret_type: int
    fct_arg:
    - [x, int, la colonne]
    - [y, int, la ligne]
  -
    fct_name: encherir
    fct_summary: todo
    fct_ret_type: int
    fct_arg:
    - [montant, int, Le montant de votre enchère]
  -
    fct_name: construire_monument
    fct_summary: todo
    fct_ret_type: int
    fct_arg:
    - [x, int, la colonne]
    - [y, int, la ligne]

user_function:
  - doc_extra: |-
     \subsection{Ce qu'il faut faire}
     Chacun est libre de mener la stratégie qui lui semble la plus
     adaptée, et a entière liberté sur la façon de l'implémenter.
     Toutefois il est demandé d'écrire deux fonctions en particulier :
     une fonction qui sera appelée au début de la partie, et une autre
     qui sera appelée à chaque tour.
