conf:
  package_name: prolo2011
  client_rule_lib: tron
  server_rule_lib: tron
  player_lib: champion
  player_filename: prologin

constant:
  - doc_extra: \subsection{Constantes}
  - 
    cst_name: TAILLE_TERRAIN
    cst_val: 100
    cst_comment: Taille du terrain
  - 
    cst_name: FIN_PARTIE
    cst_val: 1500
    cst_comment: Nombre de tours avant la fin de la partie
  - 
    cst_name: MAX_PA
    cst_val: 3
    cst_comment: Nombre de points d'action par tour
  -
    cst_name: TAILLE_TRAINEE
    cst_val: 900
    cst_comment: Taille des traînées de moto

enum:
  - doc_extra: \subsection{Énumérations}
  -
    enum_name: erreur
    enum_summary: Énumération représentant une erreur renvoyée par une des fonctions d'action
    enum_field:
      - [ok, aucune erreur n'est survenue]
      - [id_invalide, identifiant invalide]
      - [position_invalide, la position spécifiée est invalide]
      - [plus_de_pa, vous n'avez pas assez de points d'action]
      - [pas_a_toi, l'unité n'est pas a vous]


struct:
  - doc_extra: \subsection{Structures}
  -
    str_name: position
    str_summary: Représente une position sur le terrain du jeu
    str_tuple: yes
    str_field:
      - [x, int, coordonnée en X]
      - [y, int, coordonnée en Y]
  -
    str_name: source_energie
    str_summary: Caracteristiques d'une source d'énergie
    str_tuple: no
    str_field:
      - [id, int, identifiant de la source d'énergie]
      - [pos, position, position de la source d'énergie]
      - [coef, int, coefficient representant les points d'énergie que la source va vous apporter]
  -
    str_name: trainee_moto
    str_summary: Représente une traînée de moto sur le terrain
    str_tuple: no
    str_field:
      - [id, int, identifiant de la traînee]
      - [emplacement, position array, position de chaque composant de la traînée de moto]
      - [team, int, identifiant de l'équipe qui possède cette traînée de moto]

function:
  - doc_extra: |
     \subsection{Fonctions d'information}
  -
    fct_name: mon_equipe
    fct_summary: Retourne le numéro de votre équipe
    fct_ret_type: int
    fct_arg: []
  -
    fct_name: scores
    fct_summary: Retourne les scores de chaque équipe
    fct_ret_type: int array
    fct_arg: []
  -
    fct_name: nombre_equipes
    fct_summary: Retourne le nombre d'équipes sur le terrain
    fct_ret_type: int
    fct_arg: []
  -
    fct_name: tour_actuel
    fct_summary: Retourne le numéro du tour actuel
    fct_ret_type: int
    fct_arg: []
  -
    fct_name: sources_energie
    fct_summary: Retourne la liste des sources d'énergie
    fct_ret_type: source_energie array
    fct_arg: []
  -
    fct_name: trainees_moto
    fct_summary: Retourne la liste des traînées de moto
    fct_ret_type: trainee_moto array
    fct_arg: []

  - type_case
  - bonus(team)

  - doc_extra: |
     \subsection{Fonctions d'action}
  -
    fct_name: deplacer
    fct_summary: Déplace une moto
    fct_ret_type: erreur
    fct_arg:
    - [id, int, identifiant de la moto à déplacer]
    - [de, position, position de l'extrémité que l'on déplace]
    - [vers, position, nouvelle position pour cette extrémité]
  -
    fct_name: couper_trainee_moto
    fct_summary:
      Coupe une traînée de moto en deux nouvelles traînées. « entre »
      et « et » doivent être deux positions adjacentes occupées par une
      même traînée de moto.
    fct_ret_type: erreur
    fct_arg:
    - [id, int, identifiant de la traînée de moto à couper]
    - [entre, position, nouvelle extrémité de la première traînée de moto
    - [et, position, nouvelle extrémité de la deuxième traînée de moto
  -
    fct_name: cancel
    fct_summary: Annuler l'action précédente
    fct_arg: []

  -enrouler (X, Y)
  -more_pa
  -agrandir (+ max(len, 5))
  -regeneration_machine
  -poser un point de croisement
  -merge
user_function:
  -
    fct_name: init_game
    fct_summary: Fonction appellée au début de la partie
    fct_ret_type: void
    fct_arg: []
  -
    fct_name: jouer
    fct_summary: Fonction appellée pour la phase de jeu
    fct_ret_type: void
    fct_arg: []
  -
    fct_name: end_game
    fct_summary: Fonction appellée à la fin de la partie
    fct_ret_type: void
    fct_arg: []

infos:
  -
    fct_name: sources_energie
    fct_arg: []
  -
    fct_name: trainees_moto
    fct_arg: []
  -
    fct_name: scores
    fct_arg: []
